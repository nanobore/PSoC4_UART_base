ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	cyImoFreqMhz2DpllOffset
 106 002e 0000     		.align	2
 107              		.type	cyImoFreqMhz2DpllOffset, %object
 108              		.size	cyImoFreqMhz2DpllOffset, 23
 109              	cyImoFreqMhz2DpllOffset:
 110 0030 EE       		.byte	-18
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 3


 111 0031 DB       		.byte	-37
 112 0032 C9       		.byte	-55
 113 0033 B9       		.byte	-71
 114 0034 AA       		.byte	-86
 115 0035 9B       		.byte	-101
 116 0036 8E       		.byte	-114
 117 0037 82       		.byte	-126
 118 0038 76       		.byte	118
 119 0039 6B       		.byte	107
 120 003a 60       		.byte	96
 121 003b 56       		.byte	86
 122 003c 4D       		.byte	77
 123 003d 44       		.byte	68
 124 003e 3B       		.byte	59
 125 003f 33       		.byte	51
 126 0040 2C       		.byte	44
 127 0041 24       		.byte	36
 128 0042 1D       		.byte	29
 129 0043 17       		.byte	23
 130 0044 10       		.byte	16
 131 0045 0A       		.byte	10
 132 0046 04       		.byte	4
 133              		.global	CySysClkPumpConfig
 134              		.data
 135              		.align	2
 136              		.type	CySysClkPumpConfig, %object
 137              		.size	CySysClkPumpConfig, 4
 138              	CySysClkPumpConfig:
 139 0010 01000000 		.word	1
 140              		.section	.text.CySysClkImoStart,"ax",%progbits
 141              		.align	2
 142              		.global	CySysClkImoStart
 143              		.code	16
 144              		.thumb_func
 145              		.type	CySysClkImoStart, %function
 146              	CySysClkImoStart:
 147              	.LFB1:
 148              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 4


  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 5


  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 149              		.loc 1 108 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 159              		.loc 1 109 0
 160 0004 044B     		ldr	r3, .L2
 161 0006 044A     		ldr	r2, .L2
 162 0008 1268     		ldr	r2, [r2]
 163 000a 8021     		movs	r1, #128
 164 000c 0906     		lsls	r1, r1, #24
 165 000e 0A43     		orrs	r2, r1
 166 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 6


 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 167              		.loc 1 124 0
 168 0012 C046     		nop
 169 0014 BD46     		mov	sp, r7
 170              		@ sp needed
 171 0016 80BD     		pop	{r7, pc}
 172              	.L3:
 173              		.align	2
 174              	.L2:
 175 0018 08010B40 		.word	1074462984
 176              		.cfi_endproc
 177              	.LFE1:
 178              		.size	CySysClkImoStart, .-CySysClkImoStart
 179              		.section	.text.CySysClkImoStop,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkImoStop
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkImoStop, %function
 185              	CySysClkImoStop:
 186              	.LFB2:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 140 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 7


 197              		.loc 1 142 0
 198 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 199              		.loc 1 149 0
 200 0008 044B     		ldr	r3, .L5
 201 000a 044A     		ldr	r2, .L5
 202 000c 1268     		ldr	r2, [r2]
 203 000e 5200     		lsls	r2, r2, #1
 204 0010 5208     		lsrs	r2, r2, #1
 205 0012 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 150 0
 207 0014 C046     		nop
 208 0016 BD46     		mov	sp, r7
 209              		@ sp needed
 210 0018 80BD     		pop	{r7, pc}
 211              	.L6:
 212 001a C046     		.align	2
 213              	.L5:
 214 001c 08010B40 		.word	1074462984
 215              		.cfi_endproc
 216              	.LFE2:
 217              		.size	CySysClkImoStop, .-CySysClkImoStop
 218              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 219              		.align	2
 220              		.global	CySysClkImoEnableWcoLock
 221              		.code	16
 222              		.thumb_func
 223              		.type	CySysClkImoEnableWcoLock, %function
 224              	CySysClkImoEnableWcoLock:
 225              	.LFB3:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 8


 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 226              		.loc 1 176 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 24
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 90B5     		push	{r4, r7, lr}
 231              		.cfi_def_cfa_offset 12
 232              		.cfi_offset 4, -12
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 87B0     		sub	sp, sp, #28
 236              		.cfi_def_cfa_offset 40
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 239              		.loc 1 184 0
 240 0006 0023     		movs	r3, #0
 241 0008 BB60     		str	r3, [r7, #8]
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 242              		.loc 1 187 0
 243 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 244 000e 031E     		subs	r3, r0, #0
 245 0010 00D1     		bne	.LCB81
 246 0012 7EE0     		b	.L17	@long jump
 247              	.LCB81:
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 248              		.loc 1 189 0
 249 0014 FC1D     		adds	r4, r7, #7
 250 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 251 001a 0300     		movs	r3, r0
 252 001c 2370     		strb	r3, [r4]
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 9


 253              		.loc 1 200 0
 254 001e 0323     		movs	r3, #3
 255 0020 3B61     		str	r3, [r7, #16]
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 256              		.loc 1 201 0
 257 0022 0023     		movs	r3, #0
 258 0024 7B61     		str	r3, [r7, #20]
 259 0026 11E0     		b	.L9
 260              	.L12:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 261              		.loc 1 203 0
 262 0028 3C4B     		ldr	r3, .L18
 263 002a 1B68     		ldr	r3, [r3]
 264 002c 1A00     		movs	r2, r3
 265 002e 3F23     		movs	r3, #63
 266 0030 1340     		ands	r3, r2
 267 0032 3B49     		ldr	r1, .L18+4
 268 0034 7A69     		ldr	r2, [r7, #20]
 269 0036 8A18     		adds	r2, r1, r2
 270 0038 1278     		ldrb	r2, [r2]
 271 003a 9342     		cmp	r3, r2
 272 003c 03D1     		bne	.L10
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 273              		.loc 1 205 0
 274 003e 7B69     		ldr	r3, [r7, #20]
 275 0040 0333     		adds	r3, r3, #3
 276 0042 3B61     		str	r3, [r7, #16]
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 277              		.loc 1 206 0
 278 0044 05E0     		b	.L11
 279              	.L10:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 280              		.loc 1 201 0 discriminator 2
 281 0046 7B69     		ldr	r3, [r7, #20]
 282 0048 0133     		adds	r3, r3, #1
 283 004a 7B61     		str	r3, [r7, #20]
 284              	.L9:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 285              		.loc 1 201 0 is_stmt 0 discriminator 1
 286 004c 7B69     		ldr	r3, [r7, #20]
 287 004e 2D2B     		cmp	r3, #45
 288 0050 EAD9     		bls	.L12
 289              	.L11:
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 10


 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 290              		.loc 1 225 0 is_stmt 1
 291 0052 344B     		ldr	r3, .L18+8
 292 0054 1B68     		ldr	r3, [r3]
 293 0056 1F22     		movs	r2, #31
 294 0058 1340     		ands	r3, r2
 295 005a 07D1     		bne	.L13
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 296              		.loc 1 227 0
 297 005c 314B     		ldr	r3, .L18+8
 298 005e 314A     		ldr	r2, .L18+8
 299 0060 1268     		ldr	r2, [r2]
 300 0062 1F21     		movs	r1, #31
 301 0064 8A43     		bics	r2, r1
 302 0066 0C21     		movs	r1, #12
 303 0068 0A43     		orrs	r2, r1
 304 006a 1A60     		str	r2, [r3]
 305              	.L13:
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 306              		.loc 1 232 0
 307 006c 2E4B     		ldr	r3, .L18+12
 308 006e 1B68     		ldr	r3, [r3]
 309 0070 2E4A     		ldr	r2, .L18+16
 310 0072 1340     		ands	r3, r2
 311 0074 FB60     		str	r3, [r7, #12]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 312              		.loc 1 238 0
 313 0076 3B69     		ldr	r3, [r7, #16]
 314 0078 2D4A     		ldr	r2, .L18+20
 315 007a 5343     		muls	r3, r2
 316 007c 8022     		movs	r2, #128
 317 007e D201     		lsls	r2, r2, #7
 318 0080 9446     		mov	ip, r2
 319 0082 6344     		add	r3, r3, ip
 320 0084 DB0B     		lsrs	r3, r3, #15
 321 0086 013B     		subs	r3, r3, #1
 322 0088 5B05     		lsls	r3, r3, #21
 323 008a 5B0D     		lsrs	r3, r3, #21
 324 008c FA68     		ldr	r2, [r7, #12]
 325 008e 1343     		orrs	r3, r2
 326 0090 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 11


 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 327              		.loc 1 241 0
 328 0092 FB68     		ldr	r3, [r7, #12]
 329 0094 A022     		movs	r2, #160
 330 0096 5203     		lsls	r2, r2, #13
 331 0098 1343     		orrs	r3, r2
 332 009a FB60     		str	r3, [r7, #12]
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 333              		.loc 1 244 0
 334 009c 3B69     		ldr	r3, [r7, #16]
 335 009e 192B     		cmp	r3, #25
 336 00a0 05D8     		bhi	.L14
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 337              		.loc 1 246 0
 338 00a2 FB68     		ldr	r3, [r7, #12]
 339 00a4 FF22     		movs	r2, #255
 340 00a6 9205     		lsls	r2, r2, #22
 341 00a8 1343     		orrs	r3, r2
 342 00aa FB60     		str	r3, [r7, #12]
 343 00ac 16E0     		b	.L15
 344              	.L14:
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 345              		.loc 1 250 0
 346 00ae 3B69     		ldr	r3, [r7, #16]
 347 00b0 204A     		ldr	r2, .L18+24
 348 00b2 9446     		mov	ip, r2
 349 00b4 6344     		add	r3, r3, ip
 350 00b6 1B78     		ldrb	r3, [r3]
 351 00b8 DBB2     		uxtb	r3, r3
 352 00ba 1900     		movs	r1, r3
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 353              		.loc 1 251 0
 354 00bc 3B69     		ldr	r3, [r7, #16]
 355 00be 1A3B     		subs	r3, r3, #26
 356 00c0 1D4A     		ldr	r2, .L18+28
 357 00c2 D35C     		ldrb	r3, [r2, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 358              		.loc 1 250 0
 359 00c4 CB18     		adds	r3, r1, r3
 360 00c6 BB60     		str	r3, [r7, #8]
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 361              		.loc 1 253 0
 362 00c8 BB68     		ldr	r3, [r7, #8]
 363 00ca FF2B     		cmp	r3, #255
 364 00cc 00D9     		bls	.L16
 365 00ce FF23     		movs	r3, #255
 366              	.L16:
 367 00d0 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 12


 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 368              		.loc 1 256 0
 369 00d2 BB68     		ldr	r3, [r7, #8]
 370 00d4 9B05     		lsls	r3, r3, #22
 371 00d6 FA68     		ldr	r2, [r7, #12]
 372 00d8 1343     		orrs	r3, r2
 373 00da FB60     		str	r3, [r7, #12]
 374              	.L15:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 375              		.loc 1 259 0
 376 00dc 124B     		ldr	r3, .L18+12
 377 00de FA68     		ldr	r2, [r7, #12]
 378 00e0 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 379              		.loc 1 261 0
 380 00e2 164B     		ldr	r3, .L18+32
 381 00e4 1B68     		ldr	r3, [r3]
 382 00e6 3B60     		str	r3, [r7]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 383              		.loc 1 262 0
 384 00e8 3020     		movs	r0, #48
 385 00ea FFF7FEFF 		bl	CySysFlashSetWaitCycles
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 386              		.loc 1 263 0
 387 00ee 144B     		ldr	r3, .L18+36
 388 00f0 134A     		ldr	r2, .L18+36
 389 00f2 1268     		ldr	r2, [r2]
 390 00f4 8021     		movs	r1, #128
 391 00f6 C905     		lsls	r1, r1, #23
 392 00f8 0A43     		orrs	r2, r1
 393 00fa 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 394              		.loc 1 264 0
 395 00fc 1420     		movs	r0, #20
 396 00fe FFF7FEFF 		bl	CyDelay
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 397              		.loc 1 265 0
 398 0102 0E4B     		ldr	r3, .L18+32
 399 0104 3A68     		ldr	r2, [r7]
 400 0106 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 401              		.loc 1 267 0
 402 0108 FB1D     		adds	r3, r7, #7
 403 010a 1B78     		ldrb	r3, [r3]
 404 010c 1800     		movs	r0, r3
 405 010e FFF7FEFF 		bl	CyExitCriticalSection
 406              	.L17:
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 269 0
 408 0112 C046     		nop
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 13


 409 0114 BD46     		mov	sp, r7
 410 0116 07B0     		add	sp, sp, #28
 411              		@ sp needed
 412 0118 90BD     		pop	{r4, r7, pc}
 413              	.L19:
 414 011a C046     		.align	2
 415              	.L18:
 416 011c 2CFF0B40 		.word	1074528044
 417 0120 00000000 		.word	cyImoFreqMhz2Reg
 418 0124 34FF0B40 		.word	1074528052
 419 0128 08002240 		.word	1075970056
 420 012c 00F800C0 		.word	-1073678336
 421 0130 40420F00 		.word	1000000
 422 0134 CDF1FF0F 		.word	268431821
 423 0138 00000000 		.word	cyImoFreqMhz2DpllOffset
 424 013c 30001040 		.word	1074790448
 425 0140 00002240 		.word	1075970048
 426              		.cfi_endproc
 427              	.LFE3:
 428              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 429              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 430              		.align	2
 431              		.global	CySysClkImoDisableWcoLock
 432              		.code	16
 433              		.thumb_func
 434              		.type	CySysClkImoDisableWcoLock, %function
 435              	CySysClkImoDisableWcoLock:
 436              	.LFB4:
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 437              		.loc 1 286 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 447              		.loc 1 287 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 14


 448 0004 044B     		ldr	r3, .L21
 449 0006 044A     		ldr	r2, .L21
 450 0008 1268     		ldr	r2, [r2]
 451 000a 0449     		ldr	r1, .L21+4
 452 000c 0A40     		ands	r2, r1
 453 000e 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/CyLib.c ****     }
 454              		.loc 1 288 0
 455 0010 C046     		nop
 456 0012 BD46     		mov	sp, r7
 457              		@ sp needed
 458 0014 80BD     		pop	{r7, pc}
 459              	.L22:
 460 0016 C046     		.align	2
 461              	.L21:
 462 0018 00002240 		.word	1075970048
 463 001c FFFFFFBF 		.word	-1073741825
 464              		.cfi_endproc
 465              	.LFE4:
 466              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 467              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 468              		.align	2
 469              		.global	CySysClkImoGetWcoLock
 470              		.code	16
 471              		.thumb_func
 472              		.type	CySysClkImoGetWcoLock, %function
 473              	CySysClkImoGetWcoLock:
 474              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 475              		.loc 1 305 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 485              		.loc 1 306 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 15


 486 0004 054B     		ldr	r3, .L27
 487 0006 1A68     		ldr	r2, [r3]
 488 0008 8023     		movs	r3, #128
 489 000a DB05     		lsls	r3, r3, #23
 490 000c 1340     		ands	r3, r2
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 491              		.loc 1 307 0
 492 000e 01D0     		beq	.L24
 493              		.loc 1 307 0 is_stmt 0 discriminator 1
 494 0010 0123     		movs	r3, #1
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 495              		.loc 1 306 0 is_stmt 1 discriminator 1
 496 0012 00E0     		b	.L26
 497              	.L24:
 498              		.loc 1 307 0 discriminator 2
 499 0014 0023     		movs	r3, #0
 500              	.L26:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 501              		.loc 1 309 0 discriminator 1
 502 0016 1800     		movs	r0, r3
 503 0018 BD46     		mov	sp, r7
 504              		@ sp needed
 505 001a 80BD     		pop	{r7, pc}
 506              	.L28:
 507              		.align	2
 508              	.L27:
 509 001c 00002240 		.word	1075970048
 510              		.cfi_endproc
 511              	.LFE5:
 512              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 513              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 514              		.align	2
 515              		.global	CySysClkWriteHfclkDirect
 516              		.code	16
 517              		.thumb_func
 518              		.type	CySysClkWriteHfclkDirect, %function
 519              	CySysClkWriteHfclkDirect:
 520              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 16


 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 17


 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 521              		.loc 1 430 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 16
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 90B5     		push	{r4, r7, lr}
 526              		.cfi_def_cfa_offset 12
 527              		.cfi_offset 4, -12
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 85B0     		sub	sp, sp, #20
 531              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 18


 532 0004 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 535              		.loc 1 434 0
 536 0008 0F23     		movs	r3, #15
 537 000a FC18     		adds	r4, r7, r3
 538 000c FFF7FEFF 		bl	CyEnterCriticalSection
 539 0010 0300     		movs	r3, r0
 540 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 541              		.loc 1 437 0
 542 0014 0B4B     		ldr	r3, .L30
 543 0016 1B68     		ldr	r3, [r3]
 544 0018 0722     		movs	r2, #7
 545 001a 9343     		bics	r3, r2
 546 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 547              		.loc 1 448 0
 548 001e 7B68     		ldr	r3, [r7, #4]
 549 0020 0722     		movs	r2, #7
 550 0022 1340     		ands	r3, r2
 551 0024 BA68     		ldr	r2, [r7, #8]
 552 0026 1343     		orrs	r3, r2
 553 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 554              		.loc 1 451 0
 555 002a 064B     		ldr	r3, .L30
 556 002c BA68     		ldr	r2, [r7, #8]
 557 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 558              		.loc 1 453 0
 559 0030 0F23     		movs	r3, #15
 560 0032 FB18     		adds	r3, r7, r3
 561 0034 1B78     		ldrb	r3, [r3]
 562 0036 1800     		movs	r0, r3
 563 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 454 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 19


 565 003c C046     		nop
 566 003e BD46     		mov	sp, r7
 567 0040 05B0     		add	sp, sp, #20
 568              		@ sp needed
 569 0042 90BD     		pop	{r4, r7, pc}
 570              	.L31:
 571              		.align	2
 572              	.L30:
 573 0044 00010B40 		.word	1074462976
 574              		.cfi_endproc
 575              	.LFE6:
 576              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 577              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 578              		.align	2
 579              		.global	CySysEnablePumpClock
 580              		.code	16
 581              		.thumb_func
 582              		.type	CySysEnablePumpClock, %function
 583              	CySysEnablePumpClock:
 584              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 585              		.loc 1 474 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 8
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 0000 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 82B0     		sub	sp, sp, #8
 594              		.cfi_def_cfa_offset 16
 595 0004 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 597 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 598              		.loc 1 476 0
 599 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 20


 600 000a 0122     		movs	r2, #1
 601 000c 1340     		ands	r3, r2
 602 000e 08D0     		beq	.L33
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 603              		.loc 1 478 0
 604 0010 0C4A     		ldr	r2, .L36
 605 0012 0C4B     		ldr	r3, .L36
 606 0014 1968     		ldr	r1, [r3]
 607 0016 0C4B     		ldr	r3, .L36+4
 608 0018 1B68     		ldr	r3, [r3]
 609 001a 5B06     		lsls	r3, r3, #25
 610 001c 0B43     		orrs	r3, r1
 611 001e 1360     		str	r3, [r2]
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 612              		.loc 1 498 0
 613 0020 0CE0     		b	.L35
 614              	.L33:
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 615              		.loc 1 482 0
 616 0022 084B     		ldr	r3, .L36
 617 0024 1B68     		ldr	r3, [r3]
 618 0026 5B0E     		lsrs	r3, r3, #25
 619 0028 0722     		movs	r2, #7
 620 002a 1A40     		ands	r2, r3
 621 002c 064B     		ldr	r3, .L36+4
 622 002e 1A60     		str	r2, [r3]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 623              		.loc 1 484 0
 624 0030 044B     		ldr	r3, .L36
 625 0032 044A     		ldr	r2, .L36
 626 0034 1268     		ldr	r2, [r2]
 627 0036 0549     		ldr	r1, .L36+8
 628 0038 0A40     		ands	r2, r1
 629 003a 1A60     		str	r2, [r3]
 630              	.L35:
 631              		.loc 1 498 0
 632 003c C046     		nop
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 21


 633 003e BD46     		mov	sp, r7
 634 0040 02B0     		add	sp, sp, #8
 635              		@ sp needed
 636 0042 80BD     		pop	{r7, pc}
 637              	.L37:
 638              		.align	2
 639              	.L36:
 640 0044 08010B40 		.word	1074462984
 641 0048 00000000 		.word	CySysClkPumpConfig
 642 004c FFFFFFF1 		.word	-234881025
 643              		.cfi_endproc
 644              	.LFE7:
 645              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 646              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 647              		.align	2
 648              		.global	CySysClkGetSysclkSource
 649              		.code	16
 650              		.thumb_func
 651              		.type	CySysClkGetSysclkSource, %function
 652              	CySysClkGetSysclkSource:
 653              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 654              		.loc 1 511 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 8
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658 0000 90B5     		push	{r4, r7, lr}
 659              		.cfi_def_cfa_offset 12
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 83B0     		sub	sp, sp, #12
 664              		.cfi_def_cfa_offset 24
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 667              		.loc 1 515 0
 668 0006 FC1D     		adds	r4, r7, #7
 669 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 670 000c 0300     		movs	r3, r0
 671 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 22


 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 672              		.loc 1 525 0
 673 0010 074B     		ldr	r3, .L40
 674 0012 1B68     		ldr	r3, [r3]
 675 0014 0722     		movs	r2, #7
 676 0016 1340     		ands	r3, r2
 677 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 678              		.loc 1 528 0
 679 001a FB1D     		adds	r3, r7, #7
 680 001c 1B78     		ldrb	r3, [r3]
 681 001e 1800     		movs	r0, r3
 682 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 683              		.loc 1 530 0
 684 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 685              		.loc 1 531 0
 686 0026 1800     		movs	r0, r3
 687 0028 BD46     		mov	sp, r7
 688 002a 03B0     		add	sp, sp, #12
 689              		@ sp needed
 690 002c 90BD     		pop	{r4, r7, pc}
 691              	.L41:
 692 002e C046     		.align	2
 693              	.L40:
 694 0030 00010B40 		.word	1074462976
 695              		.cfi_endproc
 696              	.LFE8:
 697              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 698              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 699              		.align	2
 700              		.global	CySysClkWriteSysclkDiv
 701              		.code	16
 702              		.thumb_func
 703              		.type	CySysClkWriteSysclkDiv, %function
 704              	CySysClkWriteSysclkDiv:
 705              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 23


 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 706              		.loc 1 566 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 16
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 90B5     		push	{r4, r7, lr}
 711              		.cfi_def_cfa_offset 12
 712              		.cfi_offset 4, -12
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 85B0     		sub	sp, sp, #20
 716              		.cfi_def_cfa_offset 32
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 720              		.loc 1 569 0
 721 0008 0F23     		movs	r3, #15
 722 000a FC18     		adds	r4, r7, r3
 723 000c FFF7FEFF 		bl	CyEnterCriticalSection
 724 0010 0300     		movs	r3, r0
 725 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 726              		.loc 1 571 0
 727 0014 0A4B     		ldr	r3, .L43
 728 0016 7A68     		ldr	r2, [r7, #4]
 729 0018 D104     		lsls	r1, r2, #19
 730 001a E022     		movs	r2, #224
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 24


 731 001c 9203     		lsls	r2, r2, #14
 732 001e 1140     		ands	r1, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 733              		.loc 1 573 0
 734 0020 074A     		ldr	r2, .L43
 735 0022 1268     		ldr	r2, [r2]
 736 0024 0748     		ldr	r0, .L43+4
 737 0026 0240     		ands	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 738              		.loc 1 572 0
 739 0028 0A43     		orrs	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 740              		.loc 1 571 0
 741 002a 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 742              		.loc 1 576 0
 743 002c 0F23     		movs	r3, #15
 744 002e FB18     		adds	r3, r7, r3
 745 0030 1B78     		ldrb	r3, [r3]
 746 0032 1800     		movs	r0, r3
 747 0034 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 748              		.loc 1 577 0
 749 0038 C046     		nop
 750 003a BD46     		mov	sp, r7
 751 003c 05B0     		add	sp, sp, #20
 752              		@ sp needed
 753 003e 90BD     		pop	{r4, r7, pc}
 754              	.L44:
 755              		.align	2
 756              	.L43:
 757 0040 00010B40 		.word	1074462976
 758 0044 FFFFC7FF 		.word	-3670017
 759              		.cfi_endproc
 760              	.LFE9:
 761              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 762              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 763              		.align	2
 764              		.global	CySysClkWriteImoFreq
 765              		.code	16
 766              		.thumb_func
 767              		.type	CySysClkWriteImoFreq, %function
 768              	CySysClkWriteImoFreq:
 769              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 25


 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 770              		.loc 1 624 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 40
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 90B5     		push	{r4, r7, lr}
 775              		.cfi_def_cfa_offset 12
 776              		.cfi_offset 4, -12
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 8BB0     		sub	sp, sp, #44
 780              		.cfi_def_cfa_offset 56
 781 0004 00AF     		add	r7, sp, #0
 782              		.cfi_def_cfa_register 7
 783 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 26


 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 784              		.loc 1 637 0
 785 0008 0023     		movs	r3, #0
 786 000a 7B62     		str	r3, [r7, #36]
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 787              		.loc 1 647 0
 788 000c 2323     		movs	r3, #35
 789 000e FC18     		adds	r4, r7, r3
 790 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 791 0014 0300     		movs	r3, r0
 792 0016 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 793              		.loc 1 650 0
 794 0018 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 795 001c 031E     		subs	r3, r0, #0
 796 001e 03D0     		beq	.L46
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797              		.loc 1 652 0
 798 0020 0123     		movs	r3, #1
 799 0022 7B62     		str	r3, [r7, #36]
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 800              		.loc 1 653 0
 801 0024 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 802              	.L46:
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 27


 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 803              		.loc 1 681 0
 804 0028 1B4B     		ldr	r3, .L48
 805 002a 1A68     		ldr	r2, [r3]
 806 002c 0823     		movs	r3, #8
 807 002e FB18     		adds	r3, r7, r3
 808 0030 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 809              		.loc 1 682 0
 810 0032 1A4B     		ldr	r3, .L48+4
 811 0034 1A68     		ldr	r2, [r3]
 812 0036 0823     		movs	r3, #8
 813 0038 FB18     		adds	r3, r7, r3
 814 003a 5A60     		str	r2, [r3, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 815              		.loc 1 683 0
 816 003c 7B68     		ldr	r3, [r7, #4]
 817 003e 033B     		subs	r3, r3, #3
 818 0040 174A     		ldr	r2, .L48+8
 819 0042 D35C     		ldrb	r3, [r2, r3]
 820 0044 1A00     		movs	r2, r3
 821 0046 0823     		movs	r3, #8
 822 0048 FB18     		adds	r3, r7, r3
 823 004a 9A60     		str	r2, [r3, #8]
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 824              		.loc 1 684 0
 825 004c 154B     		ldr	r3, .L48+12
 826 004e 1A68     		ldr	r2, [r3]
 827 0050 0823     		movs	r3, #8
 828 0052 FB18     		adds	r3, r7, r3
 829 0054 DA60     		str	r2, [r3, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830              		.loc 1 686 0
 831 0056 1823     		movs	r3, #24
 832 0058 FB18     		adds	r3, r7, r3
 833 005a 134A     		ldr	r2, .L48+16
 834 005c 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 835              		.loc 1 689 0
 836 005e 0823     		movs	r3, #8
 837 0060 FA18     		adds	r2, r7, r3
 838 0062 1823     		movs	r3, #24
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 28


 839 0064 FB18     		adds	r3, r7, r3
 840 0066 5A60     		str	r2, [r3, #4]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 841              		.loc 1 691 0
 842 0068 104B     		ldr	r3, .L48+20
 843 006a 1822     		movs	r2, #24
 844 006c BA18     		adds	r2, r7, r2
 845 006e 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 846              		.loc 1 692 0
 847 0070 0F4B     		ldr	r3, .L48+24
 848 0072 104A     		ldr	r2, .L48+28
 849 0074 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 850              		.loc 1 693 0
 851 0076 0D4B     		ldr	r3, .L48+20
 852 0078 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 29


 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 30


 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 853              		.loc 1 810 0
 854 007a 7B6A     		ldr	r3, [r7, #36]
 855 007c 012B     		cmp	r3, #1
 856 007e 01D1     		bne	.L47
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 857              		.loc 1 812 0
 858 0080 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 859              	.L47:
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 860              		.loc 1 823 0
 861 0084 2323     		movs	r3, #35
 862 0086 FB18     		adds	r3, r7, r3
 863 0088 1B78     		ldrb	r3, [r3]
 864 008a 1800     		movs	r0, r3
 865 008c FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 866              		.loc 1 824 0
 867 0090 C046     		nop
 868 0092 BD46     		mov	sp, r7
 869 0094 0BB0     		add	sp, sp, #44
 870              		@ sp needed
 871 0096 90BD     		pop	{r4, r7, pc}
 872              	.L49:
 873              		.align	2
 874              	.L48:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 31


 875 0098 08010B40 		.word	1074462984
 876 009c 00010B40 		.word	1074462976
 877 00a0 00000000 		.word	cyImoFreqMhz2Reg
 878 00a4 30001040 		.word	1074790448
 879 00a8 B6EA0000 		.word	60086
 880 00ac 08001040 		.word	1074790408
 881 00b0 04001040 		.word	1074790404
 882 00b4 17000080 		.word	-2147483625
 883              		.cfi_endproc
 884              	.LFE10:
 885              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 886              		.section	.text.CySysLvdEnable,"ax",%progbits
 887              		.align	2
 888              		.global	CySysLvdEnable
 889              		.code	16
 890              		.thumb_func
 891              		.type	CySysLvdEnable, %function
 892              	CySysLvdEnable:
 893              	.LFB11:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 32


 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 33


 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 34


 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 35


1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 36


1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 37


1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 38


1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 39


1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 40


1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 41


1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 42


1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 43


1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 44


1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 45


1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 46


1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 47


1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 48


1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 49


1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 50


1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 51


1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 52


2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 53


2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 54


2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 894              		.loc 1 2119 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 82B0     		sub	sp, sp, #8
 903              		.cfi_def_cfa_offset 16
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 906 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 907              		.loc 1 2121 0
 908 0008 144B     		ldr	r3, .L51
 909 000a 144A     		ldr	r2, .L51
 910 000c 1268     		ldr	r2, [r2]
 911 000e 0221     		movs	r1, #2
 912 0010 8A43     		bics	r2, r1
 913 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 914              		.loc 1 2124 0
 915 0014 124B     		ldr	r3, .L51+4
 916 0016 124A     		ldr	r2, .L51+4
 917 0018 1268     		ldr	r2, [r2]
 918 001a 1E21     		movs	r1, #30
 919 001c 8A43     		bics	r2, r1
 920 001e 1100     		movs	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 921              		.loc 1 2125 0
 922 0020 7A68     		ldr	r2, [r7, #4]
 923 0022 5200     		lsls	r2, r2, #1
 924 0024 1E20     		movs	r0, #30
 925 0026 0240     		ands	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 926              		.loc 1 2124 0
 927 0028 0A43     		orrs	r2, r1
 928 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 929              		.loc 1 2128 0
 930 002c 0C4B     		ldr	r3, .L51+4
 931 002e 0C4A     		ldr	r2, .L51+4
 932 0030 1268     		ldr	r2, [r2]
 933 0032 0121     		movs	r1, #1
 934 0034 0A43     		orrs	r2, r1
 935 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 55


2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 936              		.loc 1 2131 0
 937 0038 FA23     		movs	r3, #250
 938 003a 9B00     		lsls	r3, r3, #2
 939 003c 1800     		movs	r0, r3
 940 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 941              		.loc 1 2134 0
 942 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 943              		.loc 1 2137 0
 944 0046 054B     		ldr	r3, .L51
 945 0048 044A     		ldr	r2, .L51
 946 004a 1268     		ldr	r2, [r2]
 947 004c 0221     		movs	r1, #2
 948 004e 0A43     		orrs	r2, r1
 949 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 950              		.loc 1 2138 0
 951 0052 C046     		nop
 952 0054 BD46     		mov	sp, r7
 953 0056 02B0     		add	sp, sp, #8
 954              		@ sp needed
 955 0058 80BD     		pop	{r7, pc}
 956              	.L52:
 957 005a C046     		.align	2
 958              	.L51:
 959 005c 08000B40 		.word	1074462728
 960 0060 18000B40 		.word	1074462744
 961              		.cfi_endproc
 962              	.LFE11:
 963              		.size	CySysLvdEnable, .-CySysLvdEnable
 964              		.section	.text.CySysLvdDisable,"ax",%progbits
 965              		.align	2
 966              		.global	CySysLvdDisable
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySysLvdDisable, %function
 970              	CySysLvdDisable:
 971              	.LFB12:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 972              		.loc 1 2149 0
 973              		.cfi_startproc
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 56


 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 982              		.loc 1 2150 0
 983 0004 074B     		ldr	r3, .L54
 984 0006 074A     		ldr	r2, .L54
 985 0008 1268     		ldr	r2, [r2]
 986 000a 0221     		movs	r1, #2
 987 000c 8A43     		bics	r2, r1
 988 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 989              		.loc 1 2151 0
 990 0010 054B     		ldr	r3, .L54+4
 991 0012 054A     		ldr	r2, .L54+4
 992 0014 1268     		ldr	r2, [r2]
 993 0016 0121     		movs	r1, #1
 994 0018 8A43     		bics	r2, r1
 995 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 996              		.loc 1 2152 0
 997 001c C046     		nop
 998 001e BD46     		mov	sp, r7
 999              		@ sp needed
 1000 0020 80BD     		pop	{r7, pc}
 1001              	.L55:
 1002 0022 C046     		.align	2
 1003              	.L54:
 1004 0024 08000B40 		.word	1074462728
 1005 0028 18000B40 		.word	1074462744
 1006              		.cfi_endproc
 1007              	.LFE12:
 1008              		.size	CySysLvdDisable, .-CySysLvdDisable
 1009              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1010              		.align	2
 1011              		.global	CySysLvdGetInterruptSource
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	CySysLvdGetInterruptSource, %function
 1015              	CySysLvdGetInterruptSource:
 1016              	.LFB13:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 57


2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 1017              		.loc 1 2167 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1027              		.loc 1 2168 0
 1028 0004 034B     		ldr	r3, .L58
 1029 0006 1B68     		ldr	r3, [r3]
 1030 0008 0222     		movs	r2, #2
 1031 000a 1340     		ands	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 1032              		.loc 1 2169 0
 1033 000c 1800     		movs	r0, r3
 1034 000e BD46     		mov	sp, r7
 1035              		@ sp needed
 1036 0010 80BD     		pop	{r7, pc}
 1037              	.L59:
 1038 0012 C046     		.align	2
 1039              	.L58:
 1040 0014 04000B40 		.word	1074462724
 1041              		.cfi_endproc
 1042              	.LFE13:
 1043              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1044              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1045              		.align	2
 1046              		.global	CySysLvdClearInterrupt
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	CySysLvdClearInterrupt, %function
 1050              	CySysLvdClearInterrupt:
 1051              	.LFB14:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 1052              		.loc 1 2183 0
 1053              		.cfi_startproc
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 58


 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1062              		.loc 1 2184 0
 1063 0004 024B     		ldr	r3, .L61
 1064 0006 0222     		movs	r2, #2
 1065 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 1066              		.loc 1 2185 0
 1067 000a C046     		nop
 1068 000c BD46     		mov	sp, r7
 1069              		@ sp needed
 1070 000e 80BD     		pop	{r7, pc}
 1071              	.L62:
 1072              		.align	2
 1073              	.L61:
 1074 0010 04000B40 		.word	1074462724
 1075              		.cfi_endproc
 1076              	.LFE14:
 1077              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1078              		.section	.text.CySysGetResetReason,"ax",%progbits
 1079              		.align	2
 1080              		.global	CySysGetResetReason
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	CySysGetResetReason, %function
 1084              	CySysGetResetReason:
 1085              	.LFB15:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 59


2209:Generated_Source\PSoC4/CyLib.c **** {
 1086              		.loc 1 2209 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 16
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 84B0     		sub	sp, sp, #16
 1095              		.cfi_def_cfa_offset 24
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1099              		.loc 1 2212 0
 1100 0008 7B68     		ldr	r3, [r7, #4]
 1101 000a 1922     		movs	r2, #25
 1102 000c 1340     		ands	r3, r2
 1103 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1104              		.loc 1 2213 0
 1105 0010 064B     		ldr	r3, .L65
 1106 0012 1B68     		ldr	r3, [r3]
 1107 0014 1922     		movs	r2, #25
 1108 0016 1340     		ands	r3, r2
 1109 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1110              		.loc 1 2215 0
 1111 001a 044B     		ldr	r3, .L65
 1112 001c 7A68     		ldr	r2, [r7, #4]
 1113 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1114              		.loc 1 2217 0
 1115 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 1116              		.loc 1 2218 0
 1117 0022 1800     		movs	r0, r3
 1118 0024 BD46     		mov	sp, r7
 1119 0026 04B0     		add	sp, sp, #16
 1120              		@ sp needed
 1121 0028 80BD     		pop	{r7, pc}
 1122              	.L66:
 1123 002a C046     		.align	2
 1124              	.L65:
 1125 002c 00030B40 		.word	1074463488
 1126              		.cfi_endproc
 1127              	.LFE15:
 1128              		.size	CySysGetResetReason, .-CySysGetResetReason
 1129              		.section	.text.CyDisableInts,"ax",%progbits
 1130              		.align	2
 1131              		.global	CyDisableInts
 1132              		.code	16
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 60


 1133              		.thumb_func
 1134              		.type	CyDisableInts, %function
 1135              	CyDisableInts:
 1136              	.LFB16:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1137              		.loc 1 2232 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 8
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141 0000 80B5     		push	{r7, lr}
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 82B0     		sub	sp, sp, #8
 1146              		.cfi_def_cfa_offset 16
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1149              		.loc 1 2236 0
 1150 0006 064B     		ldr	r3, .L69
 1151 0008 1B68     		ldr	r3, [r3]
 1152 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1153              		.loc 1 2239 0
 1154 000c 044B     		ldr	r3, .L69
 1155 000e 0122     		movs	r2, #1
 1156 0010 5242     		rsbs	r2, r2, #0
 1157 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1158              		.loc 1 2241 0
 1159 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 1160              		.loc 1 2242 0
 1161 0016 1800     		movs	r0, r3
 1162 0018 BD46     		mov	sp, r7
 1163 001a 02B0     		add	sp, sp, #8
 1164              		@ sp needed
 1165 001c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 61


 1166              	.L70:
 1167 001e C046     		.align	2
 1168              	.L69:
 1169 0020 80E100E0 		.word	-536813184
 1170              		.cfi_endproc
 1171              	.LFE16:
 1172              		.size	CyDisableInts, .-CyDisableInts
 1173              		.section	.text.CyEnableInts,"ax",%progbits
 1174              		.align	2
 1175              		.global	CyEnableInts
 1176              		.code	16
 1177              		.thumb_func
 1178              		.type	CyEnableInts, %function
 1179              	CyEnableInts:
 1180              	.LFB17:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1181              		.loc 1 2255 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 82B0     		sub	sp, sp, #8
 1190              		.cfi_def_cfa_offset 16
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1194              		.loc 1 2256 0
 1195 0008 034B     		ldr	r3, .L72
 1196 000a 7A68     		ldr	r2, [r7, #4]
 1197 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1198              		.loc 1 2257 0
 1199 000e C046     		nop
 1200 0010 BD46     		mov	sp, r7
 1201 0012 02B0     		add	sp, sp, #8
 1202              		@ sp needed
 1203 0014 80BD     		pop	{r7, pc}
 1204              	.L73:
 1205 0016 C046     		.align	2
 1206              	.L72:
 1207 0018 00E100E0 		.word	-536813312
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 62


 1208              		.cfi_endproc
 1209              	.LFE17:
 1210              		.size	CyEnableInts, .-CyEnableInts
 1211              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1212              		.align	2
 1213              		.global	CyIntSetSysVector
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	CyIntSetSysVector, %function
 1217              	CyIntSetSysVector:
 1218              	.LFB18:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1219              		.loc 1 2280 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 16
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 84B0     		sub	sp, sp, #16
 1228              		.cfi_def_cfa_offset 24
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 0200     		movs	r2, r0
 1232 0008 3960     		str	r1, [r7]
 1233 000a FB1D     		adds	r3, r7, #7
 1234 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1235              		.loc 1 2282 0
 1236 000e 8023     		movs	r3, #128
 1237 0010 9B05     		lsls	r3, r3, #22
 1238 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 63


2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1239              		.loc 1 2284 0
 1240 0014 FB1D     		adds	r3, r7, #7
 1241 0016 1B78     		ldrb	r3, [r3]
 1242 0018 0F2B     		cmp	r3, #15
 1243 001a 02D9     		bls	.L75
 1244              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1245 001c 0020     		movs	r0, #0
 1246 001e FFF7FEFF 		bl	CyHalt
 1247              	.L75:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1248              		.loc 1 2287 0 is_stmt 1
 1249 0022 FB1D     		adds	r3, r7, #7
 1250 0024 1B78     		ldrb	r3, [r3]
 1251 0026 9B00     		lsls	r3, r3, #2
 1252 0028 FA68     		ldr	r2, [r7, #12]
 1253 002a D318     		adds	r3, r2, r3
 1254 002c 1B68     		ldr	r3, [r3]
 1255 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1256              		.loc 1 2290 0
 1257 0030 FB1D     		adds	r3, r7, #7
 1258 0032 1B78     		ldrb	r3, [r3]
 1259 0034 9B00     		lsls	r3, r3, #2
 1260 0036 FA68     		ldr	r2, [r7, #12]
 1261 0038 D318     		adds	r3, r2, r3
 1262 003a 3A68     		ldr	r2, [r7]
 1263 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1264              		.loc 1 2292 0
 1265 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1266              		.loc 1 2293 0
 1267 0040 1800     		movs	r0, r3
 1268 0042 BD46     		mov	sp, r7
 1269 0044 04B0     		add	sp, sp, #16
 1270              		@ sp needed
 1271 0046 80BD     		pop	{r7, pc}
 1272              		.cfi_endproc
 1273              	.LFE18:
 1274              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1275              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1276              		.align	2
 1277              		.global	CyIntGetSysVector
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	CyIntGetSysVector, %function
 1281              	CyIntGetSysVector:
 1282              	.LFB19:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 64


2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1283              		.loc 1 2314 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 16
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287 0000 80B5     		push	{r7, lr}
 1288              		.cfi_def_cfa_offset 8
 1289              		.cfi_offset 7, -8
 1290              		.cfi_offset 14, -4
 1291 0002 84B0     		sub	sp, sp, #16
 1292              		.cfi_def_cfa_offset 24
 1293 0004 00AF     		add	r7, sp, #0
 1294              		.cfi_def_cfa_register 7
 1295 0006 0200     		movs	r2, r0
 1296 0008 FB1D     		adds	r3, r7, #7
 1297 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1298              		.loc 1 2315 0
 1299 000c 8023     		movs	r3, #128
 1300 000e 9B05     		lsls	r3, r3, #22
 1301 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1302              		.loc 1 2317 0
 1303 0012 FB1D     		adds	r3, r7, #7
 1304 0014 1B78     		ldrb	r3, [r3]
 1305 0016 0F2B     		cmp	r3, #15
 1306 0018 02D9     		bls	.L78
 1307              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1308 001a 0020     		movs	r0, #0
 1309 001c FFF7FEFF 		bl	CyHalt
 1310              	.L78:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1311              		.loc 1 2319 0 is_stmt 1
 1312 0020 FB1D     		adds	r3, r7, #7
 1313 0022 1B78     		ldrb	r3, [r3]
 1314 0024 9B00     		lsls	r3, r3, #2
 1315 0026 FA68     		ldr	r2, [r7, #12]
 1316 0028 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 65


 1317 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1318              		.loc 1 2320 0
 1319 002c 1800     		movs	r0, r3
 1320 002e BD46     		mov	sp, r7
 1321 0030 04B0     		add	sp, sp, #16
 1322              		@ sp needed
 1323 0032 80BD     		pop	{r7, pc}
 1324              		.cfi_endproc
 1325              	.LFE19:
 1326              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1327              		.section	.text.CyIntSetVector,"ax",%progbits
 1328              		.align	2
 1329              		.global	CyIntSetVector
 1330              		.code	16
 1331              		.thumb_func
 1332              		.type	CyIntSetVector, %function
 1333              	CyIntSetVector:
 1334              	.LFB20:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1335              		.loc 1 2336 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 16
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 0000 80B5     		push	{r7, lr}
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 7, -8
 1342              		.cfi_offset 14, -4
 1343 0002 84B0     		sub	sp, sp, #16
 1344              		.cfi_def_cfa_offset 24
 1345 0004 00AF     		add	r7, sp, #0
 1346              		.cfi_def_cfa_register 7
 1347 0006 0200     		movs	r2, r0
 1348 0008 3960     		str	r1, [r7]
 1349 000a FB1D     		adds	r3, r7, #7
 1350 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1351              		.loc 1 2338 0
 1352 000e 8023     		movs	r3, #128
 1353 0010 9B05     		lsls	r3, r3, #22
 1354 0012 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 66


2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1355              		.loc 1 2340 0
 1356 0014 FB1D     		adds	r3, r7, #7
 1357 0016 1B78     		ldrb	r3, [r3]
 1358 0018 1F2B     		cmp	r3, #31
 1359 001a 02D9     		bls	.L81
 1360              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1361 001c 0020     		movs	r0, #0
 1362 001e FFF7FEFF 		bl	CyHalt
 1363              	.L81:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1364              		.loc 1 2343 0 is_stmt 1
 1365 0022 FB1D     		adds	r3, r7, #7
 1366 0024 1B78     		ldrb	r3, [r3]
 1367 0026 1033     		adds	r3, r3, #16
 1368 0028 9B00     		lsls	r3, r3, #2
 1369 002a FA68     		ldr	r2, [r7, #12]
 1370 002c D318     		adds	r3, r2, r3
 1371 002e 1B68     		ldr	r3, [r3]
 1372 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1373              		.loc 1 2346 0
 1374 0032 FB1D     		adds	r3, r7, #7
 1375 0034 1B78     		ldrb	r3, [r3]
 1376 0036 1033     		adds	r3, r3, #16
 1377 0038 9B00     		lsls	r3, r3, #2
 1378 003a FA68     		ldr	r2, [r7, #12]
 1379 003c D318     		adds	r3, r2, r3
 1380 003e 3A68     		ldr	r2, [r7]
 1381 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1382              		.loc 1 2348 0
 1383 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1384              		.loc 1 2349 0
 1385 0044 1800     		movs	r0, r3
 1386 0046 BD46     		mov	sp, r7
 1387 0048 04B0     		add	sp, sp, #16
 1388              		@ sp needed
 1389 004a 80BD     		pop	{r7, pc}
 1390              		.cfi_endproc
 1391              	.LFE20:
 1392              		.size	CyIntSetVector, .-CyIntSetVector
 1393              		.section	.text.CyIntGetVector,"ax",%progbits
 1394              		.align	2
 1395              		.global	CyIntGetVector
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	CyIntGetVector, %function
 1399              	CyIntGetVector:
 1400              	.LFB21:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 67


2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1401              		.loc 1 2364 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 16
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405 0000 80B5     		push	{r7, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 84B0     		sub	sp, sp, #16
 1410              		.cfi_def_cfa_offset 24
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
 1413 0006 0200     		movs	r2, r0
 1414 0008 FB1D     		adds	r3, r7, #7
 1415 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1416              		.loc 1 2365 0
 1417 000c 8023     		movs	r3, #128
 1418 000e 9B05     		lsls	r3, r3, #22
 1419 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1420              		.loc 1 2367 0
 1421 0012 FB1D     		adds	r3, r7, #7
 1422 0014 1B78     		ldrb	r3, [r3]
 1423 0016 1F2B     		cmp	r3, #31
 1424 0018 02D9     		bls	.L84
 1425              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1426 001a 0020     		movs	r0, #0
 1427 001c FFF7FEFF 		bl	CyHalt
 1428              	.L84:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1429              		.loc 1 2369 0 is_stmt 1
 1430 0020 FB1D     		adds	r3, r7, #7
 1431 0022 1B78     		ldrb	r3, [r3]
 1432 0024 1033     		adds	r3, r3, #16
 1433 0026 9B00     		lsls	r3, r3, #2
 1434 0028 FA68     		ldr	r2, [r7, #12]
 1435 002a D318     		adds	r3, r2, r3
 1436 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 68


 1437              		.loc 1 2370 0
 1438 002e 1800     		movs	r0, r3
 1439 0030 BD46     		mov	sp, r7
 1440 0032 04B0     		add	sp, sp, #16
 1441              		@ sp needed
 1442 0034 80BD     		pop	{r7, pc}
 1443              		.cfi_endproc
 1444              	.LFE21:
 1445              		.size	CyIntGetVector, .-CyIntGetVector
 1446 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1447              		.align	2
 1448              		.global	CyIntSetPriority
 1449              		.code	16
 1450              		.thumb_func
 1451              		.type	CyIntSetPriority, %function
 1452              	CyIntSetPriority:
 1453              	.LFB22:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1454              		.loc 1 2383 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 24
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458 0000 90B5     		push	{r4, r7, lr}
 1459              		.cfi_def_cfa_offset 12
 1460              		.cfi_offset 4, -12
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 1463 0002 87B0     		sub	sp, sp, #28
 1464              		.cfi_def_cfa_offset 40
 1465 0004 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 1467 0006 0200     		movs	r2, r0
 1468 0008 FB1D     		adds	r3, r7, #7
 1469 000a 1A70     		strb	r2, [r3]
 1470 000c BB1D     		adds	r3, r7, #6
 1471 000e 0A1C     		adds	r2, r1, #0
 1472 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1473              		.loc 1 2388 0
 1474 0012 BB1D     		adds	r3, r7, #6
 1475 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 69


 1476 0016 032B     		cmp	r3, #3
 1477 0018 02D9     		bls	.L87
 1478              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1479 001a 0020     		movs	r0, #0
 1480 001c FFF7FEFF 		bl	CyHalt
 1481              	.L87:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1482              		.loc 1 2389 0 is_stmt 1
 1483 0020 FB1D     		adds	r3, r7, #7
 1484 0022 1B78     		ldrb	r3, [r3]
 1485 0024 1F2B     		cmp	r3, #31
 1486 0026 02D9     		bls	.L88
 1487              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1488 0028 0020     		movs	r0, #0
 1489 002a FFF7FEFF 		bl	CyHalt
 1490              	.L88:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1491              		.loc 1 2391 0 is_stmt 1
 1492 002e FB1D     		adds	r3, r7, #7
 1493 0030 1B78     		ldrb	r3, [r3]
 1494 0032 0322     		movs	r2, #3
 1495 0034 1340     		ands	r3, r2
 1496 0036 DB00     		lsls	r3, r3, #3
 1497 0038 0633     		adds	r3, r3, #6
 1498 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1499              		.loc 1 2393 0
 1500 003c 1323     		movs	r3, #19
 1501 003e FC18     		adds	r4, r7, r3
 1502 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1503 0044 0300     		movs	r3, r0
 1504 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1505              		.loc 1 2395 0
 1506 0048 FB1D     		adds	r3, r7, #7
 1507 004a 1B78     		ldrb	r3, [r3]
 1508 004c 9B08     		lsrs	r3, r3, #2
 1509 004e DBB2     		uxtb	r3, r3
 1510 0050 9B00     		lsls	r3, r3, #2
 1511 0052 144A     		ldr	r2, .L89
 1512 0054 9446     		mov	ip, r2
 1513 0056 6344     		add	r3, r3, ip
 1514 0058 1B68     		ldr	r3, [r3]
 1515 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1516              		.loc 1 2396 0
 1517 005c 0322     		movs	r2, #3
 1518 005e 7B69     		ldr	r3, [r7, #20]
 1519 0060 9A40     		lsls	r2, r2, r3
 1520 0062 1300     		movs	r3, r2
 1521 0064 DA43     		mvns	r2, r3
 1522 0066 FB68     		ldr	r3, [r7, #12]
 1523 0068 1340     		ands	r3, r2
 1524 006a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 70


2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1525              		.loc 1 2397 0
 1526 006c BB1D     		adds	r3, r7, #6
 1527 006e 1A78     		ldrb	r2, [r3]
 1528 0070 7B69     		ldr	r3, [r7, #20]
 1529 0072 9A40     		lsls	r2, r2, r3
 1530 0074 1300     		movs	r3, r2
 1531 0076 FA68     		ldr	r2, [r7, #12]
 1532 0078 1343     		orrs	r3, r2
 1533 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1534              		.loc 1 2398 0
 1535 007c FB1D     		adds	r3, r7, #7
 1536 007e 1B78     		ldrb	r3, [r3]
 1537 0080 9B08     		lsrs	r3, r3, #2
 1538 0082 DBB2     		uxtb	r3, r3
 1539 0084 9B00     		lsls	r3, r3, #2
 1540 0086 074A     		ldr	r2, .L89
 1541 0088 9446     		mov	ip, r2
 1542 008a 6344     		add	r3, r3, ip
 1543 008c FA68     		ldr	r2, [r7, #12]
 1544 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1545              		.loc 1 2400 0
 1546 0090 1323     		movs	r3, #19
 1547 0092 FB18     		adds	r3, r7, r3
 1548 0094 1B78     		ldrb	r3, [r3]
 1549 0096 1800     		movs	r0, r3
 1550 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1551              		.loc 1 2401 0
 1552 009c C046     		nop
 1553 009e BD46     		mov	sp, r7
 1554 00a0 07B0     		add	sp, sp, #28
 1555              		@ sp needed
 1556 00a2 90BD     		pop	{r4, r7, pc}
 1557              	.L90:
 1558              		.align	2
 1559              	.L89:
 1560 00a4 00E400E0 		.word	-536812544
 1561              		.cfi_endproc
 1562              	.LFE22:
 1563              		.size	CyIntSetPriority, .-CyIntSetPriority
 1564              		.section	.text.CyIntGetPriority,"ax",%progbits
 1565              		.align	2
 1566              		.global	CyIntGetPriority
 1567              		.code	16
 1568              		.thumb_func
 1569              		.type	CyIntGetPriority, %function
 1570              	CyIntGetPriority:
 1571              	.LFB23:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 71


2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1572              		.loc 1 2417 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 16
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576 0000 80B5     		push	{r7, lr}
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 7, -8
 1579              		.cfi_offset 14, -4
 1580 0002 84B0     		sub	sp, sp, #16
 1581              		.cfi_def_cfa_offset 24
 1582 0004 00AF     		add	r7, sp, #0
 1583              		.cfi_def_cfa_register 7
 1584 0006 0200     		movs	r2, r0
 1585 0008 FB1D     		adds	r3, r7, #7
 1586 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1587              		.loc 1 2420 0
 1588 000c FB1D     		adds	r3, r7, #7
 1589 000e 1B78     		ldrb	r3, [r3]
 1590 0010 1F2B     		cmp	r3, #31
 1591 0012 02D9     		bls	.L92
 1592              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1593 0014 0020     		movs	r0, #0
 1594 0016 FFF7FEFF 		bl	CyHalt
 1595              	.L92:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1596              		.loc 1 2422 0 is_stmt 1
 1597 001a FB1D     		adds	r3, r7, #7
 1598 001c 1B78     		ldrb	r3, [r3]
 1599 001e 9B08     		lsrs	r3, r3, #2
 1600 0020 DBB2     		uxtb	r3, r3
 1601 0022 9B00     		lsls	r3, r3, #2
 1602 0024 0B4A     		ldr	r2, .L94
 1603 0026 9446     		mov	ip, r2
 1604 0028 6344     		add	r3, r3, ip
 1605 002a 1A68     		ldr	r2, [r3]
 1606 002c FB1D     		adds	r3, r7, #7
 1607 002e 1B78     		ldrb	r3, [r3]
 1608 0030 0321     		movs	r1, #3
 1609 0032 0B40     		ands	r3, r1
 1610 0034 DB00     		lsls	r3, r3, #3
 1611 0036 0633     		adds	r3, r3, #6
 1612 0038 DA40     		lsrs	r2, r2, r3
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 72


 1613 003a 0F23     		movs	r3, #15
 1614 003c FB18     		adds	r3, r7, r3
 1615 003e 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1616              		.loc 1 2424 0
 1617 0040 0F23     		movs	r3, #15
 1618 0042 FB18     		adds	r3, r7, r3
 1619 0044 1B78     		ldrb	r3, [r3]
 1620 0046 0322     		movs	r2, #3
 1621 0048 1340     		ands	r3, r2
 1622 004a DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1623              		.loc 1 2425 0
 1624 004c 1800     		movs	r0, r3
 1625 004e BD46     		mov	sp, r7
 1626 0050 04B0     		add	sp, sp, #16
 1627              		@ sp needed
 1628 0052 80BD     		pop	{r7, pc}
 1629              	.L95:
 1630              		.align	2
 1631              	.L94:
 1632 0054 00E400E0 		.word	-536812544
 1633              		.cfi_endproc
 1634              	.LFE23:
 1635              		.size	CyIntGetPriority, .-CyIntGetPriority
 1636              		.section	.text.CyIntEnable,"ax",%progbits
 1637              		.align	2
 1638              		.global	CyIntEnable
 1639              		.code	16
 1640              		.thumb_func
 1641              		.type	CyIntEnable, %function
 1642              	CyIntEnable:
 1643              	.LFB24:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1644              		.loc 1 2438 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 8
 1647              		@ frame_needed = 1, uses_anonymous_args = 0
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 82B0     		sub	sp, sp, #8
 1653              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 73


 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
 1656 0006 0200     		movs	r2, r0
 1657 0008 FB1D     		adds	r3, r7, #7
 1658 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1659              		.loc 1 2439 0
 1660 000c 064B     		ldr	r3, .L97
 1661 000e FA1D     		adds	r2, r7, #7
 1662 0010 1278     		ldrb	r2, [r2]
 1663 0012 1F21     		movs	r1, #31
 1664 0014 0A40     		ands	r2, r1
 1665 0016 0121     		movs	r1, #1
 1666 0018 9140     		lsls	r1, r1, r2
 1667 001a 0A00     		movs	r2, r1
 1668 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 2440 0
 1670 001e C046     		nop
 1671 0020 BD46     		mov	sp, r7
 1672 0022 02B0     		add	sp, sp, #8
 1673              		@ sp needed
 1674 0024 80BD     		pop	{r7, pc}
 1675              	.L98:
 1676 0026 C046     		.align	2
 1677              	.L97:
 1678 0028 00E100E0 		.word	-536813312
 1679              		.cfi_endproc
 1680              	.LFE24:
 1681              		.size	CyIntEnable, .-CyIntEnable
 1682              		.section	.text.CyIntGetState,"ax",%progbits
 1683              		.align	2
 1684              		.global	CyIntGetState
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CyIntGetState, %function
 1688              	CyIntGetState:
 1689              	.LFB25:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1690              		.loc 1 2456 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 74


 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694 0000 80B5     		push	{r7, lr}
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 7, -8
 1697              		.cfi_offset 14, -4
 1698 0002 82B0     		sub	sp, sp, #8
 1699              		.cfi_def_cfa_offset 16
 1700 0004 00AF     		add	r7, sp, #0
 1701              		.cfi_def_cfa_register 7
 1702 0006 0200     		movs	r2, r0
 1703 0008 FB1D     		adds	r3, r7, #7
 1704 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1705              		.loc 1 2458 0
 1706 000c 074B     		ldr	r3, .L101
 1707 000e 1A68     		ldr	r2, [r3]
 1708 0010 FB1D     		adds	r3, r7, #7
 1709 0012 1B78     		ldrb	r3, [r3]
 1710 0014 1F21     		movs	r1, #31
 1711 0016 0B40     		ands	r3, r1
 1712 0018 DA40     		lsrs	r2, r2, r3
 1713 001a 1300     		movs	r3, r2
 1714 001c DBB2     		uxtb	r3, r3
 1715 001e 0122     		movs	r2, #1
 1716 0020 1340     		ands	r3, r2
 1717 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1718              		.loc 1 2459 0
 1719 0024 1800     		movs	r0, r3
 1720 0026 BD46     		mov	sp, r7
 1721 0028 02B0     		add	sp, sp, #8
 1722              		@ sp needed
 1723 002a 80BD     		pop	{r7, pc}
 1724              	.L102:
 1725              		.align	2
 1726              	.L101:
 1727 002c 00E100E0 		.word	-536813312
 1728              		.cfi_endproc
 1729              	.LFE25:
 1730              		.size	CyIntGetState, .-CyIntGetState
 1731              		.section	.text.CyIntDisable,"ax",%progbits
 1732              		.align	2
 1733              		.global	CyIntDisable
 1734              		.code	16
 1735              		.thumb_func
 1736              		.type	CyIntDisable, %function
 1737              	CyIntDisable:
 1738              	.LFB26:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 75


2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1739              		.loc 1 2472 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 8
 1742              		@ frame_needed = 1, uses_anonymous_args = 0
 1743 0000 80B5     		push	{r7, lr}
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 7, -8
 1746              		.cfi_offset 14, -4
 1747 0002 82B0     		sub	sp, sp, #8
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 0200     		movs	r2, r0
 1752 0008 FB1D     		adds	r3, r7, #7
 1753 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1754              		.loc 1 2473 0
 1755 000c 064B     		ldr	r3, .L104
 1756 000e FA1D     		adds	r2, r7, #7
 1757 0010 1278     		ldrb	r2, [r2]
 1758 0012 1F21     		movs	r1, #31
 1759 0014 0A40     		ands	r2, r1
 1760 0016 0121     		movs	r1, #1
 1761 0018 9140     		lsls	r1, r1, r2
 1762 001a 0A00     		movs	r2, r1
 1763 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1764              		.loc 1 2474 0
 1765 001e C046     		nop
 1766 0020 BD46     		mov	sp, r7
 1767 0022 02B0     		add	sp, sp, #8
 1768              		@ sp needed
 1769 0024 80BD     		pop	{r7, pc}
 1770              	.L105:
 1771 0026 C046     		.align	2
 1772              	.L104:
 1773 0028 80E100E0 		.word	-536813184
 1774              		.cfi_endproc
 1775              	.LFE26:
 1776              		.size	CyIntDisable, .-CyIntDisable
 1777              		.section	.text.CyIntSetPending,"ax",%progbits
 1778              		.align	2
 1779              		.global	CyIntSetPending
 1780              		.code	16
 1781              		.thumb_func
 1782              		.type	CyIntSetPending, %function
 1783              	CyIntSetPending:
 1784              	.LFB27:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 76


2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1785              		.loc 1 2486 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 8
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789 0000 80B5     		push	{r7, lr}
 1790              		.cfi_def_cfa_offset 8
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 82B0     		sub	sp, sp, #8
 1794              		.cfi_def_cfa_offset 16
 1795 0004 00AF     		add	r7, sp, #0
 1796              		.cfi_def_cfa_register 7
 1797 0006 0200     		movs	r2, r0
 1798 0008 FB1D     		adds	r3, r7, #7
 1799 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1800              		.loc 1 2487 0
 1801 000c 064B     		ldr	r3, .L107
 1802 000e FA1D     		adds	r2, r7, #7
 1803 0010 1278     		ldrb	r2, [r2]
 1804 0012 1F21     		movs	r1, #31
 1805 0014 0A40     		ands	r2, r1
 1806 0016 0121     		movs	r1, #1
 1807 0018 9140     		lsls	r1, r1, r2
 1808 001a 0A00     		movs	r2, r1
 1809 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 2488 0
 1811 001e C046     		nop
 1812 0020 BD46     		mov	sp, r7
 1813 0022 02B0     		add	sp, sp, #8
 1814              		@ sp needed
 1815 0024 80BD     		pop	{r7, pc}
 1816              	.L108:
 1817 0026 C046     		.align	2
 1818              	.L107:
 1819 0028 00E200E0 		.word	-536813056
 1820              		.cfi_endproc
 1821              	.LFE27:
 1822              		.size	CyIntSetPending, .-CyIntSetPending
 1823              		.section	.text.CyIntClearPending,"ax",%progbits
 1824              		.align	2
 1825              		.global	CyIntClearPending
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CyIntClearPending, %function
 1829              	CyIntClearPending:
 1830              	.LFB28:
2489:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 77


2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 2501 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 8
 1834              		@ frame_needed = 1, uses_anonymous_args = 0
 1835 0000 80B5     		push	{r7, lr}
 1836              		.cfi_def_cfa_offset 8
 1837              		.cfi_offset 7, -8
 1838              		.cfi_offset 14, -4
 1839 0002 82B0     		sub	sp, sp, #8
 1840              		.cfi_def_cfa_offset 16
 1841 0004 00AF     		add	r7, sp, #0
 1842              		.cfi_def_cfa_register 7
 1843 0006 0200     		movs	r2, r0
 1844 0008 FB1D     		adds	r3, r7, #7
 1845 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1846              		.loc 1 2502 0
 1847 000c 064B     		ldr	r3, .L110
 1848 000e FA1D     		adds	r2, r7, #7
 1849 0010 1278     		ldrb	r2, [r2]
 1850 0012 1F21     		movs	r1, #31
 1851 0014 0A40     		ands	r2, r1
 1852 0016 0121     		movs	r1, #1
 1853 0018 9140     		lsls	r1, r1, r2
 1854 001a 0A00     		movs	r2, r1
 1855 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1856              		.loc 1 2503 0
 1857 001e C046     		nop
 1858 0020 BD46     		mov	sp, r7
 1859 0022 02B0     		add	sp, sp, #8
 1860              		@ sp needed
 1861 0024 80BD     		pop	{r7, pc}
 1862              	.L111:
 1863 0026 C046     		.align	2
 1864              	.L110:
 1865 0028 80E200E0 		.word	-536812928
 1866              		.cfi_endproc
 1867              	.LFE28:
 1868              		.size	CyIntClearPending, .-CyIntClearPending
 1869              		.section	.text.CyHalt,"ax",%progbits
 1870              		.align	2
 1871              		.global	CyHalt
 1872              		.code	16
 1873              		.thumb_func
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 78


 1874              		.type	CyHalt, %function
 1875              	CyHalt:
 1876              	.LFB29:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1877              		.loc 1 2516 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 8
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881 0000 80B5     		push	{r7, lr}
 1882              		.cfi_def_cfa_offset 8
 1883              		.cfi_offset 7, -8
 1884              		.cfi_offset 14, -4
 1885 0002 82B0     		sub	sp, sp, #8
 1886              		.cfi_def_cfa_offset 16
 1887 0004 00AF     		add	r7, sp, #0
 1888              		.cfi_def_cfa_register 7
 1889 0006 0200     		movs	r2, r0
 1890 0008 FB1D     		adds	r3, r7, #7
 1891 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1892              		.loc 1 2525 0
 1893              		.syntax divided
 1894              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1895 000c 01BE     		    bkpt    1
 1896              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1897              		.loc 1 2529 0
 1898              		.thumb
 1899              		.syntax unified
 1900 000e C046     		nop
 1901 0010 BD46     		mov	sp, r7
 1902 0012 02B0     		add	sp, sp, #8
 1903              		@ sp needed
 1904 0014 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 79


 1905              		.cfi_endproc
 1906              	.LFE29:
 1907              		.size	CyHalt, .-CyHalt
 1908 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1909              		.align	2
 1910              		.global	CySoftwareReset
 1911              		.code	16
 1912              		.thumb_func
 1913              		.type	CySoftwareReset, %function
 1914              	CySoftwareReset:
 1915              	.LFB30:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1916              		.loc 1 2540 0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 0
 1919              		@ frame_needed = 1, uses_anonymous_args = 0
 1920 0000 80B5     		push	{r7, lr}
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 00AF     		add	r7, sp, #0
 1925              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1926              		.loc 1 2545 0
 1927 0004 054B     		ldr	r3, .L114
 1928 0006 054A     		ldr	r2, .L114
 1929 0008 1268     		ldr	r2, [r2]
 1930 000a 1204     		lsls	r2, r2, #16
 1931 000c 120C     		lsrs	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1932              		.loc 1 2546 0
 1933 000e 0449     		ldr	r1, .L114+4
 1934 0010 0A43     		orrs	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1935              		.loc 1 2545 0
 1936 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1937              		.loc 1 2547 0
 1938 0014 C046     		nop
 1939 0016 BD46     		mov	sp, r7
 1940              		@ sp needed
 1941 0018 80BD     		pop	{r7, pc}
 1942              	.L115:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 80


 1943 001a C046     		.align	2
 1944              	.L114:
 1945 001c 0CED00E0 		.word	-536810228
 1946 0020 0400FA05 		.word	100270084
 1947              		.cfi_endproc
 1948              	.LFE30:
 1949              		.size	CySoftwareReset, .-CySoftwareReset
 1950              		.section	.text.CyDelay,"ax",%progbits
 1951              		.align	2
 1952              		.global	CyDelay
 1953              		.code	16
 1954              		.thumb_func
 1955              		.type	CyDelay, %function
 1956              	CyDelay:
 1957              	.LFB31:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1958              		.loc 1 2560 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 8
 1961              		@ frame_needed = 1, uses_anonymous_args = 0
 1962 0000 80B5     		push	{r7, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 7, -8
 1965              		.cfi_offset 14, -4
 1966 0002 82B0     		sub	sp, sp, #8
 1967              		.cfi_def_cfa_offset 16
 1968 0004 00AF     		add	r7, sp, #0
 1969              		.cfi_def_cfa_register 7
 1970 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1971              		.loc 1 2561 0
 1972 0008 09E0     		b	.L117
 1973              	.L118:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1974              		.loc 1 2566 0
 1975 000a 0D4B     		ldr	r3, .L119
 1976 000c 1B68     		ldr	r3, [r3]
 1977 000e 1800     		movs	r0, r3
 1978 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1979              		.loc 1 2567 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 81


 1980 0014 7B68     		ldr	r3, [r7, #4]
 1981 0016 0B4A     		ldr	r2, .L119+4
 1982 0018 9446     		mov	ip, r2
 1983 001a 6344     		add	r3, r3, ip
 1984 001c 7B60     		str	r3, [r7, #4]
 1985              	.L117:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1986              		.loc 1 2561 0
 1987 001e 7A68     		ldr	r2, [r7, #4]
 1988 0020 8023     		movs	r3, #128
 1989 0022 1B02     		lsls	r3, r3, #8
 1990 0024 9A42     		cmp	r2, r3
 1991 0026 F0D8     		bhi	.L118
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1992              		.loc 1 2570 0
 1993 0028 074B     		ldr	r3, .L119+8
 1994 002a 1B68     		ldr	r3, [r3]
 1995 002c 7A68     		ldr	r2, [r7, #4]
 1996 002e 5343     		muls	r3, r2
 1997 0030 1800     		movs	r0, r3
 1998 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1999              		.loc 1 2571 0
 2000 0036 C046     		nop
 2001 0038 BD46     		mov	sp, r7
 2002 003a 02B0     		add	sp, sp, #8
 2003              		@ sp needed
 2004 003c 80BD     		pop	{r7, pc}
 2005              	.L120:
 2006 003e C046     		.align	2
 2007              	.L119:
 2008 0040 00000000 		.word	cydelay32kMs
 2009 0044 0080FFFF 		.word	-32768
 2010 0048 00000000 		.word	cydelayFreqKhz
 2011              		.cfi_endproc
 2012              	.LFE31:
 2013              		.size	CyDelay, .-CyDelay
 2014              		.section	.text.CyDelayUs,"ax",%progbits
 2015              		.align	2
 2016              		.global	CyDelayUs
 2017              		.code	16
 2018              		.thumb_func
 2019              		.type	CyDelayUs, %function
 2020              	CyDelayUs:
 2021              	.LFB32:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 82


2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 2022              		.loc 1 2583 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 8
 2025              		@ frame_needed = 1, uses_anonymous_args = 0
 2026 0000 80B5     		push	{r7, lr}
 2027              		.cfi_def_cfa_offset 8
 2028              		.cfi_offset 7, -8
 2029              		.cfi_offset 14, -4
 2030 0002 82B0     		sub	sp, sp, #8
 2031              		.cfi_def_cfa_offset 16
 2032 0004 00AF     		add	r7, sp, #0
 2033              		.cfi_def_cfa_register 7
 2034 0006 0200     		movs	r2, r0
 2035 0008 BB1D     		adds	r3, r7, #6
 2036 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2037              		.loc 1 2584 0
 2038 000c BB1D     		adds	r3, r7, #6
 2039 000e 1B88     		ldrh	r3, [r3]
 2040 0010 044A     		ldr	r2, .L122
 2041 0012 1278     		ldrb	r2, [r2]
 2042 0014 5343     		muls	r3, r2
 2043 0016 1800     		movs	r0, r3
 2044 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 2045              		.loc 1 2585 0
 2046 001c C046     		nop
 2047 001e BD46     		mov	sp, r7
 2048 0020 02B0     		add	sp, sp, #8
 2049              		@ sp needed
 2050 0022 80BD     		pop	{r7, pc}
 2051              	.L123:
 2052              		.align	2
 2053              	.L122:
 2054 0024 00000000 		.word	cydelayFreqMhz
 2055              		.cfi_endproc
 2056              	.LFE32:
 2057              		.size	CyDelayUs, .-CyDelayUs
 2058              		.global	__aeabi_uidiv
 2059              		.section	.text.CyDelayFreq,"ax",%progbits
 2060              		.align	2
 2061              		.global	CyDelayFreq
 2062              		.code	16
 2063              		.thumb_func
 2064              		.type	CyDelayFreq, %function
 2065              	CyDelayFreq:
 2066              	.LFB33:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 83


2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 2067              		.loc 1 2597 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 8
 2070              		@ frame_needed = 1, uses_anonymous_args = 0
 2071 0000 80B5     		push	{r7, lr}
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 7, -8
 2074              		.cfi_offset 14, -4
 2075 0002 82B0     		sub	sp, sp, #8
 2076              		.cfi_def_cfa_offset 16
 2077 0004 00AF     		add	r7, sp, #0
 2078              		.cfi_def_cfa_register 7
 2079 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2080              		.loc 1 2598 0
 2081 0008 7B68     		ldr	r3, [r7, #4]
 2082 000a 002B     		cmp	r3, #0
 2083 000c 03D0     		beq	.L125
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2084              		.loc 1 2600 0
 2085 000e 154B     		ldr	r3, .L127
 2086 0010 7A68     		ldr	r2, [r7, #4]
 2087 0012 1A60     		str	r2, [r3]
 2088 0014 02E0     		b	.L126
 2089              	.L125:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2090              		.loc 1 2604 0
 2091 0016 134B     		ldr	r3, .L127
 2092 0018 134A     		ldr	r2, .L127+4
 2093 001a 1A60     		str	r2, [r3]
 2094              	.L126:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2095              		.loc 1 2607 0
 2096 001c 114B     		ldr	r3, .L127
 2097 001e 1B68     		ldr	r3, [r3]
 2098 0020 124A     		ldr	r2, .L127+8
 2099 0022 9446     		mov	ip, r2
 2100 0024 6344     		add	r3, r3, ip
 2101 0026 1249     		ldr	r1, .L127+12
 2102 0028 1800     		movs	r0, r3
 2103 002a FFF7FEFF 		bl	__aeabi_uidiv
 2104 002e 0300     		movs	r3, r0
 2105 0030 DAB2     		uxtb	r2, r3
 2106 0032 104B     		ldr	r3, .L127+16
 2107 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2108              		.loc 1 2608 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 84


 2109 0036 0B4B     		ldr	r3, .L127
 2110 0038 1B68     		ldr	r3, [r3]
 2111 003a 0F4A     		ldr	r2, .L127+20
 2112 003c 9A18     		adds	r2, r3, r2
 2113 003e FA23     		movs	r3, #250
 2114 0040 9900     		lsls	r1, r3, #2
 2115 0042 1000     		movs	r0, r2
 2116 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2117 0048 0300     		movs	r3, r0
 2118 004a 1A00     		movs	r2, r3
 2119 004c 0B4B     		ldr	r3, .L127+24
 2120 004e 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2121              		.loc 1 2609 0
 2122 0050 0A4B     		ldr	r3, .L127+24
 2123 0052 1B68     		ldr	r3, [r3]
 2124 0054 DA03     		lsls	r2, r3, #15
 2125 0056 0A4B     		ldr	r3, .L127+28
 2126 0058 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 2127              		.loc 1 2610 0
 2128 005a C046     		nop
 2129 005c BD46     		mov	sp, r7
 2130 005e 02B0     		add	sp, sp, #8
 2131              		@ sp needed
 2132 0060 80BD     		pop	{r7, pc}
 2133              	.L128:
 2134 0062 C046     		.align	2
 2135              	.L127:
 2136 0064 00000000 		.word	cydelayFreqHz
 2137 0068 00366E01 		.word	24000000
 2138 006c 3F420F00 		.word	999999
 2139 0070 40420F00 		.word	1000000
 2140 0074 00000000 		.word	cydelayFreqMhz
 2141 0078 E7030000 		.word	999
 2142 007c 00000000 		.word	cydelayFreqKhz
 2143 0080 00000000 		.word	cydelay32kMs
 2144              		.cfi_endproc
 2145              	.LFE33:
 2146              		.size	CyDelayFreq, .-CyDelayFreq
 2147              		.section	.text.CySysTickStart,"ax",%progbits
 2148              		.align	2
 2149              		.global	CySysTickStart
 2150              		.code	16
 2151              		.thumb_func
 2152              		.type	CySysTickStart, %function
 2153              	CySysTickStart:
 2154              	.LFB34:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 85


2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 2155              		.loc 1 2629 0
 2156              		.cfi_startproc
 2157              		@ args = 0, pretend = 0, frame = 0
 2158              		@ frame_needed = 1, uses_anonymous_args = 0
 2159 0000 80B5     		push	{r7, lr}
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 7, -8
 2162              		.cfi_offset 14, -4
 2163 0002 00AF     		add	r7, sp, #0
 2164              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2165              		.loc 1 2630 0
 2166 0004 064B     		ldr	r3, .L131
 2167 0006 1B68     		ldr	r3, [r3]
 2168 0008 002B     		cmp	r3, #0
 2169 000a 04D1     		bne	.L130
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2170              		.loc 1 2632 0
 2171 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2172              		.loc 1 2633 0
 2173 0010 034B     		ldr	r3, .L131
 2174 0012 0122     		movs	r2, #1
 2175 0014 1A60     		str	r2, [r3]
 2176              	.L130:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2177              		.loc 1 2636 0
 2178 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 2179              		.loc 1 2637 0
 2180 001a C046     		nop
 2181 001c BD46     		mov	sp, r7
 2182              		@ sp needed
 2183 001e 80BD     		pop	{r7, pc}
 2184              	.L132:
 2185              		.align	2
 2186              	.L131:
 2187 0020 00000000 		.word	CySysTickInitVar
 2188              		.cfi_endproc
 2189              	.LFE34:
 2190              		.size	CySysTickStart, .-CySysTickStart
 2191              		.section	.text.CySysTickInit,"ax",%progbits
 2192              		.align	2
 2193              		.global	CySysTickInit
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 86


 2194              		.code	16
 2195              		.thumb_func
 2196              		.type	CySysTickInit, %function
 2197              	CySysTickInit:
 2198              	.LFB35:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2199              		.loc 1 2658 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 8
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 82B0     		sub	sp, sp, #8
 2208              		.cfi_def_cfa_offset 16
 2209 0004 00AF     		add	r7, sp, #0
 2210              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2211              		.loc 1 2661 0
 2212 0006 0023     		movs	r3, #0
 2213 0008 7B60     		str	r3, [r7, #4]
 2214 000a 07E0     		b	.L134
 2215              	.L135:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2216              		.loc 1 2663 0 discriminator 3
 2217 000c 114B     		ldr	r3, .L136
 2218 000e 7A68     		ldr	r2, [r7, #4]
 2219 0010 9200     		lsls	r2, r2, #2
 2220 0012 0021     		movs	r1, #0
 2221 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2222              		.loc 1 2661 0 discriminator 3
 2223 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 87


 2224 0018 0133     		adds	r3, r3, #1
 2225 001a 7B60     		str	r3, [r7, #4]
 2226              	.L134:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2227              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2228 001c 7B68     		ldr	r3, [r7, #4]
 2229 001e 042B     		cmp	r3, #4
 2230 0020 F4D9     		bls	.L135
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2231              		.loc 1 2666 0 is_stmt 1
 2232 0022 0D4B     		ldr	r3, .L136+4
 2233 0024 1900     		movs	r1, r3
 2234 0026 0F20     		movs	r0, #15
 2235 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2236              		.loc 1 2669 0
 2237 002c 0120     		movs	r0, #1
 2238 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2239              		.loc 1 2672 0
 2240 0032 0A4B     		ldr	r3, .L136+8
 2241 0034 1A68     		ldr	r2, [r3]
 2242 0036 FA23     		movs	r3, #250
 2243 0038 9900     		lsls	r1, r3, #2
 2244 003a 1000     		movs	r0, r2
 2245 003c FFF7FEFF 		bl	__aeabi_uidiv
 2246 0040 0300     		movs	r3, r0
 2247 0042 1800     		movs	r0, r3
 2248 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2249              		.loc 1 2673 0
 2250 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c **** }
 2251              		.loc 1 2674 0
 2252 004c C046     		nop
 2253 004e BD46     		mov	sp, r7
 2254 0050 02B0     		add	sp, sp, #8
 2255              		@ sp needed
 2256 0052 80BD     		pop	{r7, pc}
 2257              	.L137:
 2258              		.align	2
 2259              	.L136:
 2260 0054 00000000 		.word	CySysTickCallbacks
 2261 0058 00000000 		.word	CySysTickServiceCallbacks
 2262 005c 00000000 		.word	cydelayFreqHz
 2263              		.cfi_endproc
 2264              	.LFE35:
 2265              		.size	CySysTickInit, .-CySysTickInit
 2266              		.section	.text.CySysTickEnable,"ax",%progbits
 2267              		.align	2
 2268              		.global	CySysTickEnable
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 88


 2269              		.code	16
 2270              		.thumb_func
 2271              		.type	CySysTickEnable, %function
 2272              	CySysTickEnable:
 2273              	.LFB36:
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 2274              		.loc 1 2688 0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 1, uses_anonymous_args = 0
 2278 0000 80B5     		push	{r7, lr}
 2279              		.cfi_def_cfa_offset 8
 2280              		.cfi_offset 7, -8
 2281              		.cfi_offset 14, -4
 2282 0002 00AF     		add	r7, sp, #0
 2283              		.cfi_def_cfa_register 7
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2284              		.loc 1 2689 0
 2285 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2286              		.loc 1 2690 0
 2287 0008 044B     		ldr	r3, .L139
 2288 000a 044A     		ldr	r2, .L139
 2289 000c 1268     		ldr	r2, [r2]
 2290 000e 0121     		movs	r1, #1
 2291 0010 0A43     		orrs	r2, r1
 2292 0012 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** }
 2293              		.loc 1 2691 0
 2294 0014 C046     		nop
 2295 0016 BD46     		mov	sp, r7
 2296              		@ sp needed
 2297 0018 80BD     		pop	{r7, pc}
 2298              	.L140:
 2299 001a C046     		.align	2
 2300              	.L139:
 2301 001c 10E000E0 		.word	-536813552
 2302              		.cfi_endproc
 2303              	.LFE36:
 2304              		.size	CySysTickEnable, .-CySysTickEnable
 2305              		.section	.text.CySysTickStop,"ax",%progbits
 2306              		.align	2
 2307              		.global	CySysTickStop
 2308              		.code	16
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 89


 2309              		.thumb_func
 2310              		.type	CySysTickStop, %function
 2311              	CySysTickStop:
 2312              	.LFB37:
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 2313              		.loc 1 2705 0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 0
 2316              		@ frame_needed = 1, uses_anonymous_args = 0
 2317 0000 80B5     		push	{r7, lr}
 2318              		.cfi_def_cfa_offset 8
 2319              		.cfi_offset 7, -8
 2320              		.cfi_offset 14, -4
 2321 0002 00AF     		add	r7, sp, #0
 2322              		.cfi_def_cfa_register 7
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2323              		.loc 1 2706 0
 2324 0004 044B     		ldr	r3, .L142
 2325 0006 044A     		ldr	r2, .L142
 2326 0008 1268     		ldr	r2, [r2]
 2327 000a 0121     		movs	r1, #1
 2328 000c 8A43     		bics	r2, r1
 2329 000e 1A60     		str	r2, [r3]
2707:Generated_Source\PSoC4/CyLib.c **** }
 2330              		.loc 1 2707 0
 2331 0010 C046     		nop
 2332 0012 BD46     		mov	sp, r7
 2333              		@ sp needed
 2334 0014 80BD     		pop	{r7, pc}
 2335              	.L143:
 2336 0016 C046     		.align	2
 2337              	.L142:
 2338 0018 10E000E0 		.word	-536813552
 2339              		.cfi_endproc
 2340              	.LFE37:
 2341              		.size	CySysTickStop, .-CySysTickStop
 2342              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2343              		.align	2
 2344              		.global	CySysTickEnableInterrupt
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	CySysTickEnableInterrupt, %function
 2348              	CySysTickEnableInterrupt:
 2349              	.LFB38:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 90


2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 2350              		.loc 1 2721 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354 0000 80B5     		push	{r7, lr}
 2355              		.cfi_def_cfa_offset 8
 2356              		.cfi_offset 7, -8
 2357              		.cfi_offset 14, -4
 2358 0002 00AF     		add	r7, sp, #0
 2359              		.cfi_def_cfa_register 7
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2360              		.loc 1 2722 0
 2361 0004 044B     		ldr	r3, .L145
 2362 0006 044A     		ldr	r2, .L145
 2363 0008 1268     		ldr	r2, [r2]
 2364 000a 0221     		movs	r1, #2
 2365 000c 0A43     		orrs	r2, r1
 2366 000e 1A60     		str	r2, [r3]
2723:Generated_Source\PSoC4/CyLib.c **** }
 2367              		.loc 1 2723 0
 2368 0010 C046     		nop
 2369 0012 BD46     		mov	sp, r7
 2370              		@ sp needed
 2371 0014 80BD     		pop	{r7, pc}
 2372              	.L146:
 2373 0016 C046     		.align	2
 2374              	.L145:
 2375 0018 10E000E0 		.word	-536813552
 2376              		.cfi_endproc
 2377              	.LFE38:
 2378              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2379              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2380              		.align	2
 2381              		.global	CySysTickDisableInterrupt
 2382              		.code	16
 2383              		.thumb_func
 2384              		.type	CySysTickDisableInterrupt, %function
 2385              	CySysTickDisableInterrupt:
 2386              	.LFB39:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 91


2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 2387              		.loc 1 2737 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 1, uses_anonymous_args = 0
 2391 0000 80B5     		push	{r7, lr}
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 00AF     		add	r7, sp, #0
 2396              		.cfi_def_cfa_register 7
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2397              		.loc 1 2738 0
 2398 0004 044B     		ldr	r3, .L148
 2399 0006 044A     		ldr	r2, .L148
 2400 0008 1268     		ldr	r2, [r2]
 2401 000a 0221     		movs	r1, #2
 2402 000c 8A43     		bics	r2, r1
 2403 000e 1A60     		str	r2, [r3]
2739:Generated_Source\PSoC4/CyLib.c **** }
 2404              		.loc 1 2739 0
 2405 0010 C046     		nop
 2406 0012 BD46     		mov	sp, r7
 2407              		@ sp needed
 2408 0014 80BD     		pop	{r7, pc}
 2409              	.L149:
 2410 0016 C046     		.align	2
 2411              	.L148:
 2412 0018 10E000E0 		.word	-536813552
 2413              		.cfi_endproc
 2414              	.LFE39:
 2415              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2416              		.section	.text.CySysTickSetReload,"ax",%progbits
 2417              		.align	2
 2418              		.global	CySysTickSetReload
 2419              		.code	16
 2420              		.thumb_func
 2421              		.type	CySysTickSetReload, %function
 2422              	CySysTickSetReload:
 2423              	.LFB40:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 92


2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 2424              		.loc 1 2754 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 8
 2427              		@ frame_needed = 1, uses_anonymous_args = 0
 2428 0000 80B5     		push	{r7, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 7, -8
 2431              		.cfi_offset 14, -4
 2432 0002 82B0     		sub	sp, sp, #8
 2433              		.cfi_def_cfa_offset 16
 2434 0004 00AF     		add	r7, sp, #0
 2435              		.cfi_def_cfa_register 7
 2436 0006 7860     		str	r0, [r7, #4]
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2437              		.loc 1 2755 0
 2438 0008 044B     		ldr	r3, .L151
 2439 000a 7A68     		ldr	r2, [r7, #4]
 2440 000c 1202     		lsls	r2, r2, #8
 2441 000e 120A     		lsrs	r2, r2, #8
 2442 0010 1A60     		str	r2, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 2443              		.loc 1 2756 0
 2444 0012 C046     		nop
 2445 0014 BD46     		mov	sp, r7
 2446 0016 02B0     		add	sp, sp, #8
 2447              		@ sp needed
 2448 0018 80BD     		pop	{r7, pc}
 2449              	.L152:
 2450 001a C046     		.align	2
 2451              	.L151:
 2452 001c 14E000E0 		.word	-536813548
 2453              		.cfi_endproc
 2454              	.LFE40:
 2455              		.size	CySysTickSetReload, .-CySysTickSetReload
 2456              		.section	.text.CySysTickGetReload,"ax",%progbits
 2457              		.align	2
 2458              		.global	CySysTickGetReload
 2459              		.code	16
 2460              		.thumb_func
 2461              		.type	CySysTickGetReload, %function
 2462              	CySysTickGetReload:
 2463              	.LFB41:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 93


2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 2464              		.loc 1 2770 0
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 0
 2467              		@ frame_needed = 1, uses_anonymous_args = 0
 2468 0000 80B5     		push	{r7, lr}
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 7, -8
 2471              		.cfi_offset 14, -4
 2472 0002 00AF     		add	r7, sp, #0
 2473              		.cfi_def_cfa_register 7
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2474              		.loc 1 2771 0
 2475 0004 034B     		ldr	r3, .L155
 2476 0006 1B68     		ldr	r3, [r3]
 2477 0008 1B02     		lsls	r3, r3, #8
 2478 000a 1B0A     		lsrs	r3, r3, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 2479              		.loc 1 2772 0
 2480 000c 1800     		movs	r0, r3
 2481 000e BD46     		mov	sp, r7
 2482              		@ sp needed
 2483 0010 80BD     		pop	{r7, pc}
 2484              	.L156:
 2485 0012 C046     		.align	2
 2486              	.L155:
 2487 0014 14E000E0 		.word	-536813548
 2488              		.cfi_endproc
 2489              	.LFE41:
 2490              		.size	CySysTickGetReload, .-CySysTickGetReload
 2491              		.section	.text.CySysTickGetValue,"ax",%progbits
 2492              		.align	2
 2493              		.global	CySysTickGetValue
 2494              		.code	16
 2495              		.thumb_func
 2496              		.type	CySysTickGetValue, %function
 2497              	CySysTickGetValue:
 2498              	.LFB42:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 94


 2499              		.loc 1 2786 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 1, uses_anonymous_args = 0
 2503 0000 80B5     		push	{r7, lr}
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 7, -8
 2506              		.cfi_offset 14, -4
 2507 0002 00AF     		add	r7, sp, #0
 2508              		.cfi_def_cfa_register 7
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2509              		.loc 1 2787 0
 2510 0004 034B     		ldr	r3, .L159
 2511 0006 1B68     		ldr	r3, [r3]
 2512 0008 1B02     		lsls	r3, r3, #8
 2513 000a 1B0A     		lsrs	r3, r3, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 2514              		.loc 1 2788 0
 2515 000c 1800     		movs	r0, r3
 2516 000e BD46     		mov	sp, r7
 2517              		@ sp needed
 2518 0010 80BD     		pop	{r7, pc}
 2519              	.L160:
 2520 0012 C046     		.align	2
 2521              	.L159:
 2522 0014 18E000E0 		.word	-536813544
 2523              		.cfi_endproc
 2524              	.LFE42:
 2525              		.size	CySysTickGetValue, .-CySysTickGetValue
 2526              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2527              		.align	2
 2528              		.global	CySysTickSetClockSource
 2529              		.code	16
 2530              		.thumb_func
 2531              		.type	CySysTickSetClockSource, %function
 2532              	CySysTickSetClockSource:
 2533              	.LFB43:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 95


2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 2534              		.loc 1 2818 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 8
 2537              		@ frame_needed = 1, uses_anonymous_args = 0
 2538 0000 80B5     		push	{r7, lr}
 2539              		.cfi_def_cfa_offset 8
 2540              		.cfi_offset 7, -8
 2541              		.cfi_offset 14, -4
 2542 0002 82B0     		sub	sp, sp, #8
 2543              		.cfi_def_cfa_offset 16
 2544 0004 00AF     		add	r7, sp, #0
 2545              		.cfi_def_cfa_register 7
 2546 0006 7860     		str	r0, [r7, #4]
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2547              		.loc 1 2819 0
 2548 0008 7B68     		ldr	r3, [r7, #4]
 2549 000a 012B     		cmp	r3, #1
 2550 000c 06D1     		bne	.L162
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2551              		.loc 1 2821 0
 2552 000e 084B     		ldr	r3, .L165
 2553 0010 074A     		ldr	r2, .L165
 2554 0012 1268     		ldr	r2, [r2]
 2555 0014 0421     		movs	r1, #4
 2556 0016 0A43     		orrs	r2, r1
 2557 0018 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 2558              		.loc 1 2827 0
 2559 001a 05E0     		b	.L164
 2560              	.L162:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 2561              		.loc 1 2825 0
 2562 001c 044B     		ldr	r3, .L165
 2563 001e 044A     		ldr	r2, .L165
 2564 0020 1268     		ldr	r2, [r2]
 2565 0022 0421     		movs	r1, #4
 2566 0024 8A43     		bics	r2, r1
 2567 0026 1A60     		str	r2, [r3]
 2568              	.L164:
 2569              		.loc 1 2827 0
 2570 0028 C046     		nop
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 96


 2571 002a BD46     		mov	sp, r7
 2572 002c 02B0     		add	sp, sp, #8
 2573              		@ sp needed
 2574 002e 80BD     		pop	{r7, pc}
 2575              	.L166:
 2576              		.align	2
 2577              	.L165:
 2578 0030 10E000E0 		.word	-536813552
 2579              		.cfi_endproc
 2580              	.LFE43:
 2581              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2582              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2583              		.align	2
 2584              		.global	CySysTickGetClockSource
 2585              		.code	16
 2586              		.thumb_func
 2587              		.type	CySysTickGetClockSource, %function
 2588              	CySysTickGetClockSource:
 2589              	.LFB44:
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 2590              		.loc 1 2843 0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 1, uses_anonymous_args = 0
 2594 0000 80B5     		push	{r7, lr}
 2595              		.cfi_def_cfa_offset 8
 2596              		.cfi_offset 7, -8
 2597              		.cfi_offset 14, -4
 2598 0002 00AF     		add	r7, sp, #0
 2599              		.cfi_def_cfa_register 7
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2600              		.loc 1 2844 0
 2601 0004 034B     		ldr	r3, .L169
 2602 0006 1B68     		ldr	r3, [r3]
 2603 0008 9B08     		lsrs	r3, r3, #2
 2604 000a 0122     		movs	r2, #1
 2605 000c 1340     		ands	r3, r2
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2606              		.loc 1 2845 0
 2607 000e 1800     		movs	r0, r3
 2608 0010 BD46     		mov	sp, r7
 2609              		@ sp needed
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 97


 2610 0012 80BD     		pop	{r7, pc}
 2611              	.L170:
 2612              		.align	2
 2613              	.L169:
 2614 0014 10E000E0 		.word	-536813552
 2615              		.cfi_endproc
 2616              	.LFE44:
 2617              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2618              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2619              		.align	2
 2620              		.global	CySysTickGetCountFlag
 2621              		.code	16
 2622              		.thumb_func
 2623              		.type	CySysTickGetCountFlag, %function
 2624              	CySysTickGetCountFlag:
 2625              	.LFB45:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 2626              		.loc 1 2866 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 1, uses_anonymous_args = 0
 2630 0000 80B5     		push	{r7, lr}
 2631              		.cfi_def_cfa_offset 8
 2632              		.cfi_offset 7, -8
 2633              		.cfi_offset 14, -4
 2634 0002 00AF     		add	r7, sp, #0
 2635              		.cfi_def_cfa_register 7
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2636              		.loc 1 2867 0
 2637 0004 034B     		ldr	r3, .L173
 2638 0006 1B68     		ldr	r3, [r3]
 2639 0008 1B0C     		lsrs	r3, r3, #16
 2640 000a 0122     		movs	r2, #1
 2641 000c 1340     		ands	r3, r2
2868:Generated_Source\PSoC4/CyLib.c **** }
 2642              		.loc 1 2868 0
 2643 000e 1800     		movs	r0, r3
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 98


 2644 0010 BD46     		mov	sp, r7
 2645              		@ sp needed
 2646 0012 80BD     		pop	{r7, pc}
 2647              	.L174:
 2648              		.align	2
 2649              	.L173:
 2650 0014 10E000E0 		.word	-536813552
 2651              		.cfi_endproc
 2652              	.LFE45:
 2653              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2654              		.section	.text.CySysTickClear,"ax",%progbits
 2655              		.align	2
 2656              		.global	CySysTickClear
 2657              		.code	16
 2658              		.thumb_func
 2659              		.type	CySysTickClear, %function
 2660              	CySysTickClear:
 2661              	.LFB46:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
 2662              		.loc 1 2879 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 1, uses_anonymous_args = 0
 2666 0000 80B5     		push	{r7, lr}
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 7, -8
 2669              		.cfi_offset 14, -4
 2670 0002 00AF     		add	r7, sp, #0
 2671              		.cfi_def_cfa_register 7
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2672              		.loc 1 2880 0
 2673 0004 024B     		ldr	r3, .L176
 2674 0006 0022     		movs	r2, #0
 2675 0008 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** }
 2676              		.loc 1 2881 0
 2677 000a C046     		nop
 2678 000c BD46     		mov	sp, r7
 2679              		@ sp needed
 2680 000e 80BD     		pop	{r7, pc}
 2681              	.L177:
 2682              		.align	2
 2683              	.L176:
 2684 0010 18E000E0 		.word	-536813544
 2685              		.cfi_endproc
 2686              	.LFE46:
 2687              		.size	CySysTickClear, .-CySysTickClear
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 99


 2688              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2689              		.align	2
 2690              		.global	CySysTickSetCallback
 2691              		.code	16
 2692              		.thumb_func
 2693              		.type	CySysTickSetCallback, %function
 2694              	CySysTickSetCallback:
 2695              	.LFB47:
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
 2696              		.loc 1 2914 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 16
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 84B0     		sub	sp, sp, #16
 2705              		.cfi_def_cfa_offset 24
 2706 0004 00AF     		add	r7, sp, #0
 2707              		.cfi_def_cfa_register 7
 2708 0006 7860     		str	r0, [r7, #4]
 2709 0008 3960     		str	r1, [r7]
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 100


2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2710              		.loc 1 2917 0
 2711 000a 074B     		ldr	r3, .L180
 2712 000c 7A68     		ldr	r2, [r7, #4]
 2713 000e 9200     		lsls	r2, r2, #2
 2714 0010 D358     		ldr	r3, [r2, r3]
 2715 0012 FB60     		str	r3, [r7, #12]
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2716              		.loc 1 2918 0
 2717 0014 044B     		ldr	r3, .L180
 2718 0016 7A68     		ldr	r2, [r7, #4]
 2719 0018 9200     		lsls	r2, r2, #2
 2720 001a 3968     		ldr	r1, [r7]
 2721 001c D150     		str	r1, [r2, r3]
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2722              		.loc 1 2919 0
 2723 001e FB68     		ldr	r3, [r7, #12]
2920:Generated_Source\PSoC4/CyLib.c **** }
 2724              		.loc 1 2920 0
 2725 0020 1800     		movs	r0, r3
 2726 0022 BD46     		mov	sp, r7
 2727 0024 04B0     		add	sp, sp, #16
 2728              		@ sp needed
 2729 0026 80BD     		pop	{r7, pc}
 2730              	.L181:
 2731              		.align	2
 2732              	.L180:
 2733 0028 00000000 		.word	CySysTickCallbacks
 2734              		.cfi_endproc
 2735              	.LFE47:
 2736              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2737              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2738              		.align	2
 2739              		.global	CySysTickGetCallback
 2740              		.code	16
 2741              		.thumb_func
 2742              		.type	CySysTickGetCallback, %function
 2743              	CySysTickGetCallback:
 2744              	.LFB48:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 101


 2745              		.loc 1 2938 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 8
 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749 0000 80B5     		push	{r7, lr}
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 82B0     		sub	sp, sp, #8
 2754              		.cfi_def_cfa_offset 16
 2755 0004 00AF     		add	r7, sp, #0
 2756              		.cfi_def_cfa_register 7
 2757 0006 7860     		str	r0, [r7, #4]
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2758              		.loc 1 2939 0
 2759 0008 034B     		ldr	r3, .L184
 2760 000a 7A68     		ldr	r2, [r7, #4]
 2761 000c 9200     		lsls	r2, r2, #2
 2762 000e D358     		ldr	r3, [r2, r3]
2940:Generated_Source\PSoC4/CyLib.c **** }
 2763              		.loc 1 2940 0
 2764 0010 1800     		movs	r0, r3
 2765 0012 BD46     		mov	sp, r7
 2766 0014 02B0     		add	sp, sp, #8
 2767              		@ sp needed
 2768 0016 80BD     		pop	{r7, pc}
 2769              	.L185:
 2770              		.align	2
 2771              	.L184:
 2772 0018 00000000 		.word	CySysTickCallbacks
 2773              		.cfi_endproc
 2774              	.LFE48:
 2775              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2776              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2777              		.align	2
 2778              		.code	16
 2779              		.thumb_func
 2780              		.type	CySysTickServiceCallbacks, %function
 2781              	CySysTickServiceCallbacks:
 2782              	.LFB49:
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2783              		.loc 1 2951 0
 2784              		.cfi_startproc
 2785              		@ args = 0, pretend = 0, frame = 8
 2786              		@ frame_needed = 1, uses_anonymous_args = 0
 2787 0000 80B5     		push	{r7, lr}
 2788              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 102


 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 82B0     		sub	sp, sp, #8
 2792              		.cfi_def_cfa_offset 16
 2793 0004 00AF     		add	r7, sp, #0
 2794              		.cfi_def_cfa_register 7
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2795              		.loc 1 2955 0
 2796 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2797 000a 0300     		movs	r3, r0
 2798 000c 012B     		cmp	r3, #1
 2799 000e 13D1     		bne	.L191
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2800              		.loc 1 2957 0
 2801 0010 0023     		movs	r3, #0
 2802 0012 7B60     		str	r3, [r7, #4]
 2803 0014 0DE0     		b	.L188
 2804              	.L190:
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2805              		.loc 1 2959 0
 2806 0016 0A4B     		ldr	r3, .L192
 2807 0018 7A68     		ldr	r2, [r7, #4]
 2808 001a 9200     		lsls	r2, r2, #2
 2809 001c D358     		ldr	r3, [r2, r3]
 2810 001e 002B     		cmp	r3, #0
 2811 0020 04D0     		beq	.L189
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2812              		.loc 1 2961 0
 2813 0022 074B     		ldr	r3, .L192
 2814 0024 7A68     		ldr	r2, [r7, #4]
 2815 0026 9200     		lsls	r2, r2, #2
 2816 0028 D358     		ldr	r3, [r2, r3]
 2817 002a 9847     		blx	r3
 2818              	.L189:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2819              		.loc 1 2957 0 discriminator 2
 2820 002c 7B68     		ldr	r3, [r7, #4]
 2821 002e 0133     		adds	r3, r3, #1
 2822 0030 7B60     		str	r3, [r7, #4]
 2823              	.L188:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2824              		.loc 1 2957 0 is_stmt 0 discriminator 1
 2825 0032 7B68     		ldr	r3, [r7, #4]
 2826 0034 042B     		cmp	r3, #4
 2827 0036 EED9     		bls	.L190
 2828              	.L191:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2829              		.loc 1 2965 0 is_stmt 1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 103


 2830 0038 C046     		nop
 2831 003a BD46     		mov	sp, r7
 2832 003c 02B0     		add	sp, sp, #8
 2833              		@ sp needed
 2834 003e 80BD     		pop	{r7, pc}
 2835              	.L193:
 2836              		.align	2
 2837              	.L192:
 2838 0040 00000000 		.word	CySysTickCallbacks
 2839              		.cfi_endproc
 2840              	.LFE49:
 2841              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2842              		.section	.text.CyGetUniqueId,"ax",%progbits
 2843              		.align	2
 2844              		.global	CyGetUniqueId
 2845              		.code	16
 2846              		.thumb_func
 2847              		.type	CyGetUniqueId, %function
 2848              	CyGetUniqueId:
 2849              	.LFB50:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2850              		.loc 1 2983 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 8
 2853              		@ frame_needed = 1, uses_anonymous_args = 0
 2854 0000 80B5     		push	{r7, lr}
 2855              		.cfi_def_cfa_offset 8
 2856              		.cfi_offset 7, -8
 2857              		.cfi_offset 14, -4
 2858 0002 82B0     		sub	sp, sp, #8
 2859              		.cfi_def_cfa_offset 16
 2860 0004 00AF     		add	r7, sp, #0
 2861              		.cfi_def_cfa_register 7
 2862 0006 7860     		str	r0, [r7, #4]
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2863              		.loc 1 2985 0
 2864 0008 254B     		ldr	r3, .L195
 2865 000a 1B78     		ldrb	r3, [r3]
 2866 000c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 104


 2867 000e 1A00     		movs	r2, r3
 2868 0010 7B68     		ldr	r3, [r7, #4]
 2869 0012 1A60     		str	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2870              		.loc 1 2986 0
 2871 0014 234B     		ldr	r3, .L195+4
 2872 0016 1B78     		ldrb	r3, [r3]
 2873 0018 DBB2     		uxtb	r3, r3
 2874 001a 1A02     		lsls	r2, r3, #8
 2875 001c 7B68     		ldr	r3, [r7, #4]
 2876 001e 1B68     		ldr	r3, [r3]
 2877 0020 1A43     		orrs	r2, r3
 2878 0022 7B68     		ldr	r3, [r7, #4]
 2879 0024 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2880              		.loc 1 2987 0
 2881 0026 204B     		ldr	r3, .L195+8
 2882 0028 1B78     		ldrb	r3, [r3]
 2883 002a DBB2     		uxtb	r3, r3
 2884 002c 1A04     		lsls	r2, r3, #16
 2885 002e 7B68     		ldr	r3, [r7, #4]
 2886 0030 1B68     		ldr	r3, [r3]
 2887 0032 1A43     		orrs	r2, r3
 2888 0034 7B68     		ldr	r3, [r7, #4]
 2889 0036 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2890              		.loc 1 2988 0
 2891 0038 1C4B     		ldr	r3, .L195+12
 2892 003a 1B78     		ldrb	r3, [r3]
 2893 003c DBB2     		uxtb	r3, r3
 2894 003e 1A06     		lsls	r2, r3, #24
 2895 0040 7B68     		ldr	r3, [r7, #4]
 2896 0042 1B68     		ldr	r3, [r3]
 2897 0044 1A43     		orrs	r2, r3
 2898 0046 7B68     		ldr	r3, [r7, #4]
 2899 0048 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2900              		.loc 1 2990 0
 2901 004a 7B68     		ldr	r3, [r7, #4]
 2902 004c 0433     		adds	r3, r3, #4
 2903 004e 184A     		ldr	r2, .L195+16
 2904 0050 1278     		ldrb	r2, [r2]
 2905 0052 D2B2     		uxtb	r2, r2
 2906 0054 1A60     		str	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2907              		.loc 1 2991 0
 2908 0056 174B     		ldr	r3, .L195+20
 2909 0058 1B78     		ldrb	r3, [r3]
 2910 005a DBB2     		uxtb	r3, r3
 2911 005c 1902     		lsls	r1, r3, #8
 2912 005e 7B68     		ldr	r3, [r7, #4]
 2913 0060 0433     		adds	r3, r3, #4
 2914 0062 7A68     		ldr	r2, [r7, #4]
 2915 0064 0432     		adds	r2, r2, #4
 2916 0066 1268     		ldr	r2, [r2]
 2917 0068 0A43     		orrs	r2, r1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 105


 2918 006a 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2919              		.loc 1 2992 0
 2920 006c 124B     		ldr	r3, .L195+24
 2921 006e 1B78     		ldrb	r3, [r3]
 2922 0070 DBB2     		uxtb	r3, r3
 2923 0072 1904     		lsls	r1, r3, #16
 2924 0074 7B68     		ldr	r3, [r7, #4]
 2925 0076 0433     		adds	r3, r3, #4
 2926 0078 7A68     		ldr	r2, [r7, #4]
 2927 007a 0432     		adds	r2, r2, #4
 2928 007c 1268     		ldr	r2, [r2]
 2929 007e 0A43     		orrs	r2, r1
 2930 0080 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2931              		.loc 1 2993 0
 2932 0082 0E4B     		ldr	r3, .L195+28
 2933 0084 1B78     		ldrb	r3, [r3]
 2934 0086 DBB2     		uxtb	r3, r3
 2935 0088 1906     		lsls	r1, r3, #24
 2936 008a 7B68     		ldr	r3, [r7, #4]
 2937 008c 0433     		adds	r3, r3, #4
 2938 008e 7A68     		ldr	r2, [r7, #4]
 2939 0090 0432     		adds	r2, r2, #4
 2940 0092 1268     		ldr	r2, [r2]
 2941 0094 0A43     		orrs	r2, r1
 2942 0096 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2943              		.loc 1 3005 0
 2944 0098 C046     		nop
 2945 009a BD46     		mov	sp, r7
 2946 009c 02B0     		add	sp, sp, #8
 2947              		@ sp needed
 2948 009e 80BD     		pop	{r7, pc}
 2949              	.L196:
 2950              		.align	2
 2951              	.L195:
 2952 00a0 78F1FF0F 		.word	268431736
 2953 00a4 79F1FF0F 		.word	268431737
 2954 00a8 7AF1FF0F 		.word	268431738
 2955 00ac 7BF1FF0F 		.word	268431739
 2956 00b0 7CF1FF0F 		.word	268431740
 2957 00b4 7DF1FF0F 		.word	268431741
 2958 00b8 7EF1FF0F 		.word	268431742
 2959 00bc 7FF1FF0F 		.word	268431743
 2960              		.cfi_endproc
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 106


 2961              	.LFE50:
 2962              		.size	CyGetUniqueId, .-CyGetUniqueId
 2963              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2964              		.align	2
 2965              		.global	CySysSetRamAccessArbPriority
 2966              		.code	16
 2967              		.thumb_func
 2968              		.type	CySysSetRamAccessArbPriority, %function
 2969              	CySysSetRamAccessArbPriority:
 2970              	.LFB51:
3006:Generated_Source\PSoC4/CyLib.c **** 
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 2971              		.loc 1 3027 0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 16
 2974              		@ frame_needed = 1, uses_anonymous_args = 0
 2975 0000 80B5     		push	{r7, lr}
 2976              		.cfi_def_cfa_offset 8
 2977              		.cfi_offset 7, -8
 2978              		.cfi_offset 14, -4
 2979 0002 84B0     		sub	sp, sp, #16
 2980              		.cfi_def_cfa_offset 24
 2981 0004 00AF     		add	r7, sp, #0
 2982              		.cfi_def_cfa_register 7
 2983 0006 7860     		str	r0, [r7, #4]
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2984              		.loc 1 3030 0
 2985 0008 094B     		ldr	r3, .L198
 2986 000a 1B68     		ldr	r3, [r3]
 2987 000c 094A     		ldr	r2, .L198+4
 2988 000e 1340     		ands	r3, r2
 2989 0010 FB60     		str	r3, [r7, #12]
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2990              		.loc 1 3031 0
 2991 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 107


 2992 0014 5A04     		lsls	r2, r3, #17
 2993 0016 C023     		movs	r3, #192
 2994 0018 DB02     		lsls	r3, r3, #11
 2995 001a 1340     		ands	r3, r2
 2996 001c FA68     		ldr	r2, [r7, #12]
 2997 001e 1343     		orrs	r3, r2
 2998 0020 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2999              		.loc 1 3032 0
 3000 0022 034B     		ldr	r3, .L198
 3001 0024 FA68     		ldr	r2, [r7, #12]
 3002 0026 1A60     		str	r2, [r3]
3033:Generated_Source\PSoC4/CyLib.c ****     }
 3003              		.loc 1 3033 0
 3004 0028 C046     		nop
 3005 002a BD46     		mov	sp, r7
 3006 002c 04B0     		add	sp, sp, #16
 3007              		@ sp needed
 3008 002e 80BD     		pop	{r7, pc}
 3009              	.L199:
 3010              		.align	2
 3011              	.L198:
 3012 0030 38001040 		.word	1074790456
 3013 0034 FFFFF9FF 		.word	-393217
 3014              		.cfi_endproc
 3015              	.LFE51:
 3016              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 3017              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 3018              		.align	2
 3019              		.global	CySysSetFlashAccessArbPriority
 3020              		.code	16
 3021              		.thumb_func
 3022              		.type	CySysSetFlashAccessArbPriority, %function
 3023              	CySysSetFlashAccessArbPriority:
 3024              	.LFB52:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
 3025              		.loc 1 3054 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 108


 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 16
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029 0000 80B5     		push	{r7, lr}
 3030              		.cfi_def_cfa_offset 8
 3031              		.cfi_offset 7, -8
 3032              		.cfi_offset 14, -4
 3033 0002 84B0     		sub	sp, sp, #16
 3034              		.cfi_def_cfa_offset 24
 3035 0004 00AF     		add	r7, sp, #0
 3036              		.cfi_def_cfa_register 7
 3037 0006 7860     		str	r0, [r7, #4]
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 3038              		.loc 1 3057 0
 3039 0008 094B     		ldr	r3, .L201
 3040 000a 1B68     		ldr	r3, [r3]
 3041 000c 094A     		ldr	r2, .L201+4
 3042 000e 1340     		ands	r3, r2
 3043 0010 FB60     		str	r3, [r7, #12]
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 3044              		.loc 1 3058 0
 3045 0012 7B68     		ldr	r3, [r7, #4]
 3046 0014 5A04     		lsls	r2, r3, #17
 3047 0016 C023     		movs	r3, #192
 3048 0018 DB02     		lsls	r3, r3, #11
 3049 001a 1340     		ands	r3, r2
 3050 001c FA68     		ldr	r2, [r7, #12]
 3051 001e 1343     		orrs	r3, r2
 3052 0020 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 3053              		.loc 1 3059 0
 3054 0022 034B     		ldr	r3, .L201
 3055 0024 FA68     		ldr	r2, [r7, #12]
 3056 0026 1A60     		str	r2, [r3]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 3057              		.loc 1 3060 0
 3058 0028 C046     		nop
 3059 002a BD46     		mov	sp, r7
 3060 002c 04B0     		add	sp, sp, #16
 3061              		@ sp needed
 3062 002e 80BD     		pop	{r7, pc}
 3063              	.L202:
 3064              		.align	2
 3065              	.L201:
 3066 0030 30001040 		.word	1074790448
 3067 0034 FFFFF9FF 		.word	-393217
 3068              		.cfi_endproc
 3069              	.LFE52:
 3070              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 3071              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 3072              		.align	2
 3073              		.global	CySysSetDmacAccessArbPriority
 3074              		.code	16
 3075              		.thumb_func
 3076              		.type	CySysSetDmacAccessArbPriority, %function
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 109


 3077              	CySysSetDmacAccessArbPriority:
 3078              	.LFB53:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3070:Generated_Source\PSoC4/CyLib.c ****     *
3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 3079              		.loc 1 3081 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 16
 3082              		@ frame_needed = 1, uses_anonymous_args = 0
 3083 0000 80B5     		push	{r7, lr}
 3084              		.cfi_def_cfa_offset 8
 3085              		.cfi_offset 7, -8
 3086              		.cfi_offset 14, -4
 3087 0002 84B0     		sub	sp, sp, #16
 3088              		.cfi_def_cfa_offset 24
 3089 0004 00AF     		add	r7, sp, #0
 3090              		.cfi_def_cfa_register 7
 3091 0006 7860     		str	r0, [r7, #4]
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 3092              		.loc 1 3084 0
 3093 0008 094B     		ldr	r3, .L204
 3094 000a 1B68     		ldr	r3, [r3]
 3095 000c 094A     		ldr	r2, .L204+4
 3096 000e 1340     		ands	r3, r2
 3097 0010 FB60     		str	r3, [r7, #12]
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 3098              		.loc 1 3085 0
 3099 0012 7B68     		ldr	r3, [r7, #4]
 3100 0014 5A04     		lsls	r2, r3, #17
 3101 0016 C023     		movs	r3, #192
 3102 0018 DB02     		lsls	r3, r3, #11
 3103 001a 1340     		ands	r3, r2
 3104 001c FA68     		ldr	r2, [r7, #12]
 3105 001e 1343     		orrs	r3, r2
 3106 0020 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 3107              		.loc 1 3086 0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 110


 3108 0022 034B     		ldr	r3, .L204
 3109 0024 FA68     		ldr	r2, [r7, #12]
 3110 0026 1A60     		str	r2, [r3]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 3111              		.loc 1 3087 0
 3112 0028 C046     		nop
 3113 002a BD46     		mov	sp, r7
 3114 002c 04B0     		add	sp, sp, #16
 3115              		@ sp needed
 3116 002e 80BD     		pop	{r7, pc}
 3117              	.L205:
 3118              		.align	2
 3119              	.L204:
 3120 0030 3C001040 		.word	1074790460
 3121 0034 FFFFF9FF 		.word	-393217
 3122              		.cfi_endproc
 3123              	.LFE53:
 3124              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 3125              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 3126              		.align	2
 3127              		.global	CySysSetPeripheralAccessArbPriority
 3128              		.code	16
 3129              		.thumb_func
 3130              		.type	CySysSetPeripheralAccessArbPriority, %function
 3131              	CySysSetPeripheralAccessArbPriority:
 3132              	.LFB54:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 3133              		.loc 1 3110 0
 3134              		.cfi_startproc
 3135              		@ args = 0, pretend = 0, frame = 16
 3136              		@ frame_needed = 1, uses_anonymous_args = 0
 3137 0000 80B5     		push	{r7, lr}
 3138              		.cfi_def_cfa_offset 8
 3139              		.cfi_offset 7, -8
 3140              		.cfi_offset 14, -4
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 111


 3141 0002 84B0     		sub	sp, sp, #16
 3142              		.cfi_def_cfa_offset 24
 3143 0004 00AF     		add	r7, sp, #0
 3144              		.cfi_def_cfa_register 7
 3145 0006 7860     		str	r0, [r7, #4]
 3146 0008 3960     		str	r1, [r7]
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3147              		.loc 1 3113 0
 3148 000a 7B68     		ldr	r3, [r7, #4]
 3149 000c 002B     		cmp	r3, #0
 3150 000e 10D1     		bne	.L207
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3151              		.loc 1 3115 0
 3152 0010 1F4B     		ldr	r3, .L212
 3153 0012 1B68     		ldr	r3, [r3]
 3154 0014 1F4A     		ldr	r2, .L212+4
 3155 0016 1340     		ands	r3, r2
 3156 0018 FB60     		str	r3, [r7, #12]
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3157              		.loc 1 3116 0
 3158 001a 3B68     		ldr	r3, [r7]
 3159 001c 5A04     		lsls	r2, r3, #17
 3160 001e C023     		movs	r3, #192
 3161 0020 DB02     		lsls	r3, r3, #11
 3162 0022 1340     		ands	r3, r2
 3163 0024 FA68     		ldr	r2, [r7, #12]
 3164 0026 1343     		orrs	r3, r2
 3165 0028 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3166              		.loc 1 3117 0
 3167 002a 194B     		ldr	r3, .L212
 3168 002c FA68     		ldr	r2, [r7, #12]
 3169 002e 1A60     		str	r2, [r3]
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3138:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 112


3139:Generated_Source\PSoC4/CyLib.c ****     }
 3170              		.loc 1 3139 0
 3171 0030 2AE0     		b	.L211
 3172              	.L207:
3120:Generated_Source\PSoC4/CyLib.c ****         {
 3173              		.loc 1 3120 0
 3174 0032 7B68     		ldr	r3, [r7, #4]
 3175 0034 012B     		cmp	r3, #1
 3176 0036 10D1     		bne	.L209
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3177              		.loc 1 3122 0
 3178 0038 174B     		ldr	r3, .L212+8
 3179 003a 1B68     		ldr	r3, [r3]
 3180 003c 154A     		ldr	r2, .L212+4
 3181 003e 1340     		ands	r3, r2
 3182 0040 FB60     		str	r3, [r7, #12]
3123:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3183              		.loc 1 3123 0
 3184 0042 3B68     		ldr	r3, [r7]
 3185 0044 5A04     		lsls	r2, r3, #17
 3186 0046 C023     		movs	r3, #192
 3187 0048 DB02     		lsls	r3, r3, #11
 3188 004a 1340     		ands	r3, r2
 3189 004c FA68     		ldr	r2, [r7, #12]
 3190 004e 1343     		orrs	r3, r2
 3191 0050 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****         } else
 3192              		.loc 1 3124 0
 3193 0052 114B     		ldr	r3, .L212+8
 3194 0054 FA68     		ldr	r2, [r7, #12]
 3195 0056 1A60     		str	r2, [r3]
 3196              		.loc 1 3139 0
 3197 0058 16E0     		b	.L211
 3198              	.L209:
3128:Generated_Source\PSoC4/CyLib.c ****         {
 3199              		.loc 1 3128 0
 3200 005a 7B68     		ldr	r3, [r7, #4]
 3201 005c 022B     		cmp	r3, #2
 3202 005e 10D1     		bne	.L210
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3203              		.loc 1 3130 0
 3204 0060 0E4B     		ldr	r3, .L212+12
 3205 0062 1B68     		ldr	r3, [r3]
 3206 0064 0B4A     		ldr	r2, .L212+4
 3207 0066 1340     		ands	r3, r2
 3208 0068 FB60     		str	r3, [r7, #12]
3131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3209              		.loc 1 3131 0
 3210 006a 3B68     		ldr	r3, [r7]
 3211 006c 5A04     		lsls	r2, r3, #17
 3212 006e C023     		movs	r3, #192
 3213 0070 DB02     		lsls	r3, r3, #11
 3214 0072 1340     		ands	r3, r2
 3215 0074 FA68     		ldr	r2, [r7, #12]
 3216 0076 1343     		orrs	r3, r2
 3217 0078 FB60     		str	r3, [r7, #12]
3132:Generated_Source\PSoC4/CyLib.c ****         } else
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 113


 3218              		.loc 1 3132 0
 3219 007a 084B     		ldr	r3, .L212+12
 3220 007c FA68     		ldr	r2, [r7, #12]
 3221 007e 1A60     		str	r2, [r3]
 3222              		.loc 1 3139 0
 3223 0080 02E0     		b	.L211
 3224              	.L210:
3137:Generated_Source\PSoC4/CyLib.c ****         }
 3225              		.loc 1 3137 0 discriminator 1
 3226 0082 0020     		movs	r0, #0
 3227 0084 FFF7FEFF 		bl	CyHalt
 3228              	.L211:
 3229              		.loc 1 3139 0
 3230 0088 C046     		nop
 3231 008a BD46     		mov	sp, r7
 3232 008c 04B0     		add	sp, sp, #16
 3233              		@ sp needed
 3234 008e 80BD     		pop	{r7, pc}
 3235              	.L213:
 3236              		.align	2
 3237              	.L212:
 3238 0090 00011040 		.word	1074790656
 3239 0094 FFFFF9FF 		.word	-393217
 3240 0098 04011040 		.word	1074790660
 3241 009c 08011040 		.word	1074790664
 3242              		.cfi_endproc
 3243              	.LFE54:
 3244              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3245              		.text
 3246              	.Letext0:
 3247              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3248              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3249              		.section	.debug_info,"",%progbits
 3250              	.Ldebug_info0:
 3251 0000 CC0A0000 		.4byte	0xacc
 3252 0004 0400     		.2byte	0x4
 3253 0006 00000000 		.4byte	.Ldebug_abbrev0
 3254 000a 04       		.byte	0x4
 3255 000b 01       		.uleb128 0x1
 3256 000c 9A030000 		.4byte	.LASF116
 3257 0010 0C       		.byte	0xc
 3258 0011 52070000 		.4byte	.LASF117
 3259 0015 56010000 		.4byte	.LASF118
 3260 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3261 001d 00000000 		.4byte	0
 3262 0021 00000000 		.4byte	.Ldebug_line0
 3263 0025 02       		.uleb128 0x2
 3264 0026 01       		.byte	0x1
 3265 0027 06       		.byte	0x6
 3266 0028 F9000000 		.4byte	.LASF0
 3267 002c 02       		.uleb128 0x2
 3268 002d 01       		.byte	0x1
 3269 002e 08       		.byte	0x8
 3270 002f CE050000 		.4byte	.LASF1
 3271 0033 02       		.uleb128 0x2
 3272 0034 02       		.byte	0x2
 3273 0035 05       		.byte	0x5
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 114


 3274 0036 DC050000 		.4byte	.LASF2
 3275 003a 02       		.uleb128 0x2
 3276 003b 02       		.byte	0x2
 3277 003c 07       		.byte	0x7
 3278 003d 34030000 		.4byte	.LASF3
 3279 0041 02       		.uleb128 0x2
 3280 0042 04       		.byte	0x4
 3281 0043 05       		.byte	0x5
 3282 0044 A3010000 		.4byte	.LASF4
 3283 0048 02       		.uleb128 0x2
 3284 0049 04       		.byte	0x4
 3285 004a 07       		.byte	0x7
 3286 004b BE020000 		.4byte	.LASF5
 3287 004f 02       		.uleb128 0x2
 3288 0050 08       		.byte	0x8
 3289 0051 05       		.byte	0x5
 3290 0052 EB000000 		.4byte	.LASF6
 3291 0056 02       		.uleb128 0x2
 3292 0057 08       		.byte	0x8
 3293 0058 07       		.byte	0x7
 3294 0059 75000000 		.4byte	.LASF7
 3295 005d 03       		.uleb128 0x3
 3296 005e 04       		.byte	0x4
 3297 005f 05       		.byte	0x5
 3298 0060 696E7400 		.ascii	"int\000"
 3299 0064 02       		.uleb128 0x2
 3300 0065 04       		.byte	0x4
 3301 0066 07       		.byte	0x7
 3302 0067 A2020000 		.4byte	.LASF8
 3303 006b 04       		.uleb128 0x4
 3304 006c C3010000 		.4byte	.LASF9
 3305 0070 02       		.byte	0x2
 3306 0071 D201     		.2byte	0x1d2
 3307 0073 2C000000 		.4byte	0x2c
 3308 0077 04       		.uleb128 0x4
 3309 0078 0F000000 		.4byte	.LASF10
 3310 007c 02       		.byte	0x2
 3311 007d D301     		.2byte	0x1d3
 3312 007f 3A000000 		.4byte	0x3a
 3313 0083 04       		.uleb128 0x4
 3314 0084 03020000 		.4byte	.LASF11
 3315 0088 02       		.byte	0x2
 3316 0089 D401     		.2byte	0x1d4
 3317 008b 48000000 		.4byte	0x48
 3318 008f 02       		.uleb128 0x2
 3319 0090 04       		.byte	0x4
 3320 0091 04       		.byte	0x4
 3321 0092 58050000 		.4byte	.LASF12
 3322 0096 02       		.uleb128 0x2
 3323 0097 08       		.byte	0x8
 3324 0098 04       		.byte	0x4
 3325 0099 DF010000 		.4byte	.LASF13
 3326 009d 02       		.uleb128 0x2
 3327 009e 01       		.byte	0x1
 3328 009f 08       		.byte	0x8
 3329 00a0 1F060000 		.4byte	.LASF14
 3330 00a4 04       		.uleb128 0x4
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 115


 3331 00a5 9B050000 		.4byte	.LASF15
 3332 00a9 02       		.byte	0x2
 3333 00aa 7C02     		.2byte	0x27c
 3334 00ac B0000000 		.4byte	0xb0
 3335 00b0 05       		.uleb128 0x5
 3336 00b1 6B000000 		.4byte	0x6b
 3337 00b5 04       		.uleb128 0x4
 3338 00b6 73040000 		.4byte	.LASF16
 3339 00ba 02       		.byte	0x2
 3340 00bb 7E02     		.2byte	0x27e
 3341 00bd C1000000 		.4byte	0xc1
 3342 00c1 05       		.uleb128 0x5
 3343 00c2 83000000 		.4byte	0x83
 3344 00c6 04       		.uleb128 0x4
 3345 00c7 3C060000 		.4byte	.LASF17
 3346 00cb 02       		.byte	0x2
 3347 00cc 8E02     		.2byte	0x28e
 3348 00ce D2000000 		.4byte	0xd2
 3349 00d2 06       		.uleb128 0x6
 3350 00d3 04       		.byte	0x4
 3351 00d4 D8000000 		.4byte	0xd8
 3352 00d8 07       		.uleb128 0x7
 3353 00d9 02       		.uleb128 0x2
 3354 00da 08       		.byte	0x8
 3355 00db 04       		.byte	0x4
 3356 00dc EC040000 		.4byte	.LASF18
 3357 00e0 02       		.uleb128 0x2
 3358 00e1 04       		.byte	0x4
 3359 00e2 07       		.byte	0x7
 3360 00e3 9C040000 		.4byte	.LASF19
 3361 00e7 08       		.uleb128 0x8
 3362 00e8 6D050000 		.4byte	.LASF20
 3363 00ec 03       		.byte	0x3
 3364 00ed F5       		.byte	0xf5
 3365 00ee D2000000 		.4byte	0xd2
 3366 00f2 09       		.uleb128 0x9
 3367 00f3 41070000 		.4byte	.LASF21
 3368 00f7 01       		.byte	0x1
 3369 00f8 6B       		.byte	0x6b
 3370 00f9 00000000 		.4byte	.LFB1
 3371 00fd 1C000000 		.4byte	.LFE1-.LFB1
 3372 0101 01       		.uleb128 0x1
 3373 0102 9C       		.byte	0x9c
 3374 0103 0A       		.uleb128 0xa
 3375 0104 EB020000 		.4byte	.LASF22
 3376 0108 01       		.byte	0x1
 3377 0109 8B       		.byte	0x8b
 3378 010a 00000000 		.4byte	.LFB2
 3379 010e 20000000 		.4byte	.LFE2-.LFB2
 3380 0112 01       		.uleb128 0x1
 3381 0113 9C       		.byte	0x9c
 3382 0114 0B       		.uleb128 0xb
 3383 0115 27020000 		.4byte	.LASF29
 3384 0119 01       		.byte	0x1
 3385 011a AF       		.byte	0xaf
 3386 011b 00000000 		.4byte	.LFB3
 3387 011f 44010000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 116


 3388 0123 01       		.uleb128 0x1
 3389 0124 9C       		.byte	0x9c
 3390 0125 7C010000 		.4byte	0x17c
 3391 0129 0C       		.uleb128 0xc
 3392 012a 6900     		.ascii	"i\000"
 3393 012c 01       		.byte	0x1
 3394 012d B2       		.byte	0xb2
 3395 012e 83000000 		.4byte	0x83
 3396 0132 02       		.uleb128 0x2
 3397 0133 91       		.byte	0x91
 3398 0134 6C       		.sleb128 -20
 3399 0135 0D       		.uleb128 0xd
 3400 0136 05010000 		.4byte	.LASF23
 3401 013a 01       		.byte	0x1
 3402 013b B5       		.byte	0xb5
 3403 013c 83000000 		.4byte	0x83
 3404 0140 02       		.uleb128 0x2
 3405 0141 91       		.byte	0x91
 3406 0142 68       		.sleb128 -24
 3407 0143 0D       		.uleb128 0xd
 3408 0144 16010000 		.4byte	.LASF24
 3409 0148 01       		.byte	0x1
 3410 0149 B6       		.byte	0xb6
 3411 014a 6B000000 		.4byte	0x6b
 3412 014e 02       		.uleb128 0x2
 3413 014f 91       		.byte	0x91
 3414 0150 5F       		.sleb128 -33
 3415 0151 0D       		.uleb128 0xd
 3416 0152 47030000 		.4byte	.LASF25
 3417 0156 01       		.byte	0x1
 3418 0157 B7       		.byte	0xb7
 3419 0158 83000000 		.4byte	0x83
 3420 015c 02       		.uleb128 0x2
 3421 015d 91       		.byte	0x91
 3422 015e 64       		.sleb128 -28
 3423 015f 0D       		.uleb128 0xd
 3424 0160 25010000 		.4byte	.LASF26
 3425 0164 01       		.byte	0x1
 3426 0165 B8       		.byte	0xb8
 3427 0166 83000000 		.4byte	0x83
 3428 016a 02       		.uleb128 0x2
 3429 016b 91       		.byte	0x91
 3430 016c 60       		.sleb128 -32
 3431 016d 0D       		.uleb128 0xd
 3432 016e A1060000 		.4byte	.LASF27
 3433 0172 01       		.byte	0x1
 3434 0173 B9       		.byte	0xb9
 3435 0174 C1000000 		.4byte	0xc1
 3436 0178 02       		.uleb128 0x2
 3437 0179 91       		.byte	0x91
 3438 017a 58       		.sleb128 -40
 3439 017b 00       		.byte	0
 3440 017c 0E       		.uleb128 0xe
 3441 017d 59040000 		.4byte	.LASF28
 3442 0181 01       		.byte	0x1
 3443 0182 1D01     		.2byte	0x11d
 3444 0184 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 117


 3445 0188 20000000 		.4byte	.LFE4-.LFB4
 3446 018c 01       		.uleb128 0x1
 3447 018d 9C       		.byte	0x9c
 3448 018e 0F       		.uleb128 0xf
 3449 018f 40010000 		.4byte	.LASF45
 3450 0193 01       		.byte	0x1
 3451 0194 3001     		.2byte	0x130
 3452 0196 83000000 		.4byte	0x83
 3453 019a 00000000 		.4byte	.LFB5
 3454 019e 20000000 		.4byte	.LFE5-.LFB5
 3455 01a2 01       		.uleb128 0x1
 3456 01a3 9C       		.byte	0x9c
 3457 01a4 10       		.uleb128 0x10
 3458 01a5 1F000000 		.4byte	.LASF30
 3459 01a9 01       		.byte	0x1
 3460 01aa AD01     		.2byte	0x1ad
 3461 01ac 00000000 		.4byte	.LFB6
 3462 01b0 48000000 		.4byte	.LFE6-.LFB6
 3463 01b4 01       		.uleb128 0x1
 3464 01b5 9C       		.byte	0x9c
 3465 01b6 E8010000 		.4byte	0x1e8
 3466 01ba 11       		.uleb128 0x11
 3467 01bb 04060000 		.4byte	.LASF33
 3468 01bf 01       		.byte	0x1
 3469 01c0 AD01     		.2byte	0x1ad
 3470 01c2 83000000 		.4byte	0x83
 3471 01c6 02       		.uleb128 0x2
 3472 01c7 91       		.byte	0x91
 3473 01c8 64       		.sleb128 -28
 3474 01c9 12       		.uleb128 0x12
 3475 01ca 16010000 		.4byte	.LASF24
 3476 01ce 01       		.byte	0x1
 3477 01cf AF01     		.2byte	0x1af
 3478 01d1 6B000000 		.4byte	0x6b
 3479 01d5 02       		.uleb128 0x2
 3480 01d6 91       		.byte	0x91
 3481 01d7 6F       		.sleb128 -17
 3482 01d8 12       		.uleb128 0x12
 3483 01d9 7E070000 		.4byte	.LASF31
 3484 01dd 01       		.byte	0x1
 3485 01de B001     		.2byte	0x1b0
 3486 01e0 83000000 		.4byte	0x83
 3487 01e4 02       		.uleb128 0x2
 3488 01e5 91       		.byte	0x91
 3489 01e6 68       		.sleb128 -24
 3490 01e7 00       		.byte	0
 3491 01e8 13       		.uleb128 0x13
 3492 01e9 4B000000 		.4byte	.LASF32
 3493 01ed 01       		.byte	0x1
 3494 01ee D901     		.2byte	0x1d9
 3495 01f0 00000000 		.4byte	.LFB7
 3496 01f4 50000000 		.4byte	.LFE7-.LFB7
 3497 01f8 01       		.uleb128 0x1
 3498 01f9 9C       		.byte	0x9c
 3499 01fa 0E020000 		.4byte	0x20e
 3500 01fe 11       		.uleb128 0x11
 3501 01ff D8010000 		.4byte	.LASF34
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 118


 3502 0203 01       		.byte	0x1
 3503 0204 D901     		.2byte	0x1d9
 3504 0206 83000000 		.4byte	0x83
 3505 020a 02       		.uleb128 0x2
 3506 020b 91       		.byte	0x91
 3507 020c 74       		.sleb128 -12
 3508 020d 00       		.byte	0
 3509 020e 14       		.uleb128 0x14
 3510 020f 0F020000 		.4byte	.LASF48
 3511 0213 01       		.byte	0x1
 3512 0214 FE01     		.2byte	0x1fe
 3513 0216 83000000 		.4byte	0x83
 3514 021a 00000000 		.4byte	.LFB8
 3515 021e 34000000 		.4byte	.LFE8-.LFB8
 3516 0222 01       		.uleb128 0x1
 3517 0223 9C       		.byte	0x9c
 3518 0224 47020000 		.4byte	0x247
 3519 0228 12       		.uleb128 0x12
 3520 0229 16010000 		.4byte	.LASF24
 3521 022d 01       		.byte	0x1
 3522 022e 0002     		.2byte	0x200
 3523 0230 6B000000 		.4byte	0x6b
 3524 0234 02       		.uleb128 0x2
 3525 0235 91       		.byte	0x91
 3526 0236 6F       		.sleb128 -17
 3527 0237 12       		.uleb128 0x12
 3528 0238 00050000 		.4byte	.LASF35
 3529 023c 01       		.byte	0x1
 3530 023d 0102     		.2byte	0x201
 3531 023f 83000000 		.4byte	0x83
 3532 0243 02       		.uleb128 0x2
 3533 0244 91       		.byte	0x91
 3534 0245 68       		.sleb128 -24
 3535 0246 00       		.byte	0
 3536 0247 10       		.uleb128 0x10
 3537 0248 59060000 		.4byte	.LASF36
 3538 024c 01       		.byte	0x1
 3539 024d 3502     		.2byte	0x235
 3540 024f 00000000 		.4byte	.LFB9
 3541 0253 48000000 		.4byte	.LFE9-.LFB9
 3542 0257 01       		.uleb128 0x1
 3543 0258 9C       		.byte	0x9c
 3544 0259 7C020000 		.4byte	0x27c
 3545 025d 11       		.uleb128 0x11
 3546 025e 39070000 		.4byte	.LASF37
 3547 0262 01       		.byte	0x1
 3548 0263 3502     		.2byte	0x235
 3549 0265 83000000 		.4byte	0x83
 3550 0269 02       		.uleb128 0x2
 3551 026a 91       		.byte	0x91
 3552 026b 64       		.sleb128 -28
 3553 026c 12       		.uleb128 0x12
 3554 026d 16010000 		.4byte	.LASF24
 3555 0271 01       		.byte	0x1
 3556 0272 3702     		.2byte	0x237
 3557 0274 6B000000 		.4byte	0x6b
 3558 0278 02       		.uleb128 0x2
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 119


 3559 0279 91       		.byte	0x91
 3560 027a 6F       		.sleb128 -17
 3561 027b 00       		.byte	0
 3562 027c 10       		.uleb128 0x10
 3563 027d 85030000 		.4byte	.LASF38
 3564 0281 01       		.byte	0x1
 3565 0282 6F02     		.2byte	0x26f
 3566 0284 00000000 		.4byte	.LFB10
 3567 0288 B8000000 		.4byte	.LFE10-.LFB10
 3568 028c 01       		.uleb128 0x1
 3569 028d 9C       		.byte	0x9c
 3570 028e DE020000 		.4byte	0x2de
 3571 0292 11       		.uleb128 0x11
 3572 0293 05010000 		.4byte	.LASF23
 3573 0297 01       		.byte	0x1
 3574 0298 6F02     		.2byte	0x26f
 3575 029a 83000000 		.4byte	0x83
 3576 029e 02       		.uleb128 0x2
 3577 029f 91       		.byte	0x91
 3578 02a0 4C       		.sleb128 -52
 3579 02a1 12       		.uleb128 0x12
 3580 02a2 8C000000 		.4byte	.LASF39
 3581 02a6 01       		.byte	0x1
 3582 02a7 7202     		.2byte	0x272
 3583 02a9 EE020000 		.4byte	0x2ee
 3584 02ad 02       		.uleb128 0x2
 3585 02ae 91       		.byte	0x91
 3586 02af 60       		.sleb128 -32
 3587 02b0 12       		.uleb128 0x12
 3588 02b1 B9010000 		.4byte	.LASF40
 3589 02b5 01       		.byte	0x1
 3590 02b6 7302     		.2byte	0x273
 3591 02b8 03030000 		.4byte	0x303
 3592 02bc 02       		.uleb128 0x2
 3593 02bd 91       		.byte	0x91
 3594 02be 50       		.sleb128 -48
 3595 02bf 12       		.uleb128 0x12
 3596 02c0 9B010000 		.4byte	.LASF41
 3597 02c4 01       		.byte	0x1
 3598 02c5 7D02     		.2byte	0x27d
 3599 02c7 83000000 		.4byte	0x83
 3600 02cb 02       		.uleb128 0x2
 3601 02cc 91       		.byte	0x91
 3602 02cd 6C       		.sleb128 -20
 3603 02ce 12       		.uleb128 0x12
 3604 02cf 16010000 		.4byte	.LASF24
 3605 02d3 01       		.byte	0x1
 3606 02d4 8402     		.2byte	0x284
 3607 02d6 6B000000 		.4byte	0x6b
 3608 02da 02       		.uleb128 0x2
 3609 02db 91       		.byte	0x91
 3610 02dc 6B       		.sleb128 -21
 3611 02dd 00       		.byte	0
 3612 02de 15       		.uleb128 0x15
 3613 02df C1000000 		.4byte	0xc1
 3614 02e3 EE020000 		.4byte	0x2ee
 3615 02e7 16       		.uleb128 0x16
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 120


 3616 02e8 E0000000 		.4byte	0xe0
 3617 02ec 01       		.byte	0x1
 3618 02ed 00       		.byte	0
 3619 02ee 05       		.uleb128 0x5
 3620 02ef DE020000 		.4byte	0x2de
 3621 02f3 15       		.uleb128 0x15
 3622 02f4 C1000000 		.4byte	0xc1
 3623 02f8 03030000 		.4byte	0x303
 3624 02fc 16       		.uleb128 0x16
 3625 02fd E0000000 		.4byte	0xe0
 3626 0301 03       		.byte	0x3
 3627 0302 00       		.byte	0
 3628 0303 05       		.uleb128 0x5
 3629 0304 F3020000 		.4byte	0x2f3
 3630 0308 10       		.uleb128 0x10
 3631 0309 5E050000 		.4byte	.LASF42
 3632 030d 01       		.byte	0x1
 3633 030e 4608     		.2byte	0x846
 3634 0310 00000000 		.4byte	.LFB11
 3635 0314 64000000 		.4byte	.LFE11-.LFB11
 3636 0318 01       		.uleb128 0x1
 3637 0319 9C       		.byte	0x9c
 3638 031a 2E030000 		.4byte	0x32e
 3639 031e 11       		.uleb128 0x11
 3640 031f A0050000 		.4byte	.LASF43
 3641 0323 01       		.byte	0x1
 3642 0324 4608     		.2byte	0x846
 3643 0326 83000000 		.4byte	0x83
 3644 032a 02       		.uleb128 0x2
 3645 032b 91       		.byte	0x91
 3646 032c 74       		.sleb128 -12
 3647 032d 00       		.byte	0
 3648 032e 0E       		.uleb128 0xe
 3649 032f E7060000 		.4byte	.LASF44
 3650 0333 01       		.byte	0x1
 3651 0334 6408     		.2byte	0x864
 3652 0336 00000000 		.4byte	.LFB12
 3653 033a 2C000000 		.4byte	.LFE12-.LFB12
 3654 033e 01       		.uleb128 0x1
 3655 033f 9C       		.byte	0x9c
 3656 0340 0F       		.uleb128 0xf
 3657 0341 D0020000 		.4byte	.LASF46
 3658 0345 01       		.byte	0x1
 3659 0346 7608     		.2byte	0x876
 3660 0348 83000000 		.4byte	0x83
 3661 034c 00000000 		.4byte	.LFB13
 3662 0350 18000000 		.4byte	.LFE13-.LFB13
 3663 0354 01       		.uleb128 0x1
 3664 0355 9C       		.byte	0x9c
 3665 0356 0E       		.uleb128 0xe
 3666 0357 EC010000 		.4byte	.LASF47
 3667 035b 01       		.byte	0x1
 3668 035c 8608     		.2byte	0x886
 3669 035e 00000000 		.4byte	.LFB14
 3670 0362 14000000 		.4byte	.LFE14-.LFB14
 3671 0366 01       		.uleb128 0x1
 3672 0367 9C       		.byte	0x9c
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 121


 3673 0368 17       		.uleb128 0x17
 3674 0369 20030000 		.4byte	.LASF49
 3675 036d 01       		.byte	0x1
 3676 036e A008     		.2byte	0x8a0
 3677 0370 83000000 		.4byte	0x83
 3678 0374 00000000 		.4byte	.LFB15
 3679 0378 30000000 		.4byte	.LFE15-.LFB15
 3680 037c 01       		.uleb128 0x1
 3681 037d 9C       		.byte	0x9c
 3682 037e A1030000 		.4byte	0x3a1
 3683 0382 11       		.uleb128 0x11
 3684 0383 18060000 		.4byte	.LASF50
 3685 0387 01       		.byte	0x1
 3686 0388 A008     		.2byte	0x8a0
 3687 038a 83000000 		.4byte	0x83
 3688 038e 02       		.uleb128 0x2
 3689 038f 91       		.byte	0x91
 3690 0390 6C       		.sleb128 -20
 3691 0391 12       		.uleb128 0x12
 3692 0392 88040000 		.4byte	.LASF51
 3693 0396 01       		.byte	0x1
 3694 0397 A208     		.2byte	0x8a2
 3695 0399 83000000 		.4byte	0x83
 3696 039d 02       		.uleb128 0x2
 3697 039e 91       		.byte	0x91
 3698 039f 74       		.sleb128 -12
 3699 03a0 00       		.byte	0
 3700 03a1 17       		.uleb128 0x17
 3701 03a2 67000000 		.4byte	.LASF52
 3702 03a6 01       		.byte	0x1
 3703 03a7 B708     		.2byte	0x8b7
 3704 03a9 83000000 		.4byte	0x83
 3705 03ad 00000000 		.4byte	.LFB16
 3706 03b1 24000000 		.4byte	.LFE16-.LFB16
 3707 03b5 01       		.uleb128 0x1
 3708 03b6 9C       		.byte	0x9c
 3709 03b7 CB030000 		.4byte	0x3cb
 3710 03bb 12       		.uleb128 0x12
 3711 03bc 16000000 		.4byte	.LASF53
 3712 03c0 01       		.byte	0x1
 3713 03c1 B908     		.2byte	0x8b9
 3714 03c3 83000000 		.4byte	0x83
 3715 03c7 02       		.uleb128 0x2
 3716 03c8 91       		.byte	0x91
 3717 03c9 74       		.sleb128 -12
 3718 03ca 00       		.byte	0
 3719 03cb 13       		.uleb128 0x13
 3720 03cc 97000000 		.4byte	.LASF54
 3721 03d0 01       		.byte	0x1
 3722 03d1 CE08     		.2byte	0x8ce
 3723 03d3 00000000 		.4byte	.LFB17
 3724 03d7 1C000000 		.4byte	.LFE17-.LFB17
 3725 03db 01       		.uleb128 0x1
 3726 03dc 9C       		.byte	0x9c
 3727 03dd F1030000 		.4byte	0x3f1
 3728 03e1 11       		.uleb128 0x11
 3729 03e2 0A020000 		.4byte	.LASF55
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 122


 3730 03e6 01       		.byte	0x1
 3731 03e7 CE08     		.2byte	0x8ce
 3732 03e9 83000000 		.4byte	0x83
 3733 03ed 02       		.uleb128 0x2
 3734 03ee 91       		.byte	0x91
 3735 03ef 74       		.sleb128 -12
 3736 03f0 00       		.byte	0
 3737 03f1 14       		.uleb128 0x14
 3738 03f2 47040000 		.4byte	.LASF56
 3739 03f6 01       		.byte	0x1
 3740 03f7 E708     		.2byte	0x8e7
 3741 03f9 C6000000 		.4byte	0xc6
 3742 03fd 00000000 		.4byte	.LFB18
 3743 0401 48000000 		.4byte	.LFE18-.LFB18
 3744 0405 01       		.uleb128 0x1
 3745 0406 9C       		.byte	0x9c
 3746 0407 48040000 		.4byte	0x448
 3747 040b 11       		.uleb128 0x11
 3748 040c 75030000 		.4byte	.LASF57
 3749 0410 01       		.byte	0x1
 3750 0411 E708     		.2byte	0x8e7
 3751 0413 6B000000 		.4byte	0x6b
 3752 0417 02       		.uleb128 0x2
 3753 0418 91       		.byte	0x91
 3754 0419 6F       		.sleb128 -17
 3755 041a 11       		.uleb128 0x11
 3756 041b F8040000 		.4byte	.LASF58
 3757 041f 01       		.byte	0x1
 3758 0420 E708     		.2byte	0x8e7
 3759 0422 C6000000 		.4byte	0xc6
 3760 0426 02       		.uleb128 0x2
 3761 0427 91       		.byte	0x91
 3762 0428 68       		.sleb128 -24
 3763 0429 12       		.uleb128 0x12
 3764 042a F7060000 		.4byte	.LASF59
 3765 042e 01       		.byte	0x1
 3766 042f E908     		.2byte	0x8e9
 3767 0431 C6000000 		.4byte	0xc6
 3768 0435 02       		.uleb128 0x2
 3769 0436 91       		.byte	0x91
 3770 0437 70       		.sleb128 -16
 3771 0438 12       		.uleb128 0x12
 3772 0439 00000000 		.4byte	.LASF60
 3773 043d 01       		.byte	0x1
 3774 043e EA08     		.2byte	0x8ea
 3775 0440 48040000 		.4byte	0x448
 3776 0444 02       		.uleb128 0x2
 3777 0445 91       		.byte	0x91
 3778 0446 74       		.sleb128 -12
 3779 0447 00       		.byte	0
 3780 0448 06       		.uleb128 0x6
 3781 0449 04       		.byte	0x4
 3782 044a C6000000 		.4byte	0xc6
 3783 044e 14       		.uleb128 0x14
 3784 044f F2050000 		.4byte	.LASF61
 3785 0453 01       		.byte	0x1
 3786 0454 0909     		.2byte	0x909
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 123


 3787 0456 C6000000 		.4byte	0xc6
 3788 045a 00000000 		.4byte	.LFB19
 3789 045e 34000000 		.4byte	.LFE19-.LFB19
 3790 0462 01       		.uleb128 0x1
 3791 0463 9C       		.byte	0x9c
 3792 0464 87040000 		.4byte	0x487
 3793 0468 11       		.uleb128 0x11
 3794 0469 75030000 		.4byte	.LASF57
 3795 046d 01       		.byte	0x1
 3796 046e 0909     		.2byte	0x909
 3797 0470 6B000000 		.4byte	0x6b
 3798 0474 02       		.uleb128 0x2
 3799 0475 91       		.byte	0x91
 3800 0476 6F       		.sleb128 -17
 3801 0477 12       		.uleb128 0x12
 3802 0478 00000000 		.4byte	.LASF60
 3803 047c 01       		.byte	0x1
 3804 047d 0B09     		.2byte	0x90b
 3805 047f 48040000 		.4byte	0x448
 3806 0483 02       		.uleb128 0x2
 3807 0484 91       		.byte	0x91
 3808 0485 74       		.sleb128 -12
 3809 0486 00       		.byte	0
 3810 0487 14       		.uleb128 0x14
 3811 0488 66030000 		.4byte	.LASF62
 3812 048c 01       		.byte	0x1
 3813 048d 1F09     		.2byte	0x91f
 3814 048f C6000000 		.4byte	0xc6
 3815 0493 00000000 		.4byte	.LFB20
 3816 0497 4C000000 		.4byte	.LFE20-.LFB20
 3817 049b 01       		.uleb128 0x1
 3818 049c 9C       		.byte	0x9c
 3819 049d DE040000 		.4byte	0x4de
 3820 04a1 11       		.uleb128 0x11
 3821 04a2 75030000 		.4byte	.LASF57
 3822 04a6 01       		.byte	0x1
 3823 04a7 1F09     		.2byte	0x91f
 3824 04a9 6B000000 		.4byte	0x6b
 3825 04ad 02       		.uleb128 0x2
 3826 04ae 91       		.byte	0x91
 3827 04af 6F       		.sleb128 -17
 3828 04b0 11       		.uleb128 0x11
 3829 04b1 F8040000 		.4byte	.LASF58
 3830 04b5 01       		.byte	0x1
 3831 04b6 1F09     		.2byte	0x91f
 3832 04b8 C6000000 		.4byte	0xc6
 3833 04bc 02       		.uleb128 0x2
 3834 04bd 91       		.byte	0x91
 3835 04be 68       		.sleb128 -24
 3836 04bf 12       		.uleb128 0x12
 3837 04c0 F7060000 		.4byte	.LASF59
 3838 04c4 01       		.byte	0x1
 3839 04c5 2109     		.2byte	0x921
 3840 04c7 C6000000 		.4byte	0xc6
 3841 04cb 02       		.uleb128 0x2
 3842 04cc 91       		.byte	0x91
 3843 04cd 70       		.sleb128 -16
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 124


 3844 04ce 12       		.uleb128 0x12
 3845 04cf 00000000 		.4byte	.LASF60
 3846 04d3 01       		.byte	0x1
 3847 04d4 2209     		.2byte	0x922
 3848 04d6 48040000 		.4byte	0x448
 3849 04da 02       		.uleb128 0x2
 3850 04db 91       		.byte	0x91
 3851 04dc 74       		.sleb128 -12
 3852 04dd 00       		.byte	0
 3853 04de 14       		.uleb128 0x14
 3854 04df 7F050000 		.4byte	.LASF63
 3855 04e3 01       		.byte	0x1
 3856 04e4 3B09     		.2byte	0x93b
 3857 04e6 C6000000 		.4byte	0xc6
 3858 04ea 00000000 		.4byte	.LFB21
 3859 04ee 36000000 		.4byte	.LFE21-.LFB21
 3860 04f2 01       		.uleb128 0x1
 3861 04f3 9C       		.byte	0x9c
 3862 04f4 17050000 		.4byte	0x517
 3863 04f8 11       		.uleb128 0x11
 3864 04f9 75030000 		.4byte	.LASF57
 3865 04fd 01       		.byte	0x1
 3866 04fe 3B09     		.2byte	0x93b
 3867 0500 6B000000 		.4byte	0x6b
 3868 0504 02       		.uleb128 0x2
 3869 0505 91       		.byte	0x91
 3870 0506 6F       		.sleb128 -17
 3871 0507 12       		.uleb128 0x12
 3872 0508 00000000 		.4byte	.LASF60
 3873 050c 01       		.byte	0x1
 3874 050d 3D09     		.2byte	0x93d
 3875 050f 48040000 		.4byte	0x448
 3876 0513 02       		.uleb128 0x2
 3877 0514 91       		.byte	0x91
 3878 0515 74       		.sleb128 -12
 3879 0516 00       		.byte	0
 3880 0517 10       		.uleb128 0x10
 3881 0518 47050000 		.4byte	.LASF64
 3882 051c 01       		.byte	0x1
 3883 051d 4E09     		.2byte	0x94e
 3884 051f 00000000 		.4byte	.LFB22
 3885 0523 A8000000 		.4byte	.LFE22-.LFB22
 3886 0527 01       		.uleb128 0x1
 3887 0528 9C       		.byte	0x9c
 3888 0529 79050000 		.4byte	0x579
 3889 052d 11       		.uleb128 0x11
 3890 052e 75030000 		.4byte	.LASF57
 3891 0532 01       		.byte	0x1
 3892 0533 4E09     		.2byte	0x94e
 3893 0535 6B000000 		.4byte	0x6b
 3894 0539 02       		.uleb128 0x2
 3895 053a 91       		.byte	0x91
 3896 053b 5F       		.sleb128 -33
 3897 053c 11       		.uleb128 0x11
 3898 053d 7C030000 		.4byte	.LASF65
 3899 0541 01       		.byte	0x1
 3900 0542 4E09     		.2byte	0x94e
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 125


 3901 0544 6B000000 		.4byte	0x6b
 3902 0548 02       		.uleb128 0x2
 3903 0549 91       		.byte	0x91
 3904 054a 5E       		.sleb128 -34
 3905 054b 12       		.uleb128 0x12
 3906 054c 16010000 		.4byte	.LASF24
 3907 0550 01       		.byte	0x1
 3908 0551 5009     		.2byte	0x950
 3909 0553 6B000000 		.4byte	0x6b
 3910 0557 02       		.uleb128 0x2
 3911 0558 91       		.byte	0x91
 3912 0559 6B       		.sleb128 -21
 3913 055a 12       		.uleb128 0x12
 3914 055b E6010000 		.4byte	.LASF66
 3915 055f 01       		.byte	0x1
 3916 0560 5109     		.2byte	0x951
 3917 0562 83000000 		.4byte	0x83
 3918 0566 02       		.uleb128 0x2
 3919 0567 91       		.byte	0x91
 3920 0568 6C       		.sleb128 -20
 3921 0569 12       		.uleb128 0x12
 3922 056a 6C020000 		.4byte	.LASF67
 3923 056e 01       		.byte	0x1
 3924 056f 5209     		.2byte	0x952
 3925 0571 83000000 		.4byte	0x83
 3926 0575 02       		.uleb128 0x2
 3927 0576 91       		.byte	0x91
 3928 0577 64       		.sleb128 -28
 3929 0578 00       		.byte	0
 3930 0579 14       		.uleb128 0x14
 3931 057a 40020000 		.4byte	.LASF68
 3932 057e 01       		.byte	0x1
 3933 057f 7009     		.2byte	0x970
 3934 0581 6B000000 		.4byte	0x6b
 3935 0585 00000000 		.4byte	.LFB23
 3936 0589 58000000 		.4byte	.LFE23-.LFB23
 3937 058d 01       		.uleb128 0x1
 3938 058e 9C       		.byte	0x9c
 3939 058f B2050000 		.4byte	0x5b2
 3940 0593 11       		.uleb128 0x11
 3941 0594 75030000 		.4byte	.LASF57
 3942 0598 01       		.byte	0x1
 3943 0599 7009     		.2byte	0x970
 3944 059b 6B000000 		.4byte	0x6b
 3945 059f 02       		.uleb128 0x2
 3946 05a0 91       		.byte	0x91
 3947 05a1 6F       		.sleb128 -17
 3948 05a2 12       		.uleb128 0x12
 3949 05a3 7C030000 		.4byte	.LASF65
 3950 05a7 01       		.byte	0x1
 3951 05a8 7209     		.2byte	0x972
 3952 05aa 6B000000 		.4byte	0x6b
 3953 05ae 02       		.uleb128 0x2
 3954 05af 91       		.byte	0x91
 3955 05b0 77       		.sleb128 -9
 3956 05b1 00       		.byte	0
 3957 05b2 13       		.uleb128 0x13
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 126


 3958 05b3 E6050000 		.4byte	.LASF69
 3959 05b7 01       		.byte	0x1
 3960 05b8 8509     		.2byte	0x985
 3961 05ba 00000000 		.4byte	.LFB24
 3962 05be 2C000000 		.4byte	.LFE24-.LFB24
 3963 05c2 01       		.uleb128 0x1
 3964 05c3 9C       		.byte	0x9c
 3965 05c4 D8050000 		.4byte	0x5d8
 3966 05c8 11       		.uleb128 0x11
 3967 05c9 75030000 		.4byte	.LASF57
 3968 05cd 01       		.byte	0x1
 3969 05ce 8509     		.2byte	0x985
 3970 05d0 6B000000 		.4byte	0x6b
 3971 05d4 02       		.uleb128 0x2
 3972 05d5 91       		.byte	0x91
 3973 05d6 77       		.sleb128 -9
 3974 05d7 00       		.byte	0
 3975 05d8 17       		.uleb128 0x17
 3976 05d9 DD000000 		.4byte	.LASF70
 3977 05dd 01       		.byte	0x1
 3978 05de 9709     		.2byte	0x997
 3979 05e0 6B000000 		.4byte	0x6b
 3980 05e4 00000000 		.4byte	.LFB25
 3981 05e8 30000000 		.4byte	.LFE25-.LFB25
 3982 05ec 01       		.uleb128 0x1
 3983 05ed 9C       		.byte	0x9c
 3984 05ee 02060000 		.4byte	0x602
 3985 05f2 11       		.uleb128 0x11
 3986 05f3 75030000 		.4byte	.LASF57
 3987 05f7 01       		.byte	0x1
 3988 05f8 9709     		.2byte	0x997
 3989 05fa 6B000000 		.4byte	0x6b
 3990 05fe 02       		.uleb128 0x2
 3991 05ff 91       		.byte	0x91
 3992 0600 77       		.sleb128 -9
 3993 0601 00       		.byte	0
 3994 0602 13       		.uleb128 0x13
 3995 0603 AC010000 		.4byte	.LASF71
 3996 0607 01       		.byte	0x1
 3997 0608 A709     		.2byte	0x9a7
 3998 060a 00000000 		.4byte	.LFB26
 3999 060e 2C000000 		.4byte	.LFE26-.LFB26
 4000 0612 01       		.uleb128 0x1
 4001 0613 9C       		.byte	0x9c
 4002 0614 28060000 		.4byte	0x628
 4003 0618 11       		.uleb128 0x11
 4004 0619 75030000 		.4byte	.LASF57
 4005 061d 01       		.byte	0x1
 4006 061e A709     		.2byte	0x9a7
 4007 0620 6B000000 		.4byte	0x6b
 4008 0624 02       		.uleb128 0x2
 4009 0625 91       		.byte	0x91
 4010 0626 77       		.sleb128 -9
 4011 0627 00       		.byte	0
 4012 0628 13       		.uleb128 0x13
 4013 0629 FB020000 		.4byte	.LASF72
 4014 062d 01       		.byte	0x1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 127


 4015 062e B509     		.2byte	0x9b5
 4016 0630 00000000 		.4byte	.LFB27
 4017 0634 2C000000 		.4byte	.LFE27-.LFB27
 4018 0638 01       		.uleb128 0x1
 4019 0639 9C       		.byte	0x9c
 4020 063a 4E060000 		.4byte	0x64e
 4021 063e 11       		.uleb128 0x11
 4022 063f 75030000 		.4byte	.LASF57
 4023 0643 01       		.byte	0x1
 4024 0644 B509     		.2byte	0x9b5
 4025 0646 6B000000 		.4byte	0x6b
 4026 064a 02       		.uleb128 0x2
 4027 064b 91       		.byte	0x91
 4028 064c 77       		.sleb128 -9
 4029 064d 00       		.byte	0
 4030 064e 13       		.uleb128 0x13
 4031 064f DA040000 		.4byte	.LASF73
 4032 0653 01       		.byte	0x1
 4033 0654 C409     		.2byte	0x9c4
 4034 0656 00000000 		.4byte	.LFB28
 4035 065a 2C000000 		.4byte	.LFE28-.LFB28
 4036 065e 01       		.uleb128 0x1
 4037 065f 9C       		.byte	0x9c
 4038 0660 74060000 		.4byte	0x674
 4039 0664 11       		.uleb128 0x11
 4040 0665 75030000 		.4byte	.LASF57
 4041 0669 01       		.byte	0x1
 4042 066a C409     		.2byte	0x9c4
 4043 066c 6B000000 		.4byte	0x6b
 4044 0670 02       		.uleb128 0x2
 4045 0671 91       		.byte	0x91
 4046 0672 77       		.sleb128 -9
 4047 0673 00       		.byte	0
 4048 0674 13       		.uleb128 0x13
 4049 0675 AA050000 		.4byte	.LASF74
 4050 0679 01       		.byte	0x1
 4051 067a D309     		.2byte	0x9d3
 4052 067c 00000000 		.4byte	.LFB29
 4053 0680 16000000 		.4byte	.LFE29-.LFB29
 4054 0684 01       		.uleb128 0x1
 4055 0685 9C       		.byte	0x9c
 4056 0686 9A060000 		.4byte	0x69a
 4057 068a 11       		.uleb128 0x11
 4058 068b 18060000 		.4byte	.LASF50
 4059 068f 01       		.byte	0x1
 4060 0690 D309     		.2byte	0x9d3
 4061 0692 6B000000 		.4byte	0x6b
 4062 0696 02       		.uleb128 0x2
 4063 0697 91       		.byte	0x91
 4064 0698 77       		.sleb128 -9
 4065 0699 00       		.byte	0
 4066 069a 0E       		.uleb128 0xe
 4067 069b B4000000 		.4byte	.LASF75
 4068 069f 01       		.byte	0x1
 4069 06a0 EB09     		.2byte	0x9eb
 4070 06a2 00000000 		.4byte	.LFB30
 4071 06a6 24000000 		.4byte	.LFE30-.LFB30
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 128


 4072 06aa 01       		.uleb128 0x1
 4073 06ab 9C       		.byte	0x9c
 4074 06ac 10       		.uleb128 0x10
 4075 06ad AD060000 		.4byte	.LASF76
 4076 06b1 01       		.byte	0x1
 4077 06b2 FF09     		.2byte	0x9ff
 4078 06b4 00000000 		.4byte	.LFB31
 4079 06b8 4C000000 		.4byte	.LFE31-.LFB31
 4080 06bc 01       		.uleb128 0x1
 4081 06bd 9C       		.byte	0x9c
 4082 06be D2060000 		.4byte	0x6d2
 4083 06c2 11       		.uleb128 0x11
 4084 06c3 8E050000 		.4byte	.LASF77
 4085 06c7 01       		.byte	0x1
 4086 06c8 FF09     		.2byte	0x9ff
 4087 06ca 83000000 		.4byte	0x83
 4088 06ce 02       		.uleb128 0x2
 4089 06cf 91       		.byte	0x91
 4090 06d0 74       		.sleb128 -12
 4091 06d1 00       		.byte	0
 4092 06d2 10       		.uleb128 0x10
 4093 06d3 0E060000 		.4byte	.LASF78
 4094 06d7 01       		.byte	0x1
 4095 06d8 160A     		.2byte	0xa16
 4096 06da 00000000 		.4byte	.LFB32
 4097 06de 28000000 		.4byte	.LFE32-.LFB32
 4098 06e2 01       		.uleb128 0x1
 4099 06e3 9C       		.byte	0x9c
 4100 06e4 F8060000 		.4byte	0x6f8
 4101 06e8 11       		.uleb128 0x11
 4102 06e9 71070000 		.4byte	.LASF79
 4103 06ed 01       		.byte	0x1
 4104 06ee 160A     		.2byte	0xa16
 4105 06f0 77000000 		.4byte	0x77
 4106 06f4 02       		.uleb128 0x2
 4107 06f5 91       		.byte	0x91
 4108 06f6 76       		.sleb128 -10
 4109 06f7 00       		.byte	0
 4110 06f8 10       		.uleb128 0x10
 4111 06f9 0A010000 		.4byte	.LASF80
 4112 06fd 01       		.byte	0x1
 4113 06fe 240A     		.2byte	0xa24
 4114 0700 00000000 		.4byte	.LFB33
 4115 0704 84000000 		.4byte	.LFE33-.LFB33
 4116 0708 01       		.uleb128 0x1
 4117 0709 9C       		.byte	0x9c
 4118 070a 1E070000 		.4byte	0x71e
 4119 070e 11       		.uleb128 0x11
 4120 070f 05010000 		.4byte	.LASF23
 4121 0713 01       		.byte	0x1
 4122 0714 240A     		.2byte	0xa24
 4123 0716 83000000 		.4byte	0x83
 4124 071a 02       		.uleb128 0x2
 4125 071b 91       		.byte	0x91
 4126 071c 74       		.sleb128 -12
 4127 071d 00       		.byte	0
 4128 071e 18       		.uleb128 0x18
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 129


 4129 071f 79040000 		.4byte	.LASF81
 4130 0723 01       		.byte	0x1
 4131 0724 440A     		.2byte	0xa44
 4132 0726 00000000 		.4byte	.LFB34
 4133 072a 24000000 		.4byte	.LFE34-.LFB34
 4134 072e 01       		.uleb128 0x1
 4135 072f 9C       		.byte	0x9c
 4136 0730 10       		.uleb128 0x10
 4137 0731 5E020000 		.4byte	.LASF82
 4138 0735 01       		.byte	0x1
 4139 0736 610A     		.2byte	0xa61
 4140 0738 00000000 		.4byte	.LFB35
 4141 073c 60000000 		.4byte	.LFE35-.LFB35
 4142 0740 01       		.uleb128 0x1
 4143 0741 9C       		.byte	0x9c
 4144 0742 54070000 		.4byte	0x754
 4145 0746 19       		.uleb128 0x19
 4146 0747 6900     		.ascii	"i\000"
 4147 0749 01       		.byte	0x1
 4148 074a 630A     		.2byte	0xa63
 4149 074c 83000000 		.4byte	0x83
 4150 0750 02       		.uleb128 0x2
 4151 0751 91       		.byte	0x91
 4152 0752 74       		.sleb128 -12
 4153 0753 00       		.byte	0
 4154 0754 18       		.uleb128 0x18
 4155 0755 49060000 		.4byte	.LASF83
 4156 0759 01       		.byte	0x1
 4157 075a 7F0A     		.2byte	0xa7f
 4158 075c 00000000 		.4byte	.LFB36
 4159 0760 20000000 		.4byte	.LFE36-.LFB36
 4160 0764 01       		.uleb128 0x1
 4161 0765 9C       		.byte	0x9c
 4162 0766 0E       		.uleb128 0xe
 4163 0767 2B070000 		.4byte	.LASF84
 4164 076b 01       		.byte	0x1
 4165 076c 900A     		.2byte	0xa90
 4166 076e 00000000 		.4byte	.LFB37
 4167 0772 1C000000 		.4byte	.LFE37-.LFB37
 4168 0776 01       		.uleb128 0x1
 4169 0777 9C       		.byte	0x9c
 4170 0778 0E       		.uleb128 0xe
 4171 0779 C4000000 		.4byte	.LASF85
 4172 077d 01       		.byte	0x1
 4173 077e A00A     		.2byte	0xaa0
 4174 0780 00000000 		.4byte	.LFB38
 4175 0784 1C000000 		.4byte	.LFE38-.LFB38
 4176 0788 01       		.uleb128 0x1
 4177 0789 9C       		.byte	0x9c
 4178 078a 0E       		.uleb128 0xe
 4179 078b CD060000 		.4byte	.LASF86
 4180 078f 01       		.byte	0x1
 4181 0790 B00A     		.2byte	0xab0
 4182 0792 00000000 		.4byte	.LFB39
 4183 0796 1C000000 		.4byte	.LFE39-.LFB39
 4184 079a 01       		.uleb128 0x1
 4185 079b 9C       		.byte	0x9c
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 130


 4186 079c 13       		.uleb128 0x13
 4187 079d 85070000 		.4byte	.LASF87
 4188 07a1 01       		.byte	0x1
 4189 07a2 C10A     		.2byte	0xac1
 4190 07a4 00000000 		.4byte	.LFB40
 4191 07a8 20000000 		.4byte	.LFE40-.LFB40
 4192 07ac 01       		.uleb128 0x1
 4193 07ad 9C       		.byte	0x9c
 4194 07ae C2070000 		.4byte	0x7c2
 4195 07b2 11       		.uleb128 0x11
 4196 07b3 6C020000 		.4byte	.LASF67
 4197 07b7 01       		.byte	0x1
 4198 07b8 C10A     		.2byte	0xac1
 4199 07ba 83000000 		.4byte	0x83
 4200 07be 02       		.uleb128 0x2
 4201 07bf 91       		.byte	0x91
 4202 07c0 74       		.sleb128 -12
 4203 07c1 00       		.byte	0
 4204 07c2 0F       		.uleb128 0xf
 4205 07c3 2D010000 		.4byte	.LASF88
 4206 07c7 01       		.byte	0x1
 4207 07c8 D10A     		.2byte	0xad1
 4208 07ca 83000000 		.4byte	0x83
 4209 07ce 00000000 		.4byte	.LFB41
 4210 07d2 18000000 		.4byte	.LFE41-.LFB41
 4211 07d6 01       		.uleb128 0x1
 4212 07d7 9C       		.byte	0x9c
 4213 07d8 0F       		.uleb128 0xf
 4214 07d9 27050000 		.4byte	.LASF89
 4215 07dd 01       		.byte	0x1
 4216 07de E10A     		.2byte	0xae1
 4217 07e0 83000000 		.4byte	0x83
 4218 07e4 00000000 		.4byte	.LFB42
 4219 07e8 18000000 		.4byte	.LFE42-.LFB42
 4220 07ec 01       		.uleb128 0x1
 4221 07ed 9C       		.byte	0x9c
 4222 07ee 13       		.uleb128 0x13
 4223 07ef 4E030000 		.4byte	.LASF90
 4224 07f3 01       		.byte	0x1
 4225 07f4 010B     		.2byte	0xb01
 4226 07f6 00000000 		.4byte	.LFB43
 4227 07fa 34000000 		.4byte	.LFE43-.LFB43
 4228 07fe 01       		.uleb128 0x1
 4229 07ff 9C       		.byte	0x9c
 4230 0800 14080000 		.4byte	0x814
 4231 0804 11       		.uleb128 0x11
 4232 0805 72020000 		.4byte	.LASF91
 4233 0809 01       		.byte	0x1
 4234 080a 010B     		.2byte	0xb01
 4235 080c 83000000 		.4byte	0x83
 4236 0810 02       		.uleb128 0x2
 4237 0811 91       		.byte	0x91
 4238 0812 74       		.sleb128 -12
 4239 0813 00       		.byte	0
 4240 0814 0F       		.uleb128 0xf
 4241 0815 B5060000 		.4byte	.LASF92
 4242 0819 01       		.byte	0x1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 131


 4243 081a 1A0B     		.2byte	0xb1a
 4244 081c 83000000 		.4byte	0x83
 4245 0820 00000000 		.4byte	.LFB44
 4246 0824 18000000 		.4byte	.LFE44-.LFB44
 4247 0828 01       		.uleb128 0x1
 4248 0829 9C       		.byte	0x9c
 4249 082a 0F       		.uleb128 0xf
 4250 082b 8C020000 		.4byte	.LASF93
 4251 082f 01       		.byte	0x1
 4252 0830 310B     		.2byte	0xb31
 4253 0832 83000000 		.4byte	0x83
 4254 0836 00000000 		.4byte	.LFB45
 4255 083a 18000000 		.4byte	.LFE45-.LFB45
 4256 083e 01       		.uleb128 0x1
 4257 083f 9C       		.byte	0x9c
 4258 0840 0E       		.uleb128 0xe
 4259 0841 AF020000 		.4byte	.LASF94
 4260 0845 01       		.byte	0x1
 4261 0846 3E0B     		.2byte	0xb3e
 4262 0848 00000000 		.4byte	.LFB46
 4263 084c 14000000 		.4byte	.LFE46-.LFB46
 4264 0850 01       		.uleb128 0x1
 4265 0851 9C       		.byte	0x9c
 4266 0852 17       		.uleb128 0x17
 4267 0853 70060000 		.4byte	.LASF95
 4268 0857 01       		.byte	0x1
 4269 0858 610B     		.2byte	0xb61
 4270 085a E7000000 		.4byte	0xe7
 4271 085e 00000000 		.4byte	.LFB47
 4272 0862 2C000000 		.4byte	.LFE47-.LFB47
 4273 0866 01       		.uleb128 0x1
 4274 0867 9C       		.byte	0x9c
 4275 0868 9A080000 		.4byte	0x89a
 4276 086c 11       		.uleb128 0x11
 4277 086d 75030000 		.4byte	.LASF57
 4278 0871 01       		.byte	0x1
 4279 0872 610B     		.2byte	0xb61
 4280 0874 83000000 		.4byte	0x83
 4281 0878 02       		.uleb128 0x2
 4282 0879 91       		.byte	0x91
 4283 087a 6C       		.sleb128 -20
 4284 087b 11       		.uleb128 0x11
 4285 087c 0D050000 		.4byte	.LASF96
 4286 0880 01       		.byte	0x1
 4287 0881 610B     		.2byte	0xb61
 4288 0883 E7000000 		.4byte	0xe7
 4289 0887 02       		.uleb128 0x2
 4290 0888 91       		.byte	0x91
 4291 0889 68       		.sleb128 -24
 4292 088a 12       		.uleb128 0x12
 4293 088b 60000000 		.4byte	.LASF97
 4294 088f 01       		.byte	0x1
 4295 0890 630B     		.2byte	0xb63
 4296 0892 E7000000 		.4byte	0xe7
 4297 0896 02       		.uleb128 0x2
 4298 0897 91       		.byte	0x91
 4299 0898 74       		.sleb128 -12
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 132


 4300 0899 00       		.byte	0
 4301 089a 17       		.uleb128 0x17
 4302 089b 0B030000 		.4byte	.LASF98
 4303 089f 01       		.byte	0x1
 4304 08a0 790B     		.2byte	0xb79
 4305 08a2 E7000000 		.4byte	0xe7
 4306 08a6 00000000 		.4byte	.LFB48
 4307 08aa 1C000000 		.4byte	.LFE48-.LFB48
 4308 08ae 01       		.uleb128 0x1
 4309 08af 9C       		.byte	0x9c
 4310 08b0 C4080000 		.4byte	0x8c4
 4311 08b4 11       		.uleb128 0x11
 4312 08b5 75030000 		.4byte	.LASF57
 4313 08b9 01       		.byte	0x1
 4314 08ba 790B     		.2byte	0xb79
 4315 08bc 83000000 		.4byte	0x83
 4316 08c0 02       		.uleb128 0x2
 4317 08c1 91       		.byte	0x91
 4318 08c2 74       		.sleb128 -12
 4319 08c3 00       		.byte	0
 4320 08c4 1A       		.uleb128 0x1a
 4321 08c5 98070000 		.4byte	.LASF119
 4322 08c9 01       		.byte	0x1
 4323 08ca 860B     		.2byte	0xb86
 4324 08cc 00000000 		.4byte	.LFB49
 4325 08d0 44000000 		.4byte	.LFE49-.LFB49
 4326 08d4 01       		.uleb128 0x1
 4327 08d5 9C       		.byte	0x9c
 4328 08d6 E8080000 		.4byte	0x8e8
 4329 08da 19       		.uleb128 0x19
 4330 08db 6900     		.ascii	"i\000"
 4331 08dd 01       		.byte	0x1
 4332 08de 880B     		.2byte	0xb88
 4333 08e0 83000000 		.4byte	0x83
 4334 08e4 02       		.uleb128 0x2
 4335 08e5 91       		.byte	0x91
 4336 08e6 74       		.sleb128 -12
 4337 08e7 00       		.byte	0
 4338 08e8 13       		.uleb128 0x13
 4339 08e9 7E020000 		.4byte	.LASF99
 4340 08ed 01       		.byte	0x1
 4341 08ee A60B     		.2byte	0xba6
 4342 08f0 00000000 		.4byte	.LFB50
 4343 08f4 C0000000 		.4byte	.LFE50-.LFB50
 4344 08f8 01       		.uleb128 0x1
 4345 08f9 9C       		.byte	0x9c
 4346 08fa 0E090000 		.4byte	0x90e
 4347 08fe 11       		.uleb128 0x11
 4348 08ff 98060000 		.4byte	.LASF100
 4349 0903 01       		.byte	0x1
 4350 0904 A60B     		.2byte	0xba6
 4351 0906 0E090000 		.4byte	0x90e
 4352 090a 02       		.uleb128 0x2
 4353 090b 91       		.byte	0x91
 4354 090c 74       		.sleb128 -12
 4355 090d 00       		.byte	0
 4356 090e 06       		.uleb128 0x6
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 133


 4357 090f 04       		.byte	0x4
 4358 0910 83000000 		.4byte	0x83
 4359 0914 13       		.uleb128 0x13
 4360 0915 B1050000 		.4byte	.LASF101
 4361 0919 01       		.byte	0x1
 4362 091a D20B     		.2byte	0xbd2
 4363 091c 00000000 		.4byte	.LFB51
 4364 0920 38000000 		.4byte	.LFE51-.LFB51
 4365 0924 01       		.uleb128 0x1
 4366 0925 9C       		.byte	0x9c
 4367 0926 49090000 		.4byte	0x949
 4368 092a 11       		.uleb128 0x11
 4369 092b 95040000 		.4byte	.LASF102
 4370 092f 01       		.byte	0x1
 4371 0930 D20B     		.2byte	0xbd2
 4372 0932 83000000 		.4byte	0x83
 4373 0936 02       		.uleb128 0x2
 4374 0937 91       		.byte	0x91
 4375 0938 6C       		.sleb128 -20
 4376 0939 12       		.uleb128 0x12
 4377 093a 47030000 		.4byte	.LASF25
 4378 093e 01       		.byte	0x1
 4379 093f D40B     		.2byte	0xbd4
 4380 0941 83000000 		.4byte	0x83
 4381 0945 02       		.uleb128 0x2
 4382 0946 91       		.byte	0x91
 4383 0947 74       		.sleb128 -12
 4384 0948 00       		.byte	0
 4385 0949 13       		.uleb128 0x13
 4386 094a 28040000 		.4byte	.LASF103
 4387 094e 01       		.byte	0x1
 4388 094f ED0B     		.2byte	0xbed
 4389 0951 00000000 		.4byte	.LFB52
 4390 0955 38000000 		.4byte	.LFE52-.LFB52
 4391 0959 01       		.uleb128 0x1
 4392 095a 9C       		.byte	0x9c
 4393 095b 7E090000 		.4byte	0x97e
 4394 095f 11       		.uleb128 0x11
 4395 0960 95040000 		.4byte	.LASF102
 4396 0964 01       		.byte	0x1
 4397 0965 ED0B     		.2byte	0xbed
 4398 0967 83000000 		.4byte	0x83
 4399 096b 02       		.uleb128 0x2
 4400 096c 91       		.byte	0x91
 4401 096d 6C       		.sleb128 -20
 4402 096e 12       		.uleb128 0x12
 4403 096f 47030000 		.4byte	.LASF25
 4404 0973 01       		.byte	0x1
 4405 0974 EF0B     		.2byte	0xbef
 4406 0976 83000000 		.4byte	0x83
 4407 097a 02       		.uleb128 0x2
 4408 097b 91       		.byte	0x91
 4409 097c 74       		.sleb128 -12
 4410 097d 00       		.byte	0
 4411 097e 13       		.uleb128 0x13
 4412 097f 0D070000 		.4byte	.LASF104
 4413 0983 01       		.byte	0x1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 134


 4414 0984 080C     		.2byte	0xc08
 4415 0986 00000000 		.4byte	.LFB53
 4416 098a 38000000 		.4byte	.LFE53-.LFB53
 4417 098e 01       		.uleb128 0x1
 4418 098f 9C       		.byte	0x9c
 4419 0990 B3090000 		.4byte	0x9b3
 4420 0994 11       		.uleb128 0x11
 4421 0995 95040000 		.4byte	.LASF102
 4422 0999 01       		.byte	0x1
 4423 099a 080C     		.2byte	0xc08
 4424 099c 83000000 		.4byte	0x83
 4425 09a0 02       		.uleb128 0x2
 4426 09a1 91       		.byte	0x91
 4427 09a2 6C       		.sleb128 -20
 4428 09a3 12       		.uleb128 0x12
 4429 09a4 47030000 		.4byte	.LASF25
 4430 09a8 01       		.byte	0x1
 4431 09a9 0A0C     		.2byte	0xc0a
 4432 09ab 83000000 		.4byte	0x83
 4433 09af 02       		.uleb128 0x2
 4434 09b0 91       		.byte	0x91
 4435 09b1 74       		.sleb128 -12
 4436 09b2 00       		.byte	0
 4437 09b3 10       		.uleb128 0x10
 4438 09b4 B6040000 		.4byte	.LASF105
 4439 09b8 01       		.byte	0x1
 4440 09b9 250C     		.2byte	0xc25
 4441 09bb 00000000 		.4byte	.LFB54
 4442 09bf A0000000 		.4byte	.LFE54-.LFB54
 4443 09c3 01       		.uleb128 0x1
 4444 09c4 9C       		.byte	0x9c
 4445 09c5 F7090000 		.4byte	0x9f7
 4446 09c9 11       		.uleb128 0x11
 4447 09ca A4000000 		.4byte	.LASF106
 4448 09ce 01       		.byte	0x1
 4449 09cf 250C     		.2byte	0xc25
 4450 09d1 83000000 		.4byte	0x83
 4451 09d5 02       		.uleb128 0x2
 4452 09d6 91       		.byte	0x91
 4453 09d7 6C       		.sleb128 -20
 4454 09d8 11       		.uleb128 0x11
 4455 09d9 95040000 		.4byte	.LASF102
 4456 09dd 01       		.byte	0x1
 4457 09de 250C     		.2byte	0xc25
 4458 09e0 83000000 		.4byte	0x83
 4459 09e4 02       		.uleb128 0x2
 4460 09e5 91       		.byte	0x91
 4461 09e6 68       		.sleb128 -24
 4462 09e7 12       		.uleb128 0x12
 4463 09e8 47030000 		.4byte	.LASF25
 4464 09ec 01       		.byte	0x1
 4465 09ed 270C     		.2byte	0xc27
 4466 09ef 83000000 		.4byte	0x83
 4467 09f3 02       		.uleb128 0x2
 4468 09f4 91       		.byte	0x91
 4469 09f5 74       		.sleb128 -12
 4470 09f6 00       		.byte	0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 135


 4471 09f7 15       		.uleb128 0x15
 4472 09f8 E7000000 		.4byte	0xe7
 4473 09fc 070A0000 		.4byte	0xa07
 4474 0a00 16       		.uleb128 0x16
 4475 0a01 E0000000 		.4byte	0xe0
 4476 0a05 04       		.byte	0x4
 4477 0a06 00       		.byte	0
 4478 0a07 0D       		.uleb128 0xd
 4479 0a08 85060000 		.4byte	.LASF107
 4480 0a0c 01       		.byte	0x1
 4481 0a0d 22       		.byte	0x22
 4482 0a0e F7090000 		.4byte	0x9f7
 4483 0a12 05       		.uleb128 0x5
 4484 0a13 03       		.byte	0x3
 4485 0a14 00000000 		.4byte	CySysTickCallbacks
 4486 0a18 1B       		.uleb128 0x1b
 4487 0a19 39050000 		.4byte	.LASF108
 4488 0a1d 01       		.byte	0x1
 4489 0a1e 1B       		.byte	0x1b
 4490 0a1f 83000000 		.4byte	0x83
 4491 0a23 05       		.uleb128 0x5
 4492 0a24 03       		.byte	0x3
 4493 0a25 00000000 		.4byte	cydelayFreqHz
 4494 0a29 1B       		.uleb128 0x1b
 4495 0a2a C9010000 		.4byte	.LASF109
 4496 0a2e 01       		.byte	0x1
 4497 0a2f 1C       		.byte	0x1c
 4498 0a30 83000000 		.4byte	0x83
 4499 0a34 05       		.uleb128 0x5
 4500 0a35 03       		.byte	0x3
 4501 0a36 00000000 		.4byte	cydelayFreqKhz
 4502 0a3a 1B       		.uleb128 0x1b
 4503 0a3b FE060000 		.4byte	.LASF110
 4504 0a3f 01       		.byte	0x1
 4505 0a40 1D       		.byte	0x1d
 4506 0a41 6B000000 		.4byte	0x6b
 4507 0a45 05       		.uleb128 0x5
 4508 0a46 03       		.byte	0x3
 4509 0a47 00000000 		.4byte	cydelayFreqMhz
 4510 0a4b 1B       		.uleb128 0x1b
 4511 0a4c 51020000 		.4byte	.LASF111
 4512 0a50 01       		.byte	0x1
 4513 0a51 1E       		.byte	0x1e
 4514 0a52 83000000 		.4byte	0x83
 4515 0a56 05       		.uleb128 0x5
 4516 0a57 03       		.byte	0x3
 4517 0a58 00000000 		.4byte	cydelay32kMs
 4518 0a5c 1B       		.uleb128 0x1b
 4519 0a5d A5040000 		.4byte	.LASF112
 4520 0a61 01       		.byte	0x1
 4521 0a62 36       		.byte	0x36
 4522 0a63 83000000 		.4byte	0x83
 4523 0a67 05       		.uleb128 0x5
 4524 0a68 03       		.byte	0x3
 4525 0a69 00000000 		.4byte	CySysTickInitVar
 4526 0a6d 15       		.uleb128 0x15
 4527 0a6e 7D0A0000 		.4byte	0xa7d
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 136


 4528 0a72 7D0A0000 		.4byte	0xa7d
 4529 0a76 16       		.uleb128 0x16
 4530 0a77 E0000000 		.4byte	0xe0
 4531 0a7b 2D       		.byte	0x2d
 4532 0a7c 00       		.byte	0
 4533 0a7d 1C       		.uleb128 0x1c
 4534 0a7e 6B000000 		.4byte	0x6b
 4535 0a82 1B       		.uleb128 0x1b
 4536 0a83 16050000 		.4byte	.LASF113
 4537 0a87 01       		.byte	0x1
 4538 0a88 3B       		.byte	0x3b
 4539 0a89 930A0000 		.4byte	0xa93
 4540 0a8d 05       		.uleb128 0x5
 4541 0a8e 03       		.byte	0x3
 4542 0a8f 00000000 		.4byte	cyImoFreqMhz2Reg
 4543 0a93 1C       		.uleb128 0x1c
 4544 0a94 6D0A0000 		.4byte	0xa6d
 4545 0a98 15       		.uleb128 0x15
 4546 0a99 7D0A0000 		.4byte	0xa7d
 4547 0a9d A80A0000 		.4byte	0xaa8
 4548 0aa1 16       		.uleb128 0x16
 4549 0aa2 E0000000 		.4byte	0xe0
 4550 0aa6 16       		.byte	0x16
 4551 0aa7 00       		.byte	0
 4552 0aa8 1B       		.uleb128 0x1b
 4553 0aa9 24060000 		.4byte	.LASF114
 4554 0aad 01       		.byte	0x1
 4555 0aae 4C       		.byte	0x4c
 4556 0aaf B90A0000 		.4byte	0xab9
 4557 0ab3 05       		.uleb128 0x5
 4558 0ab4 03       		.byte	0x3
 4559 0ab5 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4560 0ab9 1C       		.uleb128 0x1c
 4561 0aba 980A0000 		.4byte	0xa98
 4562 0abe 1B       		.uleb128 0x1b
 4563 0abf 38000000 		.4byte	.LASF115
 4564 0ac3 01       		.byte	0x1
 4565 0ac4 5B       		.byte	0x5b
 4566 0ac5 83000000 		.4byte	0x83
 4567 0ac9 05       		.uleb128 0x5
 4568 0aca 03       		.byte	0x3
 4569 0acb 00000000 		.4byte	CySysClkPumpConfig
 4570 0acf 00       		.byte	0
 4571              		.section	.debug_abbrev,"",%progbits
 4572              	.Ldebug_abbrev0:
 4573 0000 01       		.uleb128 0x1
 4574 0001 11       		.uleb128 0x11
 4575 0002 01       		.byte	0x1
 4576 0003 25       		.uleb128 0x25
 4577 0004 0E       		.uleb128 0xe
 4578 0005 13       		.uleb128 0x13
 4579 0006 0B       		.uleb128 0xb
 4580 0007 03       		.uleb128 0x3
 4581 0008 0E       		.uleb128 0xe
 4582 0009 1B       		.uleb128 0x1b
 4583 000a 0E       		.uleb128 0xe
 4584 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 137


 4585 000c 17       		.uleb128 0x17
 4586 000d 11       		.uleb128 0x11
 4587 000e 01       		.uleb128 0x1
 4588 000f 10       		.uleb128 0x10
 4589 0010 17       		.uleb128 0x17
 4590 0011 00       		.byte	0
 4591 0012 00       		.byte	0
 4592 0013 02       		.uleb128 0x2
 4593 0014 24       		.uleb128 0x24
 4594 0015 00       		.byte	0
 4595 0016 0B       		.uleb128 0xb
 4596 0017 0B       		.uleb128 0xb
 4597 0018 3E       		.uleb128 0x3e
 4598 0019 0B       		.uleb128 0xb
 4599 001a 03       		.uleb128 0x3
 4600 001b 0E       		.uleb128 0xe
 4601 001c 00       		.byte	0
 4602 001d 00       		.byte	0
 4603 001e 03       		.uleb128 0x3
 4604 001f 24       		.uleb128 0x24
 4605 0020 00       		.byte	0
 4606 0021 0B       		.uleb128 0xb
 4607 0022 0B       		.uleb128 0xb
 4608 0023 3E       		.uleb128 0x3e
 4609 0024 0B       		.uleb128 0xb
 4610 0025 03       		.uleb128 0x3
 4611 0026 08       		.uleb128 0x8
 4612 0027 00       		.byte	0
 4613 0028 00       		.byte	0
 4614 0029 04       		.uleb128 0x4
 4615 002a 16       		.uleb128 0x16
 4616 002b 00       		.byte	0
 4617 002c 03       		.uleb128 0x3
 4618 002d 0E       		.uleb128 0xe
 4619 002e 3A       		.uleb128 0x3a
 4620 002f 0B       		.uleb128 0xb
 4621 0030 3B       		.uleb128 0x3b
 4622 0031 05       		.uleb128 0x5
 4623 0032 49       		.uleb128 0x49
 4624 0033 13       		.uleb128 0x13
 4625 0034 00       		.byte	0
 4626 0035 00       		.byte	0
 4627 0036 05       		.uleb128 0x5
 4628 0037 35       		.uleb128 0x35
 4629 0038 00       		.byte	0
 4630 0039 49       		.uleb128 0x49
 4631 003a 13       		.uleb128 0x13
 4632 003b 00       		.byte	0
 4633 003c 00       		.byte	0
 4634 003d 06       		.uleb128 0x6
 4635 003e 0F       		.uleb128 0xf
 4636 003f 00       		.byte	0
 4637 0040 0B       		.uleb128 0xb
 4638 0041 0B       		.uleb128 0xb
 4639 0042 49       		.uleb128 0x49
 4640 0043 13       		.uleb128 0x13
 4641 0044 00       		.byte	0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 138


 4642 0045 00       		.byte	0
 4643 0046 07       		.uleb128 0x7
 4644 0047 15       		.uleb128 0x15
 4645 0048 00       		.byte	0
 4646 0049 27       		.uleb128 0x27
 4647 004a 19       		.uleb128 0x19
 4648 004b 00       		.byte	0
 4649 004c 00       		.byte	0
 4650 004d 08       		.uleb128 0x8
 4651 004e 16       		.uleb128 0x16
 4652 004f 00       		.byte	0
 4653 0050 03       		.uleb128 0x3
 4654 0051 0E       		.uleb128 0xe
 4655 0052 3A       		.uleb128 0x3a
 4656 0053 0B       		.uleb128 0xb
 4657 0054 3B       		.uleb128 0x3b
 4658 0055 0B       		.uleb128 0xb
 4659 0056 49       		.uleb128 0x49
 4660 0057 13       		.uleb128 0x13
 4661 0058 00       		.byte	0
 4662 0059 00       		.byte	0
 4663 005a 09       		.uleb128 0x9
 4664 005b 2E       		.uleb128 0x2e
 4665 005c 00       		.byte	0
 4666 005d 3F       		.uleb128 0x3f
 4667 005e 19       		.uleb128 0x19
 4668 005f 03       		.uleb128 0x3
 4669 0060 0E       		.uleb128 0xe
 4670 0061 3A       		.uleb128 0x3a
 4671 0062 0B       		.uleb128 0xb
 4672 0063 3B       		.uleb128 0x3b
 4673 0064 0B       		.uleb128 0xb
 4674 0065 27       		.uleb128 0x27
 4675 0066 19       		.uleb128 0x19
 4676 0067 11       		.uleb128 0x11
 4677 0068 01       		.uleb128 0x1
 4678 0069 12       		.uleb128 0x12
 4679 006a 06       		.uleb128 0x6
 4680 006b 40       		.uleb128 0x40
 4681 006c 18       		.uleb128 0x18
 4682 006d 9742     		.uleb128 0x2117
 4683 006f 19       		.uleb128 0x19
 4684 0070 00       		.byte	0
 4685 0071 00       		.byte	0
 4686 0072 0A       		.uleb128 0xa
 4687 0073 2E       		.uleb128 0x2e
 4688 0074 00       		.byte	0
 4689 0075 3F       		.uleb128 0x3f
 4690 0076 19       		.uleb128 0x19
 4691 0077 03       		.uleb128 0x3
 4692 0078 0E       		.uleb128 0xe
 4693 0079 3A       		.uleb128 0x3a
 4694 007a 0B       		.uleb128 0xb
 4695 007b 3B       		.uleb128 0x3b
 4696 007c 0B       		.uleb128 0xb
 4697 007d 27       		.uleb128 0x27
 4698 007e 19       		.uleb128 0x19
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 139


 4699 007f 11       		.uleb128 0x11
 4700 0080 01       		.uleb128 0x1
 4701 0081 12       		.uleb128 0x12
 4702 0082 06       		.uleb128 0x6
 4703 0083 40       		.uleb128 0x40
 4704 0084 18       		.uleb128 0x18
 4705 0085 9642     		.uleb128 0x2116
 4706 0087 19       		.uleb128 0x19
 4707 0088 00       		.byte	0
 4708 0089 00       		.byte	0
 4709 008a 0B       		.uleb128 0xb
 4710 008b 2E       		.uleb128 0x2e
 4711 008c 01       		.byte	0x1
 4712 008d 3F       		.uleb128 0x3f
 4713 008e 19       		.uleb128 0x19
 4714 008f 03       		.uleb128 0x3
 4715 0090 0E       		.uleb128 0xe
 4716 0091 3A       		.uleb128 0x3a
 4717 0092 0B       		.uleb128 0xb
 4718 0093 3B       		.uleb128 0x3b
 4719 0094 0B       		.uleb128 0xb
 4720 0095 27       		.uleb128 0x27
 4721 0096 19       		.uleb128 0x19
 4722 0097 11       		.uleb128 0x11
 4723 0098 01       		.uleb128 0x1
 4724 0099 12       		.uleb128 0x12
 4725 009a 06       		.uleb128 0x6
 4726 009b 40       		.uleb128 0x40
 4727 009c 18       		.uleb128 0x18
 4728 009d 9642     		.uleb128 0x2116
 4729 009f 19       		.uleb128 0x19
 4730 00a0 01       		.uleb128 0x1
 4731 00a1 13       		.uleb128 0x13
 4732 00a2 00       		.byte	0
 4733 00a3 00       		.byte	0
 4734 00a4 0C       		.uleb128 0xc
 4735 00a5 34       		.uleb128 0x34
 4736 00a6 00       		.byte	0
 4737 00a7 03       		.uleb128 0x3
 4738 00a8 08       		.uleb128 0x8
 4739 00a9 3A       		.uleb128 0x3a
 4740 00aa 0B       		.uleb128 0xb
 4741 00ab 3B       		.uleb128 0x3b
 4742 00ac 0B       		.uleb128 0xb
 4743 00ad 49       		.uleb128 0x49
 4744 00ae 13       		.uleb128 0x13
 4745 00af 02       		.uleb128 0x2
 4746 00b0 18       		.uleb128 0x18
 4747 00b1 00       		.byte	0
 4748 00b2 00       		.byte	0
 4749 00b3 0D       		.uleb128 0xd
 4750 00b4 34       		.uleb128 0x34
 4751 00b5 00       		.byte	0
 4752 00b6 03       		.uleb128 0x3
 4753 00b7 0E       		.uleb128 0xe
 4754 00b8 3A       		.uleb128 0x3a
 4755 00b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 140


 4756 00ba 3B       		.uleb128 0x3b
 4757 00bb 0B       		.uleb128 0xb
 4758 00bc 49       		.uleb128 0x49
 4759 00bd 13       		.uleb128 0x13
 4760 00be 02       		.uleb128 0x2
 4761 00bf 18       		.uleb128 0x18
 4762 00c0 00       		.byte	0
 4763 00c1 00       		.byte	0
 4764 00c2 0E       		.uleb128 0xe
 4765 00c3 2E       		.uleb128 0x2e
 4766 00c4 00       		.byte	0
 4767 00c5 3F       		.uleb128 0x3f
 4768 00c6 19       		.uleb128 0x19
 4769 00c7 03       		.uleb128 0x3
 4770 00c8 0E       		.uleb128 0xe
 4771 00c9 3A       		.uleb128 0x3a
 4772 00ca 0B       		.uleb128 0xb
 4773 00cb 3B       		.uleb128 0x3b
 4774 00cc 05       		.uleb128 0x5
 4775 00cd 27       		.uleb128 0x27
 4776 00ce 19       		.uleb128 0x19
 4777 00cf 11       		.uleb128 0x11
 4778 00d0 01       		.uleb128 0x1
 4779 00d1 12       		.uleb128 0x12
 4780 00d2 06       		.uleb128 0x6
 4781 00d3 40       		.uleb128 0x40
 4782 00d4 18       		.uleb128 0x18
 4783 00d5 9742     		.uleb128 0x2117
 4784 00d7 19       		.uleb128 0x19
 4785 00d8 00       		.byte	0
 4786 00d9 00       		.byte	0
 4787 00da 0F       		.uleb128 0xf
 4788 00db 2E       		.uleb128 0x2e
 4789 00dc 00       		.byte	0
 4790 00dd 3F       		.uleb128 0x3f
 4791 00de 19       		.uleb128 0x19
 4792 00df 03       		.uleb128 0x3
 4793 00e0 0E       		.uleb128 0xe
 4794 00e1 3A       		.uleb128 0x3a
 4795 00e2 0B       		.uleb128 0xb
 4796 00e3 3B       		.uleb128 0x3b
 4797 00e4 05       		.uleb128 0x5
 4798 00e5 27       		.uleb128 0x27
 4799 00e6 19       		.uleb128 0x19
 4800 00e7 49       		.uleb128 0x49
 4801 00e8 13       		.uleb128 0x13
 4802 00e9 11       		.uleb128 0x11
 4803 00ea 01       		.uleb128 0x1
 4804 00eb 12       		.uleb128 0x12
 4805 00ec 06       		.uleb128 0x6
 4806 00ed 40       		.uleb128 0x40
 4807 00ee 18       		.uleb128 0x18
 4808 00ef 9742     		.uleb128 0x2117
 4809 00f1 19       		.uleb128 0x19
 4810 00f2 00       		.byte	0
 4811 00f3 00       		.byte	0
 4812 00f4 10       		.uleb128 0x10
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 141


 4813 00f5 2E       		.uleb128 0x2e
 4814 00f6 01       		.byte	0x1
 4815 00f7 3F       		.uleb128 0x3f
 4816 00f8 19       		.uleb128 0x19
 4817 00f9 03       		.uleb128 0x3
 4818 00fa 0E       		.uleb128 0xe
 4819 00fb 3A       		.uleb128 0x3a
 4820 00fc 0B       		.uleb128 0xb
 4821 00fd 3B       		.uleb128 0x3b
 4822 00fe 05       		.uleb128 0x5
 4823 00ff 27       		.uleb128 0x27
 4824 0100 19       		.uleb128 0x19
 4825 0101 11       		.uleb128 0x11
 4826 0102 01       		.uleb128 0x1
 4827 0103 12       		.uleb128 0x12
 4828 0104 06       		.uleb128 0x6
 4829 0105 40       		.uleb128 0x40
 4830 0106 18       		.uleb128 0x18
 4831 0107 9642     		.uleb128 0x2116
 4832 0109 19       		.uleb128 0x19
 4833 010a 01       		.uleb128 0x1
 4834 010b 13       		.uleb128 0x13
 4835 010c 00       		.byte	0
 4836 010d 00       		.byte	0
 4837 010e 11       		.uleb128 0x11
 4838 010f 05       		.uleb128 0x5
 4839 0110 00       		.byte	0
 4840 0111 03       		.uleb128 0x3
 4841 0112 0E       		.uleb128 0xe
 4842 0113 3A       		.uleb128 0x3a
 4843 0114 0B       		.uleb128 0xb
 4844 0115 3B       		.uleb128 0x3b
 4845 0116 05       		.uleb128 0x5
 4846 0117 49       		.uleb128 0x49
 4847 0118 13       		.uleb128 0x13
 4848 0119 02       		.uleb128 0x2
 4849 011a 18       		.uleb128 0x18
 4850 011b 00       		.byte	0
 4851 011c 00       		.byte	0
 4852 011d 12       		.uleb128 0x12
 4853 011e 34       		.uleb128 0x34
 4854 011f 00       		.byte	0
 4855 0120 03       		.uleb128 0x3
 4856 0121 0E       		.uleb128 0xe
 4857 0122 3A       		.uleb128 0x3a
 4858 0123 0B       		.uleb128 0xb
 4859 0124 3B       		.uleb128 0x3b
 4860 0125 05       		.uleb128 0x5
 4861 0126 49       		.uleb128 0x49
 4862 0127 13       		.uleb128 0x13
 4863 0128 02       		.uleb128 0x2
 4864 0129 18       		.uleb128 0x18
 4865 012a 00       		.byte	0
 4866 012b 00       		.byte	0
 4867 012c 13       		.uleb128 0x13
 4868 012d 2E       		.uleb128 0x2e
 4869 012e 01       		.byte	0x1
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 142


 4870 012f 3F       		.uleb128 0x3f
 4871 0130 19       		.uleb128 0x19
 4872 0131 03       		.uleb128 0x3
 4873 0132 0E       		.uleb128 0xe
 4874 0133 3A       		.uleb128 0x3a
 4875 0134 0B       		.uleb128 0xb
 4876 0135 3B       		.uleb128 0x3b
 4877 0136 05       		.uleb128 0x5
 4878 0137 27       		.uleb128 0x27
 4879 0138 19       		.uleb128 0x19
 4880 0139 11       		.uleb128 0x11
 4881 013a 01       		.uleb128 0x1
 4882 013b 12       		.uleb128 0x12
 4883 013c 06       		.uleb128 0x6
 4884 013d 40       		.uleb128 0x40
 4885 013e 18       		.uleb128 0x18
 4886 013f 9742     		.uleb128 0x2117
 4887 0141 19       		.uleb128 0x19
 4888 0142 01       		.uleb128 0x1
 4889 0143 13       		.uleb128 0x13
 4890 0144 00       		.byte	0
 4891 0145 00       		.byte	0
 4892 0146 14       		.uleb128 0x14
 4893 0147 2E       		.uleb128 0x2e
 4894 0148 01       		.byte	0x1
 4895 0149 3F       		.uleb128 0x3f
 4896 014a 19       		.uleb128 0x19
 4897 014b 03       		.uleb128 0x3
 4898 014c 0E       		.uleb128 0xe
 4899 014d 3A       		.uleb128 0x3a
 4900 014e 0B       		.uleb128 0xb
 4901 014f 3B       		.uleb128 0x3b
 4902 0150 05       		.uleb128 0x5
 4903 0151 27       		.uleb128 0x27
 4904 0152 19       		.uleb128 0x19
 4905 0153 49       		.uleb128 0x49
 4906 0154 13       		.uleb128 0x13
 4907 0155 11       		.uleb128 0x11
 4908 0156 01       		.uleb128 0x1
 4909 0157 12       		.uleb128 0x12
 4910 0158 06       		.uleb128 0x6
 4911 0159 40       		.uleb128 0x40
 4912 015a 18       		.uleb128 0x18
 4913 015b 9642     		.uleb128 0x2116
 4914 015d 19       		.uleb128 0x19
 4915 015e 01       		.uleb128 0x1
 4916 015f 13       		.uleb128 0x13
 4917 0160 00       		.byte	0
 4918 0161 00       		.byte	0
 4919 0162 15       		.uleb128 0x15
 4920 0163 01       		.uleb128 0x1
 4921 0164 01       		.byte	0x1
 4922 0165 49       		.uleb128 0x49
 4923 0166 13       		.uleb128 0x13
 4924 0167 01       		.uleb128 0x1
 4925 0168 13       		.uleb128 0x13
 4926 0169 00       		.byte	0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 143


 4927 016a 00       		.byte	0
 4928 016b 16       		.uleb128 0x16
 4929 016c 21       		.uleb128 0x21
 4930 016d 00       		.byte	0
 4931 016e 49       		.uleb128 0x49
 4932 016f 13       		.uleb128 0x13
 4933 0170 2F       		.uleb128 0x2f
 4934 0171 0B       		.uleb128 0xb
 4935 0172 00       		.byte	0
 4936 0173 00       		.byte	0
 4937 0174 17       		.uleb128 0x17
 4938 0175 2E       		.uleb128 0x2e
 4939 0176 01       		.byte	0x1
 4940 0177 3F       		.uleb128 0x3f
 4941 0178 19       		.uleb128 0x19
 4942 0179 03       		.uleb128 0x3
 4943 017a 0E       		.uleb128 0xe
 4944 017b 3A       		.uleb128 0x3a
 4945 017c 0B       		.uleb128 0xb
 4946 017d 3B       		.uleb128 0x3b
 4947 017e 05       		.uleb128 0x5
 4948 017f 27       		.uleb128 0x27
 4949 0180 19       		.uleb128 0x19
 4950 0181 49       		.uleb128 0x49
 4951 0182 13       		.uleb128 0x13
 4952 0183 11       		.uleb128 0x11
 4953 0184 01       		.uleb128 0x1
 4954 0185 12       		.uleb128 0x12
 4955 0186 06       		.uleb128 0x6
 4956 0187 40       		.uleb128 0x40
 4957 0188 18       		.uleb128 0x18
 4958 0189 9742     		.uleb128 0x2117
 4959 018b 19       		.uleb128 0x19
 4960 018c 01       		.uleb128 0x1
 4961 018d 13       		.uleb128 0x13
 4962 018e 00       		.byte	0
 4963 018f 00       		.byte	0
 4964 0190 18       		.uleb128 0x18
 4965 0191 2E       		.uleb128 0x2e
 4966 0192 00       		.byte	0
 4967 0193 3F       		.uleb128 0x3f
 4968 0194 19       		.uleb128 0x19
 4969 0195 03       		.uleb128 0x3
 4970 0196 0E       		.uleb128 0xe
 4971 0197 3A       		.uleb128 0x3a
 4972 0198 0B       		.uleb128 0xb
 4973 0199 3B       		.uleb128 0x3b
 4974 019a 05       		.uleb128 0x5
 4975 019b 27       		.uleb128 0x27
 4976 019c 19       		.uleb128 0x19
 4977 019d 11       		.uleb128 0x11
 4978 019e 01       		.uleb128 0x1
 4979 019f 12       		.uleb128 0x12
 4980 01a0 06       		.uleb128 0x6
 4981 01a1 40       		.uleb128 0x40
 4982 01a2 18       		.uleb128 0x18
 4983 01a3 9642     		.uleb128 0x2116
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 144


 4984 01a5 19       		.uleb128 0x19
 4985 01a6 00       		.byte	0
 4986 01a7 00       		.byte	0
 4987 01a8 19       		.uleb128 0x19
 4988 01a9 34       		.uleb128 0x34
 4989 01aa 00       		.byte	0
 4990 01ab 03       		.uleb128 0x3
 4991 01ac 08       		.uleb128 0x8
 4992 01ad 3A       		.uleb128 0x3a
 4993 01ae 0B       		.uleb128 0xb
 4994 01af 3B       		.uleb128 0x3b
 4995 01b0 05       		.uleb128 0x5
 4996 01b1 49       		.uleb128 0x49
 4997 01b2 13       		.uleb128 0x13
 4998 01b3 02       		.uleb128 0x2
 4999 01b4 18       		.uleb128 0x18
 5000 01b5 00       		.byte	0
 5001 01b6 00       		.byte	0
 5002 01b7 1A       		.uleb128 0x1a
 5003 01b8 2E       		.uleb128 0x2e
 5004 01b9 01       		.byte	0x1
 5005 01ba 03       		.uleb128 0x3
 5006 01bb 0E       		.uleb128 0xe
 5007 01bc 3A       		.uleb128 0x3a
 5008 01bd 0B       		.uleb128 0xb
 5009 01be 3B       		.uleb128 0x3b
 5010 01bf 05       		.uleb128 0x5
 5011 01c0 27       		.uleb128 0x27
 5012 01c1 19       		.uleb128 0x19
 5013 01c2 11       		.uleb128 0x11
 5014 01c3 01       		.uleb128 0x1
 5015 01c4 12       		.uleb128 0x12
 5016 01c5 06       		.uleb128 0x6
 5017 01c6 40       		.uleb128 0x40
 5018 01c7 18       		.uleb128 0x18
 5019 01c8 9642     		.uleb128 0x2116
 5020 01ca 19       		.uleb128 0x19
 5021 01cb 01       		.uleb128 0x1
 5022 01cc 13       		.uleb128 0x13
 5023 01cd 00       		.byte	0
 5024 01ce 00       		.byte	0
 5025 01cf 1B       		.uleb128 0x1b
 5026 01d0 34       		.uleb128 0x34
 5027 01d1 00       		.byte	0
 5028 01d2 03       		.uleb128 0x3
 5029 01d3 0E       		.uleb128 0xe
 5030 01d4 3A       		.uleb128 0x3a
 5031 01d5 0B       		.uleb128 0xb
 5032 01d6 3B       		.uleb128 0x3b
 5033 01d7 0B       		.uleb128 0xb
 5034 01d8 49       		.uleb128 0x49
 5035 01d9 13       		.uleb128 0x13
 5036 01da 3F       		.uleb128 0x3f
 5037 01db 19       		.uleb128 0x19
 5038 01dc 02       		.uleb128 0x2
 5039 01dd 18       		.uleb128 0x18
 5040 01de 00       		.byte	0
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 145


 5041 01df 00       		.byte	0
 5042 01e0 1C       		.uleb128 0x1c
 5043 01e1 26       		.uleb128 0x26
 5044 01e2 00       		.byte	0
 5045 01e3 49       		.uleb128 0x49
 5046 01e4 13       		.uleb128 0x13
 5047 01e5 00       		.byte	0
 5048 01e6 00       		.byte	0
 5049 01e7 00       		.byte	0
 5050              		.section	.debug_aranges,"",%progbits
 5051 0000 C4010000 		.4byte	0x1c4
 5052 0004 0200     		.2byte	0x2
 5053 0006 00000000 		.4byte	.Ldebug_info0
 5054 000a 04       		.byte	0x4
 5055 000b 00       		.byte	0
 5056 000c 0000     		.2byte	0
 5057 000e 0000     		.2byte	0
 5058 0010 00000000 		.4byte	.LFB1
 5059 0014 1C000000 		.4byte	.LFE1-.LFB1
 5060 0018 00000000 		.4byte	.LFB2
 5061 001c 20000000 		.4byte	.LFE2-.LFB2
 5062 0020 00000000 		.4byte	.LFB3
 5063 0024 44010000 		.4byte	.LFE3-.LFB3
 5064 0028 00000000 		.4byte	.LFB4
 5065 002c 20000000 		.4byte	.LFE4-.LFB4
 5066 0030 00000000 		.4byte	.LFB5
 5067 0034 20000000 		.4byte	.LFE5-.LFB5
 5068 0038 00000000 		.4byte	.LFB6
 5069 003c 48000000 		.4byte	.LFE6-.LFB6
 5070 0040 00000000 		.4byte	.LFB7
 5071 0044 50000000 		.4byte	.LFE7-.LFB7
 5072 0048 00000000 		.4byte	.LFB8
 5073 004c 34000000 		.4byte	.LFE8-.LFB8
 5074 0050 00000000 		.4byte	.LFB9
 5075 0054 48000000 		.4byte	.LFE9-.LFB9
 5076 0058 00000000 		.4byte	.LFB10
 5077 005c B8000000 		.4byte	.LFE10-.LFB10
 5078 0060 00000000 		.4byte	.LFB11
 5079 0064 64000000 		.4byte	.LFE11-.LFB11
 5080 0068 00000000 		.4byte	.LFB12
 5081 006c 2C000000 		.4byte	.LFE12-.LFB12
 5082 0070 00000000 		.4byte	.LFB13
 5083 0074 18000000 		.4byte	.LFE13-.LFB13
 5084 0078 00000000 		.4byte	.LFB14
 5085 007c 14000000 		.4byte	.LFE14-.LFB14
 5086 0080 00000000 		.4byte	.LFB15
 5087 0084 30000000 		.4byte	.LFE15-.LFB15
 5088 0088 00000000 		.4byte	.LFB16
 5089 008c 24000000 		.4byte	.LFE16-.LFB16
 5090 0090 00000000 		.4byte	.LFB17
 5091 0094 1C000000 		.4byte	.LFE17-.LFB17
 5092 0098 00000000 		.4byte	.LFB18
 5093 009c 48000000 		.4byte	.LFE18-.LFB18
 5094 00a0 00000000 		.4byte	.LFB19
 5095 00a4 34000000 		.4byte	.LFE19-.LFB19
 5096 00a8 00000000 		.4byte	.LFB20
 5097 00ac 4C000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 146


 5098 00b0 00000000 		.4byte	.LFB21
 5099 00b4 36000000 		.4byte	.LFE21-.LFB21
 5100 00b8 00000000 		.4byte	.LFB22
 5101 00bc A8000000 		.4byte	.LFE22-.LFB22
 5102 00c0 00000000 		.4byte	.LFB23
 5103 00c4 58000000 		.4byte	.LFE23-.LFB23
 5104 00c8 00000000 		.4byte	.LFB24
 5105 00cc 2C000000 		.4byte	.LFE24-.LFB24
 5106 00d0 00000000 		.4byte	.LFB25
 5107 00d4 30000000 		.4byte	.LFE25-.LFB25
 5108 00d8 00000000 		.4byte	.LFB26
 5109 00dc 2C000000 		.4byte	.LFE26-.LFB26
 5110 00e0 00000000 		.4byte	.LFB27
 5111 00e4 2C000000 		.4byte	.LFE27-.LFB27
 5112 00e8 00000000 		.4byte	.LFB28
 5113 00ec 2C000000 		.4byte	.LFE28-.LFB28
 5114 00f0 00000000 		.4byte	.LFB29
 5115 00f4 16000000 		.4byte	.LFE29-.LFB29
 5116 00f8 00000000 		.4byte	.LFB30
 5117 00fc 24000000 		.4byte	.LFE30-.LFB30
 5118 0100 00000000 		.4byte	.LFB31
 5119 0104 4C000000 		.4byte	.LFE31-.LFB31
 5120 0108 00000000 		.4byte	.LFB32
 5121 010c 28000000 		.4byte	.LFE32-.LFB32
 5122 0110 00000000 		.4byte	.LFB33
 5123 0114 84000000 		.4byte	.LFE33-.LFB33
 5124 0118 00000000 		.4byte	.LFB34
 5125 011c 24000000 		.4byte	.LFE34-.LFB34
 5126 0120 00000000 		.4byte	.LFB35
 5127 0124 60000000 		.4byte	.LFE35-.LFB35
 5128 0128 00000000 		.4byte	.LFB36
 5129 012c 20000000 		.4byte	.LFE36-.LFB36
 5130 0130 00000000 		.4byte	.LFB37
 5131 0134 1C000000 		.4byte	.LFE37-.LFB37
 5132 0138 00000000 		.4byte	.LFB38
 5133 013c 1C000000 		.4byte	.LFE38-.LFB38
 5134 0140 00000000 		.4byte	.LFB39
 5135 0144 1C000000 		.4byte	.LFE39-.LFB39
 5136 0148 00000000 		.4byte	.LFB40
 5137 014c 20000000 		.4byte	.LFE40-.LFB40
 5138 0150 00000000 		.4byte	.LFB41
 5139 0154 18000000 		.4byte	.LFE41-.LFB41
 5140 0158 00000000 		.4byte	.LFB42
 5141 015c 18000000 		.4byte	.LFE42-.LFB42
 5142 0160 00000000 		.4byte	.LFB43
 5143 0164 34000000 		.4byte	.LFE43-.LFB43
 5144 0168 00000000 		.4byte	.LFB44
 5145 016c 18000000 		.4byte	.LFE44-.LFB44
 5146 0170 00000000 		.4byte	.LFB45
 5147 0174 18000000 		.4byte	.LFE45-.LFB45
 5148 0178 00000000 		.4byte	.LFB46
 5149 017c 14000000 		.4byte	.LFE46-.LFB46
 5150 0180 00000000 		.4byte	.LFB47
 5151 0184 2C000000 		.4byte	.LFE47-.LFB47
 5152 0188 00000000 		.4byte	.LFB48
 5153 018c 1C000000 		.4byte	.LFE48-.LFB48
 5154 0190 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 147


 5155 0194 44000000 		.4byte	.LFE49-.LFB49
 5156 0198 00000000 		.4byte	.LFB50
 5157 019c C0000000 		.4byte	.LFE50-.LFB50
 5158 01a0 00000000 		.4byte	.LFB51
 5159 01a4 38000000 		.4byte	.LFE51-.LFB51
 5160 01a8 00000000 		.4byte	.LFB52
 5161 01ac 38000000 		.4byte	.LFE52-.LFB52
 5162 01b0 00000000 		.4byte	.LFB53
 5163 01b4 38000000 		.4byte	.LFE53-.LFB53
 5164 01b8 00000000 		.4byte	.LFB54
 5165 01bc A0000000 		.4byte	.LFE54-.LFB54
 5166 01c0 00000000 		.4byte	0
 5167 01c4 00000000 		.4byte	0
 5168              		.section	.debug_ranges,"",%progbits
 5169              	.Ldebug_ranges0:
 5170 0000 00000000 		.4byte	.LFB1
 5171 0004 1C000000 		.4byte	.LFE1
 5172 0008 00000000 		.4byte	.LFB2
 5173 000c 20000000 		.4byte	.LFE2
 5174 0010 00000000 		.4byte	.LFB3
 5175 0014 44010000 		.4byte	.LFE3
 5176 0018 00000000 		.4byte	.LFB4
 5177 001c 20000000 		.4byte	.LFE4
 5178 0020 00000000 		.4byte	.LFB5
 5179 0024 20000000 		.4byte	.LFE5
 5180 0028 00000000 		.4byte	.LFB6
 5181 002c 48000000 		.4byte	.LFE6
 5182 0030 00000000 		.4byte	.LFB7
 5183 0034 50000000 		.4byte	.LFE7
 5184 0038 00000000 		.4byte	.LFB8
 5185 003c 34000000 		.4byte	.LFE8
 5186 0040 00000000 		.4byte	.LFB9
 5187 0044 48000000 		.4byte	.LFE9
 5188 0048 00000000 		.4byte	.LFB10
 5189 004c B8000000 		.4byte	.LFE10
 5190 0050 00000000 		.4byte	.LFB11
 5191 0054 64000000 		.4byte	.LFE11
 5192 0058 00000000 		.4byte	.LFB12
 5193 005c 2C000000 		.4byte	.LFE12
 5194 0060 00000000 		.4byte	.LFB13
 5195 0064 18000000 		.4byte	.LFE13
 5196 0068 00000000 		.4byte	.LFB14
 5197 006c 14000000 		.4byte	.LFE14
 5198 0070 00000000 		.4byte	.LFB15
 5199 0074 30000000 		.4byte	.LFE15
 5200 0078 00000000 		.4byte	.LFB16
 5201 007c 24000000 		.4byte	.LFE16
 5202 0080 00000000 		.4byte	.LFB17
 5203 0084 1C000000 		.4byte	.LFE17
 5204 0088 00000000 		.4byte	.LFB18
 5205 008c 48000000 		.4byte	.LFE18
 5206 0090 00000000 		.4byte	.LFB19
 5207 0094 34000000 		.4byte	.LFE19
 5208 0098 00000000 		.4byte	.LFB20
 5209 009c 4C000000 		.4byte	.LFE20
 5210 00a0 00000000 		.4byte	.LFB21
 5211 00a4 36000000 		.4byte	.LFE21
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 148


 5212 00a8 00000000 		.4byte	.LFB22
 5213 00ac A8000000 		.4byte	.LFE22
 5214 00b0 00000000 		.4byte	.LFB23
 5215 00b4 58000000 		.4byte	.LFE23
 5216 00b8 00000000 		.4byte	.LFB24
 5217 00bc 2C000000 		.4byte	.LFE24
 5218 00c0 00000000 		.4byte	.LFB25
 5219 00c4 30000000 		.4byte	.LFE25
 5220 00c8 00000000 		.4byte	.LFB26
 5221 00cc 2C000000 		.4byte	.LFE26
 5222 00d0 00000000 		.4byte	.LFB27
 5223 00d4 2C000000 		.4byte	.LFE27
 5224 00d8 00000000 		.4byte	.LFB28
 5225 00dc 2C000000 		.4byte	.LFE28
 5226 00e0 00000000 		.4byte	.LFB29
 5227 00e4 16000000 		.4byte	.LFE29
 5228 00e8 00000000 		.4byte	.LFB30
 5229 00ec 24000000 		.4byte	.LFE30
 5230 00f0 00000000 		.4byte	.LFB31
 5231 00f4 4C000000 		.4byte	.LFE31
 5232 00f8 00000000 		.4byte	.LFB32
 5233 00fc 28000000 		.4byte	.LFE32
 5234 0100 00000000 		.4byte	.LFB33
 5235 0104 84000000 		.4byte	.LFE33
 5236 0108 00000000 		.4byte	.LFB34
 5237 010c 24000000 		.4byte	.LFE34
 5238 0110 00000000 		.4byte	.LFB35
 5239 0114 60000000 		.4byte	.LFE35
 5240 0118 00000000 		.4byte	.LFB36
 5241 011c 20000000 		.4byte	.LFE36
 5242 0120 00000000 		.4byte	.LFB37
 5243 0124 1C000000 		.4byte	.LFE37
 5244 0128 00000000 		.4byte	.LFB38
 5245 012c 1C000000 		.4byte	.LFE38
 5246 0130 00000000 		.4byte	.LFB39
 5247 0134 1C000000 		.4byte	.LFE39
 5248 0138 00000000 		.4byte	.LFB40
 5249 013c 20000000 		.4byte	.LFE40
 5250 0140 00000000 		.4byte	.LFB41
 5251 0144 18000000 		.4byte	.LFE41
 5252 0148 00000000 		.4byte	.LFB42
 5253 014c 18000000 		.4byte	.LFE42
 5254 0150 00000000 		.4byte	.LFB43
 5255 0154 34000000 		.4byte	.LFE43
 5256 0158 00000000 		.4byte	.LFB44
 5257 015c 18000000 		.4byte	.LFE44
 5258 0160 00000000 		.4byte	.LFB45
 5259 0164 18000000 		.4byte	.LFE45
 5260 0168 00000000 		.4byte	.LFB46
 5261 016c 14000000 		.4byte	.LFE46
 5262 0170 00000000 		.4byte	.LFB47
 5263 0174 2C000000 		.4byte	.LFE47
 5264 0178 00000000 		.4byte	.LFB48
 5265 017c 1C000000 		.4byte	.LFE48
 5266 0180 00000000 		.4byte	.LFB49
 5267 0184 44000000 		.4byte	.LFE49
 5268 0188 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 149


 5269 018c C0000000 		.4byte	.LFE50
 5270 0190 00000000 		.4byte	.LFB51
 5271 0194 38000000 		.4byte	.LFE51
 5272 0198 00000000 		.4byte	.LFB52
 5273 019c 38000000 		.4byte	.LFE52
 5274 01a0 00000000 		.4byte	.LFB53
 5275 01a4 38000000 		.4byte	.LFE53
 5276 01a8 00000000 		.4byte	.LFB54
 5277 01ac A0000000 		.4byte	.LFE54
 5278 01b0 00000000 		.4byte	0
 5279 01b4 00000000 		.4byte	0
 5280              		.section	.debug_line,"",%progbits
 5281              	.Ldebug_line0:
 5282 0000 54050000 		.section	.debug_str,"MS",%progbits,1
 5282      02004D00 
 5282      00000201 
 5282      FB0E0D00 
 5282      01010101 
 5283              	.LASF60:
 5284 0000 72616D56 		.ascii	"ramVectorTable\000"
 5284      6563746F 
 5284      72546162 
 5284      6C6500
 5285              	.LASF10:
 5286 000f 75696E74 		.ascii	"uint16\000"
 5286      313600
 5287              	.LASF53:
 5288 0016 696E7453 		.ascii	"intState\000"
 5288      74617465 
 5288      00
 5289              	.LASF30:
 5290 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5290      73436C6B 
 5290      57726974 
 5290      65486663 
 5290      6C6B4469 
 5291              	.LASF115:
 5292 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5292      73436C6B 
 5292      50756D70 
 5292      436F6E66 
 5292      696700
 5293              	.LASF32:
 5294 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5294      73456E61 
 5294      626C6550 
 5294      756D7043 
 5294      6C6F636B 
 5295              	.LASF97:
 5296 0060 72657456 		.ascii	"retVal\000"
 5296      616C00
 5297              	.LASF52:
 5298 0067 43794469 		.ascii	"CyDisableInts\000"
 5298      7361626C 
 5298      65496E74 
 5298      7300
 5299              	.LASF7:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 150


 5300 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 5300      206C6F6E 
 5300      6720756E 
 5300      7369676E 
 5300      65642069 
 5301              	.LASF39:
 5302 008c 70617261 		.ascii	"parameters\000"
 5302      6D657465 
 5302      727300
 5303              	.LASF54:
 5304 0097 4379456E 		.ascii	"CyEnableInts\000"
 5304      61626C65 
 5304      496E7473 
 5304      00
 5305              	.LASF106:
 5306 00a4 696E7465 		.ascii	"interfaceNumber\000"
 5306      72666163 
 5306      654E756D 
 5306      62657200 
 5307              	.LASF75:
 5308 00b4 4379536F 		.ascii	"CySoftwareReset\000"
 5308      66747761 
 5308      72655265 
 5308      73657400 
 5309              	.LASF85:
 5310 00c4 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5310      73546963 
 5310      6B456E61 
 5310      626C6549 
 5310      6E746572 
 5311              	.LASF70:
 5312 00dd 4379496E 		.ascii	"CyIntGetState\000"
 5312      74476574 
 5312      53746174 
 5312      6500
 5313              	.LASF6:
 5314 00eb 6C6F6E67 		.ascii	"long long int\000"
 5314      206C6F6E 
 5314      6720696E 
 5314      7400
 5315              	.LASF0:
 5316 00f9 7369676E 		.ascii	"signed char\000"
 5316      65642063 
 5316      68617200 
 5317              	.LASF23:
 5318 0105 66726571 		.ascii	"freq\000"
 5318      00
 5319              	.LASF80:
 5320 010a 43794465 		.ascii	"CyDelayFreq\000"
 5320      6C617946 
 5320      72657100 
 5321              	.LASF24:
 5322 0116 696E7465 		.ascii	"interruptState\000"
 5322      72727570 
 5322      74537461 
 5322      746500
 5323              	.LASF26:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 151


 5324 0125 6C664C69 		.ascii	"lfLimit\000"
 5324      6D697400 
 5325              	.LASF88:
 5326 012d 43795379 		.ascii	"CySysTickGetReload\000"
 5326      73546963 
 5326      6B476574 
 5326      52656C6F 
 5326      616400
 5327              	.LASF45:
 5328 0140 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5328      73436C6B 
 5328      496D6F47 
 5328      65745763 
 5328      6F4C6F63 
 5329              	.LASF118:
 5330 0156 433A5C55 		.ascii	"C:\\Users\\bnels\\src\\PSoC4_UART_base\\UartComm_ba"
 5330      73657273 
 5330      5C626E65 
 5330      6C735C73 
 5330      72635C50 
 5331 0184 73655C55 		.ascii	"se\\UartComm_base.cydsn\000"
 5331      61727443 
 5331      6F6D6D5F 
 5331      62617365 
 5331      2E637964 
 5332              	.LASF41:
 5333 019b 77636F4C 		.ascii	"wcoLock\000"
 5333      6F636B00 
 5334              	.LASF4:
 5335 01a3 6C6F6E67 		.ascii	"long int\000"
 5335      20696E74 
 5335      00
 5336              	.LASF71:
 5337 01ac 4379496E 		.ascii	"CyIntDisable\000"
 5337      74446973 
 5337      61626C65 
 5337      00
 5338              	.LASF40:
 5339 01b9 72656756 		.ascii	"regValues\000"
 5339      616C7565 
 5339      7300
 5340              	.LASF9:
 5341 01c3 75696E74 		.ascii	"uint8\000"
 5341      3800
 5342              	.LASF109:
 5343 01c9 63796465 		.ascii	"cydelayFreqKhz\000"
 5343      6C617946 
 5343      7265714B 
 5343      687A00
 5344              	.LASF34:
 5345 01d8 656E6162 		.ascii	"enable\000"
 5345      6C6500
 5346              	.LASF13:
 5347 01df 646F7562 		.ascii	"double\000"
 5347      6C6500
 5348              	.LASF66:
 5349 01e6 73686966 		.ascii	"shift\000"
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 152


 5349      7400
 5350              	.LASF47:
 5351 01ec 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5351      734C7664 
 5351      436C6561 
 5351      72496E74 
 5351      65727275 
 5352              	.LASF11:
 5353 0203 75696E74 		.ascii	"uint32\000"
 5353      333200
 5354              	.LASF55:
 5355 020a 6D61736B 		.ascii	"mask\000"
 5355      00
 5356              	.LASF48:
 5357 020f 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5357      73436C6B 
 5357      47657453 
 5357      7973636C 
 5357      6B536F75 
 5358              	.LASF29:
 5359 0227 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5359      73436C6B 
 5359      496D6F45 
 5359      6E61626C 
 5359      6557636F 
 5360              	.LASF68:
 5361 0240 4379496E 		.ascii	"CyIntGetPriority\000"
 5361      74476574 
 5361      5072696F 
 5361      72697479 
 5361      00
 5362              	.LASF111:
 5363 0251 63796465 		.ascii	"cydelay32kMs\000"
 5363      6C617933 
 5363      326B4D73 
 5363      00
 5364              	.LASF82:
 5365 025e 43795379 		.ascii	"CySysTickInit\000"
 5365      73546963 
 5365      6B496E69 
 5365      7400
 5366              	.LASF67:
 5367 026c 76616C75 		.ascii	"value\000"
 5367      6500
 5368              	.LASF91:
 5369 0272 636C6F63 		.ascii	"clockSource\000"
 5369      6B536F75 
 5369      72636500 
 5370              	.LASF99:
 5371 027e 43794765 		.ascii	"CyGetUniqueId\000"
 5371      74556E69 
 5371      71756549 
 5371      6400
 5372              	.LASF93:
 5373 028c 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5373      73546963 
 5373      6B476574 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 153


 5373      436F756E 
 5373      74466C61 
 5374              	.LASF8:
 5375 02a2 756E7369 		.ascii	"unsigned int\000"
 5375      676E6564 
 5375      20696E74 
 5375      00
 5376              	.LASF94:
 5377 02af 43795379 		.ascii	"CySysTickClear\000"
 5377      73546963 
 5377      6B436C65 
 5377      617200
 5378              	.LASF5:
 5379 02be 6C6F6E67 		.ascii	"long unsigned int\000"
 5379      20756E73 
 5379      69676E65 
 5379      6420696E 
 5379      7400
 5380              	.LASF46:
 5381 02d0 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5381      734C7664 
 5381      47657449 
 5381      6E746572 
 5381      72757074 
 5382              	.LASF22:
 5383 02eb 43795379 		.ascii	"CySysClkImoStop\000"
 5383      73436C6B 
 5383      496D6F53 
 5383      746F7000 
 5384              	.LASF72:
 5385 02fb 4379496E 		.ascii	"CyIntSetPending\000"
 5385      74536574 
 5385      50656E64 
 5385      696E6700 
 5386              	.LASF98:
 5387 030b 43795379 		.ascii	"CySysTickGetCallback\000"
 5387      73546963 
 5387      6B476574 
 5387      43616C6C 
 5387      6261636B 
 5388              	.LASF49:
 5389 0320 43795379 		.ascii	"CySysGetResetReason\000"
 5389      73476574 
 5389      52657365 
 5389      74526561 
 5389      736F6E00 
 5390              	.LASF3:
 5391 0334 73686F72 		.ascii	"short unsigned int\000"
 5391      7420756E 
 5391      7369676E 
 5391      65642069 
 5391      6E7400
 5392              	.LASF25:
 5393 0347 72656754 		.ascii	"regTmp\000"
 5393      6D7000
 5394              	.LASF90:
 5395 034e 43795379 		.ascii	"CySysTickSetClockSource\000"
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 154


 5395      73546963 
 5395      6B536574 
 5395      436C6F63 
 5395      6B536F75 
 5396              	.LASF62:
 5397 0366 4379496E 		.ascii	"CyIntSetVector\000"
 5397      74536574 
 5397      56656374 
 5397      6F7200
 5398              	.LASF57:
 5399 0375 6E756D62 		.ascii	"number\000"
 5399      657200
 5400              	.LASF65:
 5401 037c 7072696F 		.ascii	"priority\000"
 5401      72697479 
 5401      00
 5402              	.LASF38:
 5403 0385 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5403      73436C6B 
 5403      57726974 
 5403      65496D6F 
 5403      46726571 
 5404              	.LASF116:
 5405 039a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5405      43313120 
 5405      352E342E 
 5405      31203230 
 5405      31363036 
 5406 03cd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5406      20726576 
 5406      6973696F 
 5406      6E203233 
 5406      37373135 
 5407 0400 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5407      66756E63 
 5407      74696F6E 
 5407      2D736563 
 5407      74696F6E 
 5408              	.LASF103:
 5409 0428 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5409      73536574 
 5409      466C6173 
 5409      68416363 
 5409      65737341 
 5410              	.LASF56:
 5411 0447 4379496E 		.ascii	"CyIntSetSysVector\000"
 5411      74536574 
 5411      53797356 
 5411      6563746F 
 5411      7200
 5412              	.LASF28:
 5413 0459 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5413      73436C6B 
 5413      496D6F44 
 5413      69736162 
 5413      6C655763 
 5414              	.LASF16:
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 155


 5415 0473 72656733 		.ascii	"reg32\000"
 5415      3200
 5416              	.LASF81:
 5417 0479 43795379 		.ascii	"CySysTickStart\000"
 5417      73546963 
 5417      6B537461 
 5417      727400
 5418              	.LASF51:
 5419 0488 72657475 		.ascii	"returnStatus\000"
 5419      726E5374 
 5419      61747573 
 5419      00
 5420              	.LASF102:
 5421 0495 736F7572 		.ascii	"source\000"
 5421      636500
 5422              	.LASF19:
 5423 049c 73697A65 		.ascii	"sizetype\000"
 5423      74797065 
 5423      00
 5424              	.LASF112:
 5425 04a5 43795379 		.ascii	"CySysTickInitVar\000"
 5425      73546963 
 5425      6B496E69 
 5425      74566172 
 5425      00
 5426              	.LASF105:
 5427 04b6 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5427      73536574 
 5427      50657269 
 5427      70686572 
 5427      616C4163 
 5428              	.LASF73:
 5429 04da 4379496E 		.ascii	"CyIntClearPending\000"
 5429      74436C65 
 5429      61725065 
 5429      6E64696E 
 5429      6700
 5430              	.LASF18:
 5431 04ec 6C6F6E67 		.ascii	"long double\000"
 5431      20646F75 
 5431      626C6500 
 5432              	.LASF58:
 5433 04f8 61646472 		.ascii	"address\000"
 5433      65737300 
 5434              	.LASF35:
 5435 0500 73797363 		.ascii	"sysclkSource\000"
 5435      6C6B536F 
 5435      75726365 
 5435      00
 5436              	.LASF96:
 5437 050d 66756E63 		.ascii	"function\000"
 5437      74696F6E 
 5437      00
 5438              	.LASF113:
 5439 0516 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5439      6F467265 
 5439      714D687A 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 156


 5439      32526567 
 5439      00
 5440              	.LASF89:
 5441 0527 43795379 		.ascii	"CySysTickGetValue\000"
 5441      73546963 
 5441      6B476574 
 5441      56616C75 
 5441      6500
 5442              	.LASF108:
 5443 0539 63796465 		.ascii	"cydelayFreqHz\000"
 5443      6C617946 
 5443      72657148 
 5443      7A00
 5444              	.LASF64:
 5445 0547 4379496E 		.ascii	"CyIntSetPriority\000"
 5445      74536574 
 5445      5072696F 
 5445      72697479 
 5445      00
 5446              	.LASF12:
 5447 0558 666C6F61 		.ascii	"float\000"
 5447      7400
 5448              	.LASF42:
 5449 055e 43795379 		.ascii	"CySysLvdEnable\000"
 5449      734C7664 
 5449      456E6162 
 5449      6C6500
 5450              	.LASF20:
 5451 056d 63795379 		.ascii	"cySysTickCallback\000"
 5451      73546963 
 5451      6B43616C 
 5451      6C626163 
 5451      6B00
 5452              	.LASF63:
 5453 057f 4379496E 		.ascii	"CyIntGetVector\000"
 5453      74476574 
 5453      56656374 
 5453      6F7200
 5454              	.LASF77:
 5455 058e 6D696C6C 		.ascii	"milliseconds\000"
 5455      69736563 
 5455      6F6E6473 
 5455      00
 5456              	.LASF15:
 5457 059b 72656738 		.ascii	"reg8\000"
 5457      00
 5458              	.LASF43:
 5459 05a0 74687265 		.ascii	"threshold\000"
 5459      73686F6C 
 5459      6400
 5460              	.LASF74:
 5461 05aa 43794861 		.ascii	"CyHalt\000"
 5461      6C7400
 5462              	.LASF101:
 5463 05b1 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5463      73536574 
 5463      52616D41 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 157


 5463      63636573 
 5463      73417262 
 5464              	.LASF1:
 5465 05ce 756E7369 		.ascii	"unsigned char\000"
 5465      676E6564 
 5465      20636861 
 5465      7200
 5466              	.LASF2:
 5467 05dc 73686F72 		.ascii	"short int\000"
 5467      7420696E 
 5467      7400
 5468              	.LASF69:
 5469 05e6 4379496E 		.ascii	"CyIntEnable\000"
 5469      74456E61 
 5469      626C6500 
 5470              	.LASF61:
 5471 05f2 4379496E 		.ascii	"CyIntGetSysVector\000"
 5471      74476574 
 5471      53797356 
 5471      6563746F 
 5471      7200
 5472              	.LASF33:
 5473 0604 636C6B53 		.ascii	"clkSelect\000"
 5473      656C6563 
 5473      7400
 5474              	.LASF78:
 5475 060e 43794465 		.ascii	"CyDelayUs\000"
 5475      6C617955 
 5475      7300
 5476              	.LASF50:
 5477 0618 72656173 		.ascii	"reason\000"
 5477      6F6E00
 5478              	.LASF14:
 5479 061f 63686172 		.ascii	"char\000"
 5479      00
 5480              	.LASF114:
 5481 0624 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5481      6F467265 
 5481      714D687A 
 5481      3244706C 
 5481      6C4F6666 
 5482              	.LASF17:
 5483 063c 63796973 		.ascii	"cyisraddress\000"
 5483      72616464 
 5483      72657373 
 5483      00
 5484              	.LASF83:
 5485 0649 43795379 		.ascii	"CySysTickEnable\000"
 5485      73546963 
 5485      6B456E61 
 5485      626C6500 
 5486              	.LASF36:
 5487 0659 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5487      73436C6B 
 5487      57726974 
 5487      65537973 
 5487      636C6B44 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 158


 5488              	.LASF95:
 5489 0670 43795379 		.ascii	"CySysTickSetCallback\000"
 5489      73546963 
 5489      6B536574 
 5489      43616C6C 
 5489      6261636B 
 5490              	.LASF107:
 5491 0685 43795379 		.ascii	"CySysTickCallbacks\000"
 5491      73546963 
 5491      6B43616C 
 5491      6C626163 
 5491      6B7300
 5492              	.LASF100:
 5493 0698 756E6971 		.ascii	"uniqueId\000"
 5493      75654964 
 5493      00
 5494              	.LASF27:
 5495 06a1 666C6173 		.ascii	"flashCtlReg\000"
 5495      6843746C 
 5495      52656700 
 5496              	.LASF76:
 5497 06ad 43794465 		.ascii	"CyDelay\000"
 5497      6C617900 
 5498              	.LASF92:
 5499 06b5 43795379 		.ascii	"CySysTickGetClockSource\000"
 5499      73546963 
 5499      6B476574 
 5499      436C6F63 
 5499      6B536F75 
 5500              	.LASF86:
 5501 06cd 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5501      73546963 
 5501      6B446973 
 5501      61626C65 
 5501      496E7465 
 5502              	.LASF44:
 5503 06e7 43795379 		.ascii	"CySysLvdDisable\000"
 5503      734C7664 
 5503      44697361 
 5503      626C6500 
 5504              	.LASF59:
 5505 06f7 6F6C6449 		.ascii	"oldIsr\000"
 5505      737200
 5506              	.LASF110:
 5507 06fe 63796465 		.ascii	"cydelayFreqMhz\000"
 5507      6C617946 
 5507      7265714D 
 5507      687A00
 5508              	.LASF104:
 5509 070d 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5509      73536574 
 5509      446D6163 
 5509      41636365 
 5509      73734172 
 5510              	.LASF84:
 5511 072b 43795379 		.ascii	"CySysTickStop\000"
 5511      73546963 
ARM GAS  C:\Users\bnels\AppData\Local\Temp\ccu1IF1B.s 			page 159


 5511      6B53746F 
 5511      7000
 5512              	.LASF37:
 5513 0739 64697669 		.ascii	"divider\000"
 5513      64657200 
 5514              	.LASF21:
 5515 0741 43795379 		.ascii	"CySysClkImoStart\000"
 5515      73436C6B 
 5515      496D6F53 
 5515      74617274 
 5515      00
 5516              	.LASF117:
 5517 0752 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5517      72617465 
 5517      645F536F 
 5517      75726365 
 5517      5C50536F 
 5518              	.LASF79:
 5519 0771 6D696372 		.ascii	"microseconds\000"
 5519      6F736563 
 5519      6F6E6473 
 5519      00
 5520              	.LASF31:
 5521 077e 746D7052 		.ascii	"tmpReg\000"
 5521      656700
 5522              	.LASF87:
 5523 0785 43795379 		.ascii	"CySysTickSetReload\000"
 5523      73546963 
 5523      6B536574 
 5523      52656C6F 
 5523      616400
 5524              	.LASF119:
 5525 0798 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5525      73546963 
 5525      6B536572 
 5525      76696365 
 5525      43616C6C 
 5526              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
